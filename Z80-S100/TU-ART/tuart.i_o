	SUBTTL Input Output
;
;	****************
;	* I/O ROUTINES *
;	****************
;
;	CRT DRIVER
;
CRT	PUSH	AF		;OUTPUT A REG TO CRT
CR1	IN	A,0		;WAIT FOR READY
	AND	80H
	JR	Z,CR1		;NOT READY
	POP	AF		;GET CHAR
	PUSH	AF		;SAVE IT
	AND	7FH		;MASK OFF MSB
	OUT	1,A		;OUTPUT IT
	CP	CR		;IS IT CR
	JR	NZ,CRO		;NO - RETURN
	LD	A,LF		;YES - OUTPUT A
	CALL	CRT		; LINE FEED
CRO	POP	AF		;RESTORE AF
	RET
;
;	CURSOR POSITIONING
;
;	D=Y COORD
;	E=X COORD
;
POSC	LD	A,ESC
	CALL	CRT
	LD	A,(CURPSN)
	CALL	CRT
	LD	A,D
	ADD	A,1FH
	CALL	CRT
	LD	A,E
	ADD	A,1FH
	CALL	CRT
	RET
;
;	CLEAR SCREEN AND PRINT TITLE
;
CLS	LD	A,(CLESC)
	CALL	CRT
	LD	A,(CLESC2)
	CALL	CRT
	PSCR	PNAM
	RET
;
;	TURN CURSOR ON/OFF
;
CCRSR	LD	A,(CLESC)
	CP	1AH
	RET	Z
	CALL	CRT
	LD	A,'Z'
	CALL	CRT
	RET
;
;	PRINT STRING @ (HL),(HL+1)
;
PSCREEN	PUSH	AF
	PUSH	DE
	LD	D,(HL)
	INC	HL
	LD	E,(HL)
	INC	HL
	CALL	POSC
	POP	DE
	JR	PS1
;
;	PRINT STRING
;
;	HL->STRING ADDR
;	LAST CHAR HAS BIT 7 SET
;
PSTRING	PUSH	AF
PS1	LD	A,(HL)
	INC	HL
	CALL	CRT
	RLA
	JR	NC,PS1
	POP	AF
	RET
;
;	INPUT FROM TERMINAL
;
;	CHECK FOR INPUT AND RETURN
;	WITH ANY DATA FOUND
CHKIN	IN	A,0
	AND	40H		;DATA AVAILABLE?
	RET	Z		;NO - RETURN
	IN	A,1		;DATA PORT
	AND	7FH
	LD	(ICHAR),A
	RET
;
;
;	GET CHARACTER FROM INPUT
;
GBYTE	CALL	CHKIN
	JR	Z,GBYTE
	RET
;
;	ACC. HEX TO BIN
;
AHTB	SUB	'0'
	CP	0AH
	RET	C
	SUB	7
	CP	10H
	RET
;
;	GET 2 HEX DIGITS FROM TERMINAL
;
GNUM	LD	B,0
GNUM2	PUSH	AF		;SAVE DEFAULT
GN1	CALL	GBYTE
	CP	CR		;IF CR THEN RETURN
	JR	NZ,GN2		;WITH DEFAULT VALUE
	POP	AF		;AND CARRY RESET
	OR	A
	RET
GN2	CP	ESC		;IF ESC. RETURN
	JR	NZ,GN3		;WITH CARRY
	POP	AF		;SET.
	SCF
	RET
GN3	CALL	AHTB
	JR	C,GN4		;LEGAL CHAR
	LD	A,7
	CALL	CRT
	JR	GN1
GN4	EX	(SP),HL
	POP	HL		;TIDY STACK
	SLA	B		;B=B<<4+A
	SLA	B
	SLA	B
	SLA	B
	ADD	B
	LD	B,A
	LD	A,(ICHAR)
	CALL	CRT		;ECHO CHAR
	CALL	GNUM2		;RECURSIVE!!
	LD	A,B
	RET
;
CPHLDE	PUSH	HL		;COMPARE HL & DE
	AND	A
	SBC	HL,DE
	POP	HL
	RET
;
PUSHEM	EX	(SP),HL		;SAVE ALL REGS
	PUSH	AF
	PUSH	BC
	PUSH	DE
	JP	(HL)
;
POPEM	POP	HL		;RESTORE ALL REGS
	POP	DE
	POP	BC
	POP	AF
	EX	(SP),HL
	RET
;
HEX4	LD	A,H		;OUTPUT HL IN HEX
	CALL	HEX2
	LD	A,L
HEX2	PUSH	AF		;OUTPUT A IN HEX
	RRA
	RRA
	RRA
	RRA
	CALL	HEX
	POP	AF
HEX	AND	0FH		;OUTPUT LOW HALF
	ADD	'0'		;OF A IN HEX
	CP	'9'+1
	JR	C,HEX1
	ADD	7
HEX1	CALL	CRT
	RET
;
	SUBTTL	Storage and Data
;
;	********************
;	* STORAGE AND DATA *
;	********************
;
;	INITIALLY SET UP TO DEFAULT VALUES
;
TEMP1	DB	'T.E.M.P.'	;TEMPORARY STORAGE
;
;
TTAB	DB	1,2,8,64,128	;TIMER MASKS
;
TIME	DS	2		;INTERRUPT TIME
AUTOFLG	DS	1		;AUTOMATIC FLAG
ICHAR	DS	1		;INPUT CHAR
;
PENDM	DW	PARK		;PENDING MESSAGE
;
MENU	DB	2,1,'MENU',CR
	DB	' A - Automatic default sequence',CR
	DB	' C - Counter interrupt',CR
	DB	' E - list accumulated Errors',CR
	DB	' P - Parallel port test sequence',CR
	DB	' S - Serial port test sequence',CR
	DB	' T - Address Table changes',CR
	DM	' X - eXit - terminate testing',CR,' '
;
;
NYA	DM	12,3,'Not yet available',CR
;
ABM	DB	19,3,'Test Aborted      ',CR
	DM	'  Too Many Errors   '
PARK	DM	13,2,' '
