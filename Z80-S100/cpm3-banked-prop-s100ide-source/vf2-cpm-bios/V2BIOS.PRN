


TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 1




                        ;********************************************************
                        ;*                     V2BIOS.ASM                       *
                        ;*               FLOPPY CBIOS FOR CP/M 2.XX             *
                        ;*                     DEC 15  2003                     * 
                        ;********************************************************
                        
                        ; WRITTEN BY B. Y. TASHCHUK 1980
                        ;==================================================
                        ; MANY THANKS TO BOHDAN TASHCHUK FOR THIS CODE
                        ; AND HIS QUALITY SUPPORT OF THOSE WHO USED IT
                        ;==================================================
                        ;
                        ; B. JONES 1981
                        ; - ADDED SUPPORT FOR 9, 512 BYTE SECTORS ON
                        ;   SYSTEM TRACKS TO SUPPORT LARGER BIOS TYPES
                        ;   (MORE DRIVES, HARD DISKS, SPECIAL FUNCTIONS ETC.)
                        ; - ADDED 1024 BYTE SECTOR SUPPORT
                        ;   THIS SPEEDS UP DISK OPERATIONS BY 70% AND
                        ;   ADDS 220K MORE USEABLE SPACE
                        ; - ADDED MULTIPLE ALLOCATION BLOCK SIZE SUPPORT
                        ; - ADDED VERBOSE ASSEMBLY-TIME STRUCTURE INFORMATION
                        ;   RAM AND SECTOR USEAGE, MOVCPM VALUE AND DDT R VALUE
                        ;   END-OF-CODE/STATIC DATA AND TOTAL SIZE INFO
                        ; - ADDED 'CONTINUE' FOR HARD MEDIA DEFECTS
                        ;   THIS FEATURE ALLOWS ONE TO CONTINUE DISK
                        ;   OPERATIONS, EVEN THOUGH THE MEDIA HAS PERMINANT
                        ;   BAD SPOTS. LETS YOU RECOVER FILES YOU REALLY WANT!
                        ; - ADDED REMOTE SYSTEM CONTROL VIA MODEM
                        ; - ADDED SIMULTANEOUS TARBELL DD DMA FDC SUPPORT
                        ; - ADDED SPINWRITER SHIFT TESTING
                        ; - ADDED MULTI 'FOREIGN' DISK FORMAT SUPPORT
                        ;
                        ; B. JONES SEPT 2003
                        ; - ADDED Z80 DMA SUPPORT
                        ; - ADDED FULL FDC E.O.O. INTERRUPT SUPPORT
                        ;
                        ; B.JONES NOV. 2003
                        ; - ADDED VERSAFLOPPY II SUPPORT
                        ; - ADDED SUPPORT FOR FOUR DRIVES, UP TO 1.66 MBYTES EACH
                        ; - REMOVED REMOTE SYSTEM CONTROL
                        ; - REMOVED TARBELL DD DMA FDC SUPPORT
                        ; - REMOVED SPINWRITER SHIFT TESTING
                        ; - REMOVED Z80 DMA SUPPORT, THIS VERSION
                        ; - REMOVED FDC E.O.O. INTERRUPT SUPPORT, THIS VERSION
                        ; - REMOVED 'FOREIGN' FORMAT SUPPORT, THIS VERSION
                        ; - ADDED Z3S & VF II TEST & CONFIGURE AT STARTUP  
                        
                        
                                .PABS
                                .PHEX
                                .XLINK
                                .Z80
                        
   0022                 CPVERS  ==      22H             ;CP/M VERSION NUMBER
   0000                 BIVERS  ==      0H              ;BIOS VERSION NUMBER






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 2




   FFFF                 TRUE    ==      -1              ;TRUE AND FALSE VALUES
   0000                 FALSE   ==      #TRUE
   FFFF                 Z3S     ==      TRUE            ;THIS VERSION FOR PIO
                        
                        ;********************************************************
                        ;          CP/M SYSTEM SIZE ETC. NEXT
                        ;********************************************************
                        ; DISK DRIVE OPTIONS FIRST
                        
   0003                 NODSK   ==      3               ;NUMBER OF DISKS ALLOWED
   FFFF                 STEP    ==      TRUE    ;OLD STEP RATE SWITCH, MAY USE AGAIN
   0000                 STEPS   ==      0               ;8" STEP RATE 0=3MS STEP RATE FOR DRIVES
   0080                 STEPR   ==      080H    ;5" STEP RATE 
                                                                ;LOOK AT THE STEP SPEED TABLE FURTHER ON
                                                                ;TO SEE POSSIBLE VALUES.
   0000                 HLDOPT  ==      0               ;1 KEEP HEADS LOADED, 0 FOR UNLOADS
                        
                        ; CP/M MEMORY CALCULATIONS AND CONSTANTS
                        
                        ;================= NOTE ====================
                        ;*******************************************
                        ;BIOS SIZE FUNCTION (* 1024 BYTES)  NEXT
                        ;*******************************************
                        ;================= NOTE ====================
                        
   0003                 BIOSIZ  ==      3       ;THIS BIOS FITS WITHIN 3K
                                                ;IF YOU ENLARGE THE BIOS, YOU WILL INCREASE
                                                ;BIOSIZ BY 1 FOR EACH ADDITIONAL KILOBYTE, OR
                                                ;PART THEREOF.
                        
   0040                 MSIZ    =\      \ENTER TOTAL MEMORY SIZE IN KILOBYTES EG: 48 OR 64 \
                        
                        ;MSIZ   ==      64              ;ACTUAL AVAILABLE MEMORY SIZE
   003D                 MSIZE   ==      MSIZ-BIOSIZ     ;SUBTRACT BIOS SIZE
   A400                 BIAS    ==      (MSIZE-20)*1024 ;THE DRI BIAS FACTOR
   D800                 CCP     ==      3400H+BIAS      ;BASE OF CCP
   E006                 BDOS    ==      CCP+806H        ;BASE OF BDOS
   EE00                 BIOS    ==      CCP+1600H       ;BASE OF BIOS
   F406                 MOVECP  ==      BDOS+1400H      ;MOVECPM ADJUST
   003D                 MOVEIT  ==      MOVECP/1024
   002C                 NSECTS  ==      (BIOS-CCP)/128  ;WARM START SECTOR CNT, 128 BYTES SECTORS
   001A                 NSBIOS  ==      70-NSECTS       ;MAX SECTORS FOR CBIOS & CP/M
                                                        ;BASED ON HAVING 9, 512 BYTE SECTORS
                                                        ;ON THE SYSTEM TRACKS (0 & 1)
                                                        ;WITH 70 OF THOSE 128 BYTE LOGICAL
                                                        ;SECTORS BEING USEABLE FOR CP/M USE
                                                        ;72 LOGICAL SECTORS IS ACTUAL, BUT
                                                        ;ONE IS THE SYSTEM LOADER, AND ONE IS
                                                        ;A DISK DESCRIPTER BLOCK (DDB), THUS
                                                        ;70 ARE AVAILABLE FOR CP/M & BIOS
   0004                 CPMDSK  ==      0004H           ;CURRENT DISK NUMBER ADDR
   0003                 IOBYTE  ==      0003H           ;INTEL I/O BYTE ADDR
                        
                        ; USE SOME CONTROL CHARACTERS
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 3




   000D                 CR      ==      13
   000A                 LF      ==      10
   0007                 BELL    ==      7
   001A                 CLEAR   ==      26      ;ZEUS80 CLEAR SCREEN
                        
                        
                        ;********************************************************
                        ;*          SYSTEM DATA I/O PORT CONSTANTS NEXT
                        ;********************************************************
                        
                        ;                KEYBOARD & SCREEN
                        
                        ; MAIN CONSOLE IS SD SYSTEMS VDB-8024
                        
   0001                 TTYI    ==      1               ;TTY INPUT PORT ADDRESS
   0001                 TTYO    ==      1               ;TTY OUTPUT PORT ADDRESS
   0000                 TTYS    ==      0               ;TTY I/O STATUS PORT ADDRESS
   0002                 TTYDA   ==      2               ;TTY DATA AVAILABLE MASK
   0004                 TTYBE   ==      4               ;TTY XMIT BUFFER EMPTY MASK
                        
                        ;                   MODEM PORT
                        
   0005                 CRTI    ==      5               ;CRT INPUT PORT ADDRESS (MODEM)
   0005                 CRTO    ==      5               ;CRT OUTPUT PORT ADDRESS (MODEM)
   0004                 CRTS    ==      4               ;CRT I/O STATUS PORT ADDRESS
   0001                 CRTDA   ==      1               ;CRT DATA AVAILABLE MASK
   0080                 CRTBE   ==      80H             ;CRT XMIT BUFFER EMPTY MASK
                        
                        
                        
                        ;    PRINTER PORTS FOLLOW , PARALLEL PRINTER                    
                        ; WE HAVE TWO PORTS, WITH A COMMON DATA BUFFER
                        ; BUT INDIVIDUAL STATUS AND STOBE BITS
                        
   0006                 LSTST   ==      6               ;LIST DEVICE STATUS PORT
   0007                 LSTDAT  ==      7               ;LIST DEVICE DATA PORT
   0009                 CEN     ==      9               ;TURN ON CENTRONICS PORT
   0008                 SPIN    ==      8               ;TURN ON SPINWRITER PORT
                        
                        
                        ;          SERIAL PRINTER PORT NEXT
                        ; DEVICE OUTPUT READY MASK IS SAME AS MODEM PORT = CRTBE
                        ; INPUT DATA AVAILABLE MASK IS SAME AS MODEM = CRTDA
                        
   0002                 SERST   ==      2               ;SERIAL PRINTER STATUS
   0003                 SERDT   ==      3               ;SERIAL PRINTER DATA PORT
                                        
   0003                 CMSK    ==      00000011B       ;IOBYTE MASK FOR CONSOLE
   00C0                 LMSK    ==      11000000B       ;IOBYTE MASK FOR LIST
                        
                        ;********************************************************
                        ;                 FLOPPY DISK EQUATES.
                        ;********************************************************
                        ;********************************************************
                        ;              PIO CONTROLLER PORTS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 4




                        ;********************************************************
                        
   0053                 DCMD    ==      53H             ;Z3S COMMAND/CONTROL PORT
   0054                 W       ==      54H             ;WDC 179X ADDRESS
   0054                 WCMD    ==      W+0             ;COMMAND PORT
   0054                 WSTAT   ==      W+0             ;STATUS PORT
   0055                 WTRACK  ==      W+1             ;TRACK REG
   0056                 WSECT   ==      W+2             ;SECTOR REG
   0057                 WDATA   ==      W+3             ;DATA I/O REG
                        
                        ;********************************************************
                        ;            COMMON 179X CONTROLLER COMMANDS
                        ;********************************************************
                        
   000C                 WHOME   ==      00001100B       ;HOME COMMAND
   0080                 WREAD   ==      10000000B       ;READ SECTOR COMMAND
   00A0                 WWRITE  ==      10100000B       ;WRITE SECTOR COMMAND
   001C                 WSEEK   ==      00011100B       ;SEEK TO GIVEN TRACK COMMAND
   0010                 WUNLD   ==      00010000B       ;SEEK AND UNLOAD HEAD COMMAND
   0018                 WLOAD   ==      00011000B       ;SEEK AND LOAD HEAD COMMAND
                        
                        
                        ;********************************************************
                        ;             COMMON 179X CONTROLLER STATUS
                        ;********************************************************
                        
   0000                 WBBUSY  ==      0               ;179X BUSY STATUS BIT
   0001                 WBSID1  ==      1               ;SIDE SELECT FLAG COMMAND BIT
   0002                 WBDEL   ==      2               ;HEAD SETTLE DELAY COMMAND BIT
   0003                 WBSIDE  ==  3           ;EXPECT SIDE BIT
   0005                 WBWRIT  ==      5               ;READ/WRITE DISTINGUISHING BIT
   0004                 WBRNF   ==      4               ;RECORD NOT FOUND STATUS BIT
   009C                 WSREAD  ==      10011100B       ;READ SECTOR STATUS MASK
   00FC                 WSWRIT  ==      11111100B       ;WRITE SECTOR STATUS MASK
   0098                 WSSEEK  ==      10011000B       ;SEEK STATUS MASK
   00D0                 WFCINT  ==      11010000B       ;FORCE INTERRUPT COMMAND
                        
                        
                        ;********************************************************
                        ; PRIMARY JUMP TABLE. ALL CALLS FROM CP/M TO THE CBIOS
                        ; COME THROUGH THIS TABLE.
                        ;********************************************************
                        
   EE00                         .LOC    BIOS
                        
                        
   EE00    C3 EE52              JMP     CBOOT           ;COLD BOOT
   EE03    C3 EE63      WBOOTE: JMP     WBOOT           ;WARM BOOT
   EE06    C3 F534              JMP     CONST           ;CONSOLE STATUS
   EE09    C3 F537              JMP     CONIN           ;CONSOLE CHARACTER IN
   EE0C    C3 F53A      BIOOUT: JMP     CONOUT          ;CONSOLE CHARACTER OUT,
   EE0F    C3 F533              JMP     LIST            ;LIST CHARACTER OUT
   EE12    C3 F533              JMP     PUNCH           ;PUNCH CHARACTER OUT
   EE15    C3 F533              JMP     READER          ;READER CHARACTER IN
   EE18    C3 EFFE              JMP     HOME            ;MOVE HEAD TO HOME POSITION






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 5




   EE1B    C3 EF11              JMP     SELDSK          ;SELECT DISK
   EE1E    C3 F00D              JMP     SETTRK          ;SET TRACK NUMBER
   EE21    C3 F012              JMP     SETSEC          ;SET SECTOR NUMBER
   EE24    C3 F017              JMP     SETDMA          ;SET DMA ADDRESS
   EE27    C3 F027              JMP     READ            ;READ DISK
   EE2A    C3 F03A              JMP     WRITE           ;WRITE DISK
   EE2D    C3 F533              JMP     LISTST          ;RETURN LIST STATUS
   EE30    C3 F01C              JMP     SECTRA          ;SECTOR TRANSLATE
                        
                        
                        
                        ;********************************************************
                        ; STEP SPEED TABLE. THIS TABLE TELLS THE BIOS WHAT SIZE
                        ; OF DRIVE IS AT EACH ADDRESS AND WHAT TRACK TO TRACK
                        ; STEPPING SPEED TO USE FOR THAT DRIVE. THE BITS MEAN
                        ; THE FOLLOWING:
                        ;********************************************************
                        
                        ;       1000 0011
                        ;       ^      ^
                        ;       :      +- THE 179X STEP SPEED BITS. THESE ARE:
                        ;       :               VALUE   8"      5"
                        ;       :               00      3 MS    6 MS
                        ;       :               01      6 MS    12 MS
                        ;       :               10      10 MS   20 MS
                        ;       :               11      15 MS   30 MS
                        ;       :
                        ;       +-------- 0=8 INCH DISK AT THIS ADDRESS,
                        ;                 1=5 INCH DISK AT THIS ADDRESS.
                        
   EE33                 SPDTAB:
   EE33    00                   .BYTE   STEPS           ;DRIVE A
   EE34    00               .BYTE       STEPS           ;DRIVE B
   EE35    80                   .BYTE   STEPR           ;DRIVE C
   EE36    80                   .BYTE   STEPR           ;DRIVE D
                        
                        
                        ; OK TO CHANGE THE NEXT TWO BYTES.
                        
   EE37    54           INITIO: .BYTE   01010100B       ;INITIAL I/O BYTE AND
   EE38    00                           .BYTE   0H                      ;INITIAL DISK AFTER COLD BOOT
                        
   EE39    04           HOMER:  .BYTE   4               ;ALLOW 3 USER DISK FIXES
   EE3A    0A           RETRYIT:.BYTE   10              ;RETRY 10 TIMES EACH
                        
                        ;********************************************************
                        ; Z3S OPERATING CONTROL TABLE. THIS TABLE CONTAINS
                        ; THOSE BITS IN THE Z3S CONTROL BYTE WHICH SELECT THE
                        ; OPERATING MODE. THESE BITS ARE COMBINED WITH ADDRESS
                        ; CONTROL BITS TO FORM A COMPLETE Z3S CONTROL BYTE. THE
                        ; BITS ARE DEFINED AS FOLLOWS:
                        ;
                        ;                      NOTE
                        ;
                        ; THIS BIOS IS CODED FOR THE VERSAFLOPPY II.






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 6




                        ; REFERANCES TO Z3S OR Z4S FUNCTIONALITY THROUGHOUT
                        ; THE SOURCE ARE IN FACT FOR VF-II, AS THE OPERATING
                        ; TABLE BELOW SETS ALL SUCH FUNCTIONALITY FOR
                        ; VERSAFLOPPY II USE ONLY.
                        ;********************************************************
                        
                        ; VF-II VERSION OF TABLE
                        ;
                        ;       1111 0000
                        ;       ^^^^ ^
                        ;       :::: +- THESE BITS IN ADDRESS CONTROL TABLE
                        ;       ::::
                        ;       :::+--- 0=SIDE 1, 1=SIDE 0
                        ;   ::+---- 1=8 INCH DISK, 0=5 INCH DISK
                        ;       :+----- 1=SINGLE DENSITY (FM), 0=DOUBLE (MFM)
                        ;       +------ 0=ENABLE HARDWARE WAIT, 1=DISABLE
                        
   EE3B                 OPRTAB:
                        
                        ; FOR VERSAFLOPPY II
                        ; SIZE &         
                        ; DENSITY        
                        
   EE3B                 C8S:
   EE3B    F0                   .BYTE   11110000B       ;SIDE 0, NO WAIT
   EE3C    70                   .BYTE   01110000B       ;SIDE 0, WAIT
   EE3D    E0                   .BYTE   11100000B       ;SIDE 1, NO WAIT
   EE3E    60                   .BYTE   01100000B       ;SIDE 1, WAIT
                        
   EE3F                 C5S:    
   EE3F    D0                   .BYTE   11010000B
   EE40    50                   .BYTE   01010000B
   EE41    C0                   .BYTE   11000000B
   EE42    40                   .BYTE   01000000B
                        
   EE43                 C8D:    
   EE43    B0                   .BYTE   10110000B       ;SIDE 0, NO WAIT
   EE44    30                   .BYTE   00110000B       ;SIDE 0, WAIT
   EE45    A0                   .BYTE   10100000B       ;SIDE 1, NO WAIT
   EE46    20                   .BYTE   00100000B       ;SIDE 1, WAIT
                        
   EE47                 C5D:    
   EE47    90                   .BYTE   10010000B
   EE48    10                   .BYTE   00010000B
   EE49    80                   .BYTE   10000000B
   EE4A    00                   .BYTE   00000000B
                        
                        ;********************************************************
                        ; Z3S ADDRESS CONTROL TABLE. THIS TABLE CONTAINS THSOE
                        ; BITS IN THE Z3S BYTE WHICH SELECT THE ACTIVE DISK.
                        ; THESE BITS ARE COMBINED WITH OPERATING CONTROL BITS
                        ; TO FORM A COMPLETE Z3S CONTROL BYTE.
                        ;********************************************************
                        
   EE4B                 ADRTAB: 






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 7




   EE4B    0E                   .BYTE   1110B           ;DRIVE A
   EE4C    0D                   .BYTE   1101B           ;DRIVE B
   EE4D    0B                   .BYTE   1011B           ;DRIVE C
   EE4E    07                   .BYTE   0111B           ;DRIVE D
                        
                        ;********************************************************
                        ; THE SYSTEM CONFIGURATION OPTION BYTES FOLLOW
                        ;********************************************************
                        
   EE4F                 CFGOPT:
   EE4F    03                   ACTDSK: .BYTE   NODSK   ;NUMBER OF DISKS SUPPORTED
                                                                                ;NORMALLY 2 DRIVES
   EE50    00                   HLOPT:  .BYTE   HLDOPT  ;SINGLE OR DUAL HEAD LOAD
   EE51    04                   KBIT:   .BYTE   4               ;AUTO-RECAL COUNTER
                        
                        ;********************************************************
                        ; COLD BOOT ENTRY POINT. THE FIRST FOUR INSTRUCTIONS
                        ; SHOULD NOT BE CHANGED.
                        ;********************************************************
                        
   EE52                 CBOOT:
                        
   EE52    31 0080              LXI     SP,80H                  ;VALIDATE THE STACK POINTER
   EE55    2A EE37              LHLD    INITIO          ;SET INITIAL I/O BYTE, DISK
   EE58    22 0003              SHLD    IOBYTE
                        
   EE5B    CD F5DD              CALL    SYSNIT          ;ROUTINE IN HOST BUFFER SPACE
                                                                        ;IS DISCARDED AFTER THIS CALL
                            
   EE5E    CD EEE2              CALL    BCOMM           ;DO COMMON STUFF
   EE61    1844                 JMPR    GOCPM           ;PREPARE TO GO TO CCP
                        
                        ;********************************************************
                        ; WARM BOOT ENTRY POINT. IN ORDER TO WARM BOOT FROM
                        ; A FLOPPY DISK, CP/M MUST BE READ FROM TRACKS 0 AND 1.
                        ; THE PHYSICAL SECTORS ON THE SYSTEM TRACKS ARE ALWAYS
                        ; 512 BYTES LONG, BUT CP/M DOES NOT ALWAYS OCCUPY THE
                        ; ENTIRE SECTOR. THE SECTOR LAYOUT FOR BOTH 8" AND 5"
                        ; DISKS IS:
                        
                        ;       TRACK 0, SECTOR 1, BYTES 0 THRU 127 - COLD
                        ;          START LOADER
                        ;       TRACK 0, SECTOR 1, BYTES 128 THRU 511 - CP/M
                        ;       TRACK 0, SECTOR 2 THRU SECTOR 7 - CP/M
                        ;       TRACK 0, SECTOR 8, BYTES 0 THRU 383 - CP/M
                        ;       TRACK 0, SECTOR 8, BYTES 384 THRU 511 - DDB
                        ;       TRACK 1, SECTOR 1 THRU SECTOR 9 - CP/M,
                        ;          FOLLOWED BY THE CBIOS
                        
                        ; THE SYSTEM TRACKS ON 8" DISKS ARE RECORDED IN SINGLE
                        ; DENSITY, WHILE THE SYSTEM TRACKS ON 5" DISKS ARE
                        ; RECORDED IN DOUBLE DENSITY. ONLY SIDE 0 OF A 
                        ; DISK IS USED FOR THE SYSTEM.
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 8




   EE63                 WBOOT:
   EE63    F3                   DI
   EE64    31 0080              LXI     SP,80H          ;VALIDATE THE STACK POINTER
   EE67    CD F12C              CALL    CLOSE
   EE6A                 EEXIT:
   EE6A    CD EEE2              CALL    BCOMN           ;DO COMMON STUFF
                        
   E700                 ..JOG   ==      CCP+(30*128)    ;LAST GOOD ADDRESS
                                                        ;= 32 -(LOADER + DDB)
                        
   EE6D    AF                   XRA     A               ;READ FROM TRACK 0
   EE6E    01 0901              LXI     B,9<8+1         ;READ 9 SECTORS STARTING AT #1
   EE71    21 D780              LXI     H,CCP-128       ;START HERE TO SKIP LOADER
   EE74    CD EEC8              CALL    READM
                        
                        ;NOW COPY DOWN SECTOR #9
                        
   EE77    21 E780              LXI     H,CCP+(31*128)  ;LAST GOOD SECTOR STARTS HERE
   EE7A    11 E700              LXI     D,CCP+(30*128)  ;AND GOES OVER DDB HERE
   EE7D    01 0200              LXI     B,4*128         ;4 CPM RECORDS
   EE80    EDB0                 LDIR                    ;MOVE IT NOW
                        
   000A                 ..LEFT  ==      NSECTS-34
   0002                 ..PART  ==      ..LEFT@4
   0002                 ..FULL  ==      ..LEFT/4
   E900                 ..ADDR  ==      CCP+(128*(NSECTS-..LEFT))
   ED00                 ..LAST  ==      ..ADDR+(..FULL*512)
                        
   EE82    3E01                 MVI     A,1             ;READ FROM TRACK 1
   EE84    01 0201              LXI     B,..FULL <8+1   ;READ FULL SECTORS
   EE87    21 E900              LXI     H,CCP+(34*128)  ;STARTING AFTER 34 CP/M RECORDS
   EE8A    CD EEC8              CALL    READM
                        
                                .IFN    ..PART,[
                        
   EE8D    3E01                 MVI     A,1             ;READ FROM TRACK 1
   EE8F    01 0103              LXI     B,1<8+(1+..FULL);READ ONE LAST SECTOR
   EE92    21 F5DD              LXI     H,RDBUFF        ;INTO READ BUFFER FOR NOW
   EE95    CD EEC8              CALL    READM
                        
   EE98    01 0100              LXI     B,..PART*128
   EE9B    11 ED00              LXI     D,..LAST        ;SECTOR GOES HERE
   EE9E    21 F5DD              LXI     H,RDBUFF        ;SECTOR COMES FROM READ BUFFER
   EEA1    EDB0                 LDIR                    ;MOVE THE SECTOR
                        
                                ]
                        
                        ;********************************************************
                        ;THE FOLLOWING RESETS THE CCP BUFFER ON WARMBOOT
                        ;TO KILL AUTO-START ROUTINES
                        ;********************************************************
                        
   EEA3    AF                   XRA     A               ;CLEAR ACC.
   EEA4    32 D807              STA     CCP+7           ;STORE A CHAR. COUNTER LOCATION
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 9




                        ;********************************************************
                        ;       COMMON CODE BEFORE ENTERING CP/M.
                        ;********************************************************
                        
   EEA7                 GOCPM:
   EEA7    3EC3                 MVI     A,JMP           ;PATCH WARM START JUMP
   EEA9    32 0000              STA     0
   EEAC    21 EE03              LXI     H,WBOOTE
   EEAF    22 0001              SHLD    1
                                
   EEB2    32 0005              STA     5               ;PATCH JUMP TO BDOS
   EEB5    21 E006              LXI     H,BDOS
   EEB8    22 0006              SHLD    6
                        
   EEBB    21 0080              LXI     H,80H           ;SET DEFAULT DMA ADDR
   EEBE    22 F9E0              SHLD    DMAADD
                        
   EEC1    3A 0004              LDA     CPMDSK          ;PASS CURRENT DISK
   EEC4    4F                   MOV     C,A             ;NUMBER TO THE CCP
   EEC5    C3 D800              JMP     CCP             ;GO TO THE CCP
                        
                        ;********************************************************
                        ; READ MULTIPLE SECTORS. USED BY THE FLOPPY DISK WARM
                        ; BOOT.
                        ;********************************************************
                        
   EEC8    32 F9E4      READM:  STA     PTRACK          ;SET TRACK
                        
   EECB    C5           LOOP:   PUSH    B               ;SAVE COUNT, SECTOR
   EECC    79                   MOV     A,C
   EECD    32 F9E6              STA     PSECT           ;SET SECTOR
   EED0    E5                   PUSH    H               ;SAVE DMA ADDRESS
   EED1    22 F9E8              SHLD    PDMA            ;SET DMA ADDRESS
   EED4    CD F1BB              CALL    PREAD           ;READ THE SECTOR
   EED7    DA F4B8              JC      FATERR          ;FATAL ERROR
   EEDA    E1                   POP     H
   EEDB    24                   INR     H               ;POINT TO NEXT DMA ADDRESS
   EEDC    24                   INR     H               ;INCREMENT BY 2 PAGES (512 BYTES)
   EEDD    C1                   POP     B
   EEDE    0C                   INR     C               ;POINT TO NEXT PHYSICAL SECTOR
   EEDF    10EA                 DJNZ    LOOP            ;REPEAT UNTIL DONE
   EEE1    C9                   RET
                        
                        ;********************************************************
                        ; BOOT COMMON ROUTINE. USED BY COLD BOOT AND WARM BOOT.
                        ;********************************************************
                        
   EEE2                 BCOMM:
                        
                        ; KEEP BOTH BCOMM & BCOMN FOR NOW
                        ; AT ONE TIME BCOMM HAD ADDITIONAL FUCTIONS, THEN
                        ; IT FELL THROUGH TO BCOMN. MAY DO THAT AGAIN
                        
   EEE2                 BCOMN:
   EEE2    CD EEF0              CALL    DSKRST          ;RESET DISK SYSTEM






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 10




   EEE5    0E00                 MVI     C,0             ;SELECT DISK 0, GET DDB
   EEE7    CD EF11              CALL    SELDSK
   EEEA    7C                   MOV     A,H             ;TEST FOR SUCCESSFUL SELECT
   EEEB    B5                   ORA     L
   EEEC    C0                   RNZ                     ;SUCCESSFUL
   EEED    C3 F4B8              JMP     QUIT            ;FATAL ERROR
                        
                        ;********************************************************
                        ; RESET DISK SYSTEM. INVALIDATE CERTAIN FLOPPY DISK
                        ; TABLES AND BYTES TO ALLOW CHANGING DISKS. CALLED BY
                        ; COLD BOOT, WARM BOOT, AND SOME EXTERNAL ROUTINES.
                        ;********************************************************
                        
   EEF0    AF           DSKRST: XRA     A
   EEF1    21 FA0A              LXI     H,UNACNT        ;INVALIDATE UNALLOCATED COUNT
   EEF4    0616                 MVI     B,UNALEN
   EEF6    77           LOP:    MOV     M,A
   EEF7    23                   INX     H
   EEF8    10FC                 DJNZ    LOP
   EEFA    21 EE4F              LXI     H,ACTDSK        ;POINT TO # DISKS       
   EEFD    46                   MOV     B,M             ;GET NUMBER INTO B
   EEFE    11 0078              LXI     D,APBDIS        ;GET DISTANCE BETWEEN FD APBS
                        
   EF01    21 FA3E              LXI     H,APB0+(FLAG-ATABLE) ;POINT TO FLAG
                        
   EF04    77           LOOP1:  MOV     M,A             ;INVALIDATE ALL FLOPPY DISK
   EF05    19                   DAD     D               ;APBS BY CLEARING FLAGS
   EF06    10FC                 DJNZ    LOOP1
                        
   EF08    3D                   DCR     A
   EF09    32 F9F1              STA     OLDFLO          ;FORCE HEAD UNLOAD/LOAD
   EF0C    32 F9F0              STA     ADISK           ;INVALIDATE ATABLE
   EF0F    C9                   RET
                        
                        ;********************************************************
                        ;            LOAD HEAD ON CURRENT DISK
                        ;********************************************************
                        
   EF10    C9           HEADLD: RET
                        
                        
                        ;********************************************************
                        ; LOGICALLY SELECT THE DISK DRIVE FOR FUTURE READS AND
                        ; WRITES TO THAT PASSED IN REGISTER C. IF THE DDB FOR
                        ; THE DRIVE HAS NOT YET BEEN READ, THEN READ IT IN FROM
                        ; THE DISK. OTHERWISE, DON'T PERFORM A PHYSICAL SELECT
                        ; UNTIL A READ OR WRITE SECTOR CALL IS MADE. NOTE THAT
                        ; THE DPH, APB, DPB, AND TRANSLATE TABLE FOR THE DRIVE
                        ; ARE ALL VALID AT THE COMPLETION OF THIS CALL.
                        ;********************************************************
                        
   EF11                 SELDSK:
   EF11    79                   MOV     A,C
   EF12    21 EE4F              LXI     H,ACTDSK        ;POINT TO ACTUAL DISK #
   EF15    BE                   CMP     M               ;IN RANGE(y/n)






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 11




   EF16    D2 EFF7              JNC     BAD             ;NO
   EF19    32 FA1B              STA     SEKDSK          ;D.R. HOST DISK
   EF1C    32 F9E3              STA     PDISK
                        
   EF1F    D5                   PUSH    D               ;SAVE DISK RESET FLAG
                        
   EF20    69                   MOV     L,C             ;GET APB, DPH ADDRESSES
   EF21    CD F4A6              CALL    GETDPH          ;GET RAM LOCATION FOR DPH
   EF24    ED53 F9F6            SDED    APBADR          ;SAVE APB ADDRESS
   EF28    22 F9F4              SHLD    DPHADR          ;SAVE DPH ADDRESS
   EF2B    CD F470              CALL    GETAPB          ;GET ATABLE FOR THIS DISK
                        
   EF2E    D1                   POP     D
   EF2F    CB43                 BIT     0,E
   EF31    2807                 JRZ     FRST            ;MAY HAVE BEEN RESET
                        
   EF33    3A FA2A              LDA     FLAG
   EF36    B7                   ORA     A               ;DDB PROCESSED(y/n)
   EF37    C2 EFF0              JNZ     OK              ;YES
                        
   EF3A                 FRST:
   EF3A    CD F12C              CALL    CLOSE           ;ELSE CLEAR ANY PENDING WRITE
                                                        ;AND READ DDB FROM DISK
                        
   EF3D    AF                   XRA     A               ;WE WILL READ FROM TRACK 0
   EF3E    32 F9E4              STA     PTRACK
   EF41    3E08                 MVI     A,8             ;AND SECTOR 8
   EF43    32 F9E6              STA     PSECT
   EF46    21 F5DD              LXI     H,RDBUFF        ;INTO THE READ BUFFER
   EF49    22 F9E8              SHLD    PDMA
                        
   EF4C    3A F9E3              LDA     PDISK           ;GET DISK NUMBER
   EF4F    21 EE33              LXI     H,SPDTAB        ;POINT TO STEP SPEED TABLE
   EF52    5F                   MOV     E,A
   EF53    1600                 MVI     D,0
   EF55    19                   DAD     D
   EF56    7E                   MOV     A,M             ;GET SPEED BYTE FOR THIS DISK
   EF57    47                   MOV     B,A             ;SAVE IN B
   EF58    E603                 ANI     3               ;ISOLATE SPEED BITS
   EF5A    67                   MOV     H,A             ;PUT IN H FOR DOUBLE STORE NEXT
   EF5B    2EFF                 MVI     L,0FFH          ;CURRENT TRACK - UNKNOWN
   EF5D    22 FA28              SHLD    TRACK           ;UPDATE ATABLE TRACK AND SPEED
                        
                        
                        ;********************************************************
                        ;          ASSUME 8" S.S.S.D. DISK NEXT
                        ;********************************************************
                        
   EF60    3E01                 MVI     A,00000001B     ;INITIAL FLAG FOR 8" DRIVE
   EF62    21 F585              LXI     H,STDDDB        ;STANDARD 8" DDB ADDRESS
                        
                        
                        ;TEST IF 5" OR 8" DISK IN SPEED TABLE
                        
   EF65    CB78                 BIT     7,B             ;8" DISK(y/n)






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 12




   EF67    2805                 JRZ     EIG             ;IF YES GO DO 8"
   EF69    3E15                 MVI     A,00010101B     ;INITIAL 5" FLAG
   EF6B    21 F5B5              LXI     H,ALTDDB
                        
   EF6E    32 FA2A      EIG:    STA     FLAG
   EF71    22 F9FB              SHLD    SAVADR
                        
   EF74    21 0001              LXI     H,1             ;AT LEAST 1 SYSTEM TRACK
   EF77    22 FA2B              SHLD    OFF
   EF7A    21 2002              LXI     H,2+32 < 8      ;512 BYTE SECTOR & 32 LOGICAL SECTORS
   EF7D    22 FA2D              SHLD    SSLEN
                        
   EF80    CD F32C              CALL    GETD3S          ;GET Z3S CTRL BYTES INTO ATABLE
   EF83    CD F1BB              CALL    PREAD           ;GET THE DDB
   EF86    301F                 JRNC    YUP             ;WE GOT SOMETHING
                        
                        
                        ;********************************************************
                        ; IF ERROR IS R.N.F. THEN SHOW DISK READ FAILED
                        ; ELSE TEST IT FOR GOOD DISK TYPE
                        ;********************************************************
                        
   EF88    CB67                 BIT     WBRNF,A         ;RNF ERROR(y/n)
   EF8A    2868                 JRZ     ERR             ;NOPE, GIVE UP
                        
                        
                        ;********************************************************
                        ;    SET UP FOR STANDARD 8" S.S.S.D.  DISK HERE
                        ;********************************************************
                        
   EF8C                 NOV:
   EF8C    CD F4C2              CALL    MSG     ;WARN THE USER AND
   EF8F    0D0A                 .BYTE   CR,LF   ;   HOPE FOR THE BEST
   EF91    535444204469         .ASCIS  \STD Disk?\
   EF9A    2A F9FB              LHLD    SAVADR  ;POINT TO STANDARD DDB
   EF9D    01 0076              LXI     B,128-10
   EFA0    11 F767              LXI     D,RDBUFF+384+10
   EFA3    EDB0                 LDIR                    ;FIX RD BUFFER TO BE A STD DDB
   EFA5    1819                 JMPR    COMP
                        
   EFA7    2A F75D      YUP:    LHLD    RDBUFF+384      ;GET VALIDITY BYTES FROM DDB
   EFAA    11 FDDD              LXI     D,0DDH+0FDH < 8 ;EXPECTED VALUE OF BYTES
   EFAD    B7                   ORA     A
   EFAE    ED52                 DSBC    D               ;DDB VALID(y/n)
   EFB0    20DA                 JRNZ    NOV             ;NOPE
   EFB2    2A F75F              LHLD    RDBUFF+384+2    ;MORE VALIDITY BYTES
   EFB5    ED52                 DSBC    D               ;DDB VALID(y/n)
   EFB7    20D3                 JRNZ    NOV             ;NOPE
                        
   EFB9    3A F761              LDA     RDBUFF+384+4    ;TEST FOR COMPATIBILITY
   EFBC    E6FE                 ANI     11111110B
   EFBE    2037                 JRNZ    BAD             ;GIVE UP ON THIS DISK
                        
   EFC0    CD F467      COMP:   CALL    PUTAPB          ;UPDATE TRACK, SPEED IN APB
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 13




   EFC3    2A F9F6              LHLD    APBADR          ;GET APB ADDR FOR THIS DISK
   EFC6    11 000A              LXI     D,FLAG-ATABLE   ;POINT TO WHERE FLAG GOES
   EFC9    19                   DAD     D
   EFCA    EB                   XCHG                    ;MAKE THIS THE DESTINATION ADDR
   EFCB    21 F767              LXI     H,RDBUFF+384+10 ;FROM FLAG IN RD BUFFER
                        
   EFCE    01 006E              LXI     B,ALEN-(FLAG-ATABLE)+DPBLEN+TRALEN
                        
   EFD1    EDB0                 LDIR                    ;MOVE DDB, DPB, TRANS INTO APB
                        
                        
                        ;********************************************************
                        ;*           NOW SET UP ALLOCATION SIZE
                        ;*           FOR THE DISK JUST SELECTED
                        ;* GET THE ALLOCATION SIZE FROM THE DSM VALUE IN THE DPB
                        ;********************************************************
                        
   EFD3                 GALV:
   EFD3    3A F770              LDA     RDBUFF+384+19   ;GET DSM
   EFD6    4F                   MOV     C,A             ;SAVE VALUE
   EFD7    3A FA1B              LDA     SEKDSK
   EFDA    5F                   MOV     E,A
   EFDB    1600                 MVI     D,0
   EFDD    21 FA05              LXI     H,ALOCSZ
   EFE0    19                   DAD     D
   EFE1    71                   MOV     M,C             ;SAVE FOR THIS DISK
                        
   EFE2    3EFF                 MVI     A,0FFH          ;UPDATE ATABLE FROM APB
   EFE4    32 F9F0              STA     ADISK
   EFE7    CD F470              CALL    GETAPB
   EFEA    CD F32C              CALL    GETD3S          ;PUT VALID Z3S BYTES IN ATABLE
   EFED    CD F467              CALL    PUTAPB          ;UPDATE APB FROM FULLY VALID ATABLE
                        
   EFF0    2A F9F4      OK:     LHLD    DPHADR          ;RETURN DPH ADDRESS
   EFF3    C9                   RET
                        
   EFF4                 ERR:
   EFF4    CD F3C9              CALL    EPRINT          ;PRINT ERROR IN READING DDB
                        
   EFF7    AF           BAD:    XRA     A               ;DESELECT INVALID DRIVE
   EFF8    32 0004              STA     CPMDSK
   EFFB    67                   MOV     H,A             ;ERROR RETURN CODE
   EFFC    6F                   MOV     L,A
   EFFD    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET TRACK FOR FUTURE READS OR WRITES TO TRACK 0. ALSO
                        ; PARTIALLY RESET THE DISK SYSTEM TO ALLOW FOR CHANGED
                        ; DISKS.
                        ;********************************************************
                        
   EFFE                 HOME:
   EFFE    CD F12C              CALL    CLOSE
   F001    3A FA15              LDA     HSTWRT          ;TEST FOR PENDING WRITE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 14




   F004    B7                   ORA     A
   F005    2003                 JRNZ    HOMED
   F007    32 FA14              STA     HSTACT          ;CLEAR HOST ACTIVE FLAG
   F00A                 HOMED:
   F00A    01 0000              LXI     B,0             ;DROP THRU TO SET TRACK TO 0
                        
                        ;********************************************************
                        ; SET TRACK FOR FUTURE READS OR WRITES TO THAT PASSED
                        ; IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F00D    ED43 FA1C    SETTRK: SBCD    SEKTRK
   F011    C9                   RET
                        
                        ;********************************************************
                        ; SET SECTOR FOR FUTURE READS OR WRITES TO THAT PASSED
                        ; IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F012    ED43 F9DE    SETSEC: SBCD    SEKSEC
   F016    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET DMA ADDRESS FOR FUTURE READS OR WRITES TO THAT
                        ; PASSED IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F017    ED43 F9E0    SETDMA: SBCD    DMAADD
   F01B    C9                   RET
                        
                        
                        ;********************************************************
                        ; SECTOR TRANSLATION ROUTINE. THE ROUTINE ONLY
                        ; TRANSLATES SECTORS ON THE USER TRACKS, SINCE CP/M
                        ; ACCESSES THE SYSTEM TRACKS WITHOUT CALLING FOR
                        ; TRANSLATION.
                        ;********************************************************
                        
   F01C                 SECTRA:
                        
   F01C    EB           YUP1:   XCHG                    ;HL GETS TRANS TABLE ADDRESS
                                                        ;CP/M PASSED IT IN DE
   F01D    79                   MOV     A,C             ;GET SECTOR #
   F01E    ED43 FA10            SBCD    NEWSEC          ;SAVE FOR UNALLOC TEST
   F022    09                   DAD     B               ;INDEX INTO TABLE, LOGICAL SECTOR
                                                        ;IS PASSED IN BC
   F023    6E                   MOV     L,M             ;GET THE TRANSLATED BYTE
   F024    2600                 MVI     H,0
   F026    C9                   RET
                        
                        ;********************************************************
                        ; CP/M ENTRY POINT FOR SECTOR READS. BUFFERED SECTOR
                        ; READS ARE DONE HERE. BUFFERED READ OPERATIONS REQUIRE
                        ; READING THE SECTOR FROM DISK INTO THE READ BUFFER,






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 15




                        ; AND THEN PROVIDING 128 BYTE LOGICAL SECTORS TO THE
                        ; CALLING PROGRAM ON REQUEST.
                        ;********************************************************
                        
   F027                 READ:
                        
   F027    AF                   XRA     A
   F028    32 FA0A              STA     UNACNT          ;UNACNT=0, WE WON'T WRITE WITHOUT
                                                        ;PRE-READS FOR NOW
   F02B    3C                   INR     A       
   F02C    32 FA13              STA     READOP          ;SHOW WE ARE DOING A READ OPERATION
   F02F    32 FA12              STA     RSFLAG          ;MUST READ DATA
   F032    3E02                 MVI     A,2
   F034    32 F9F8              STA     WRTYPE          ;TREAT AS UNALLOCATED
                        
   F037    C3 F0A3              JMP     RWOPER          ;DO THE READ
                        
                        
                        ;********************************************************
                        ; CP/M ENTRY POINT FOR SECTOR WRITES. BUFFERED SECTOR
                        ; WRITES ARE DONE HERE. BUFFERED WRITE OPERATIONS
                        ; REQUIRE ACCEPTING 128 BYTE LOGICAL SECTORS FROM THE
                        ; CALLING PROGRAM, ACCUMULATING THEM IN A WRITE BUFFER,
                        ; THEN WRITING THE BUFFER WHEN IT BECOMES FULL. THE
                        ; BUFFER IS IMMEDIATELY WRITTEN OUT IF THE LOGICAL
                        ; SECTOR IS PART OF THE DISK DIRECTORY.
                        ;********************************************************
                        
                        
   F03A                 WRITE:
                        
   F03A    AF                   XRA     A
   F03B    32 FA13              STA     READOP          ;SET TO WRITE
                        
   F03E    79                   MOV     A,C
   F03F    32 F9F8              STA     WRTYPE          ;SAVE TYPE OF WRITE
                        
   F042    FE02                 CPI     2               ;WRITE UNALLOCATED(y/n)
   F044    2018                 JRNZ    CKUN            ;GO SEE IF O.K. ANYWAY
                        
   F046    3A FA09              LDA     ALOCA           ;GET MAXIMUM UNALLOCATED RECORD COUNT
   F049    32 FA0A              STA     UNACNT          ;AND PUT HERE FOR WRITING
   F04C    3A FA1B              LDA     SEKDSK          ;GET CURRENT DISK
   F04F    32 FA0B              STA     UNADSK
   F052    2A FA1C              LHLD    SEKTRK          ;GET CURRENT TRACK
   F055    22 FA0C              SHLD    UNATRK
   F058    3A FA10              LDA     NEWSEC          ;GET CURRENT CP/M SECTOR
   F05B    32 FA0E              STA     UNASEC
                        
   F05E                 CKUN:                           ;SEE IF UNALLOCATED RECORDS REMAIN
                        
   F05E    3A FA0A              LDA     UNACNT          ;GET UNALLOCATED RECORDS LEFT
   F061    B7                   ORA     A
   F062    CA F09B              JZ      ALOC            ;NO UNALLOCATED LEFT
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 16




                        
                        ;WE STILL HAVE UNALLOCATED RECORDS LEFT
                        
   F065    3D                   DCR     A               ;UPDATE UNALLOCATED RECORD COUNT
   F066    32 FA0A              STA     UNACNT
                        
                        
                        ;NOW CHECK FOR CORRECT DISK, TRACK & SECTOR
                        
   F069    3A FA1B              LDA     SEKDSK          ;COMPARE DISKS FIRST
   F06C    21 FA0B              LXI     H,UNADSK
   F06F    BE                   CMP     M
   F070    C2 F09B              JNZ     ALOC
                        
                        
                        ;DISKS ARE SAME, NOW CHECK FOR TRACK
                        
   F073    21 FA0C              LXI     H,UNATRK
   F076    3A FA1C              LDA     SEKTRK
   F079    BE                   CMP     M
   F07A    201F                 JRNZ    ALOC
                        
                        
                        ;TRACKS ARE SAME, NOW TEST FOR SECTOR
                        
   F07C    3A FA10              LDA     NEWSEC          ;COMPARE SECTORS NOW
   F07F    21 FA0E              LXI     H,UNASEC
   F082    BE                   CMP     M
   F083    2016                 JRNZ    ALOC
                        
                        
                        ;SECTORS ARE SAME, NOW UPDATE PARAMETERS
                        
   F085    34                   INR     M               ;MAKE NEXT EXPECTED SECTOR
   F086    7E                   MOV     A,M             ;GET NEXT EXPECTED SECTOR
   F087    21 FA30              LXI     H,ULRPS         ;POINT TO SECTORS/USER TRACK
   F08A    BE                   CMP     M               ;TEST FOR END OF TRACK
   F08B    3808                 JRC     NOVR            ;NO OVERFLOW
                        
                        
                        ;HERE WE ALLOW FOR NEXT UNALLOCATED RECORD ON A NEW TRACK
                        
   F08D    AF                   XRA     A               ;SET SECTOR AS FIRST
   F08E    32 FA0E              STA     UNASEC
   F091    21 FA0C              LXI     H,UNATRK        ;POINT TO UNALLOCATED TRACK #
   F094    34                   INR     M               ;MAKE IT NEXT ONE
                        
                        
                        ;WRITE PARAMETERS MATCH, DON'T PRE-READ
                        
   F095                 NOVR:
   F095    AF                   XRA     A
   F096    32 FA12              STA     RSFLAG          ;SHOW WE DON'T READ A SECTOR
   F099    1808                 JMPR    RWOPER
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 17




                        
                        ;NOT AN UNALLOCATED RECORD, DO A PRE-READ
                        
   F09B                 ALOC:
   F09B    AF                   XRA     A
   F09C    32 FA0A              STA     UNACNT          ;SET UNALLOCATED = 0
   F09F    3C                   INR     A
   F0A0    32 FA12              STA     RSFLAG          ;RSFLAG = 1, WE MUST READ THE SECTOR
                        
                        
                        ;DO READ OR WRITE OPERATION NEXT
                        
   F0A3                 RWOPER:
                        
   F0A3    CD F16C              CALL    GETTRK          ;COMPUTE PHYSICAL TRACK & SECTOR
                        
   F0A6    21 FA14              LXI     H,HSTACT        ;GET HOST ACTIVE FLAG
   F0A9    7E                   MOV     A,M     
   F0AA    3601                 MVI     M,1             ;SET IT ACTIVE FOR SURE
   F0AC    B7                   ORA     A               ;SEE IF IT WAS ACTIVE
   F0AD    CA F0D2              JZ      FILHST          ;IF NOT FILL IT
                                
                        
                        ;********************************************************
                        ;* CHECK TO SEE IF SECTOR IN HOST BUFFER IS CORRECT ONE
                        ;* IF NOT WRITE TO HOST BUFFER IF NEEDED & PREPARE FOR 
                        ;* CORRECT HOST BUFFER
                        ;********************************************************
                        
                        ;SEE IF DISKS ARE SAME
                        
   F0B0    3A FA1B              LDA     SEKDSK          ;COMPARE DISKS FIRST
   F0B3    21 FA16              LXI     H,HSTDSK
   F0B6    BE                   CMP     M
   F0B7    2012                 JRNZ    NOMAT
                        
                        
                        ;SEE IF TRACKS ARE SAME
                        
   F0B9    21 FA17              LXI     H,HSTTRK
   F0BC    3A F9EA              LDA     CTRACK
   F0BF    BE                   CMP     M
   F0C0    2009                 JRNZ    NOMAT
                        
                        
                        ;SEE IF SECTORS ARE SAME
                        
   F0C2    3A FA1E              LDA     SEKHST          ;COMPARE SECTORS NOW
   F0C5    21 FA19              LXI     H,HSTSEC
   F0C8    BE                   CMP     M
   F0C9    2824                 JRZ     MATCH
                        
                        
                        ;HOST PARAMETERS DO NOT MATCH CURRENT R/W PARAMETERS
                        ;SEE IF WE HAVE TO FLUSH THE HOST BUFFER






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 18




                        
   F0CB                 NOMAT:
   F0CB    3A FA15              LDA     HSTWRT          ;SEE IF HOST BUFFER WAS WRITTEN
   F0CE    B7                   ORA     A
   F0CF    C4 F131              CNZ     FLUSH           ;WRITE OUT THE BUFFER IF NOT
                        
                        
                        ;MAY HAVE TO FILL HOST BUFFER
                        ;SEET UP NEW PARAMETERS
                        
   F0D2                 FILHST:
                        
   F0D2    3A FA1B              LDA     SEKDSK
   F0D5    32 FA16              STA     HSTDSK
   F0D8    2A F9EA              LHLD    CTRACK
   F0DB    22 FA17              SHLD    HSTTRK
   F0DE    3A FA1E              LDA     SEKHST          ;THE PHYSICAL SECTOR
   F0E1    32 FA19              STA     HSTSEC
                        
   F0E4    3A FA12              LDA     RSFLAG          ;SEE IF WE NEED TO READ
   F0E7    B7                   ORA     A
   F0E8    C4 F150              CNZ     RDHST           ;IF SO READ IT
   F0EB    AF                   XRA     A
   F0EC    32 FA15              STA     HSTWRT          ;SHOW NO PENDING WRITE
                        
                        ;WE HAVE CORRECT SECTOR SO COPY DATA TO/FROM DMA BUFFER
                        
   F0EF                 MATCH:
                        
   F0EF    3A F9E2              LDA     CREC            ;GET RECORD #
   F0F2    47                   MOV     B,A             ;COMPUTE RECORD IN HOST BUFFER
   F0F3    0E00                 MVI     C,0
   F0F5    CB38                 SRLR    B
   F0F7    CB19                 RARR    C
   F0F9    21 F5DD              LXI     H,HSTBUF
   F0FC    09                   DAD     B               ;HL IS NOW HOST BUFFER
   F0FD    ED5B F9E0            LDED    DMAADD          ;DE HAS DMA ADDRESS
   F101    01 0080              LXI     B,128           ;BYTES TO MOVE
   F104    3A FA13              LDA     READOP
   F107    B7                   ORA     A               ;SEE IF WE ARE READING OR WRITING
   F108    2009                 JRNZ    RWMOVE          ;SKIP ON READ
   F10A    3E01                 MVI     A,1             ;IF A WRITE THEN MARK & COPY TO BUFFER
   F10C    32 FA15              STA     HSTWRT          ;HSTWRT = 1
   F10F    EB                   XCHG                    ;DE IS NOW DESTINATION,= HOST ON WRITE
   F110    2A F9E0              LHLD    DMAADD          ;HL IS SOURCE, = USER AREA TO GET       
                        
   F113                 RWMOVE:
                                
   F113    EDB0                 LDIR                    ;MOVE DATA
                        
                        
                        ;NOW CHECK WRITE TYPE FOR DIRECTORY UPDATE
                        
   F115    3A F9F8              LDA     WRTYPE          ;GET TYPE OF WRITE
   F118    3D                   DCR     A               ;IS IT TO THE DIRECTORY






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 19




   F119    2802                 JRZ     WRITIT          ;IF SO WRITE IT OUT
                        
   F11B    1806                 JMPR    GOODOP          ;IF NOT SHOW A SUCCESSFUL R/W OPERATION 
                        
                        
                        ;CLEAR HOST BUFFER FOR DIRECTORY WRITE
                        
   F11D                 WRITIT:
                        
   F11D    32 FA15              STA     HSTWRT
   F120    CD F131              CALL    WRTHST
                                
   F123                 GOODOP:
   F123    3A F9FD              LDA     MRML            ;GET RETRY BYTE
   F126    B7                   ORA     A               ;TEST FOR ZERO
   F127    3E01                 MVI     A,1             ;JUST IN CASE OF FAILURE
   F129    C8                   RZ                      ;IF FAILED SHOW IT TO BDOS
   F12A    AF                   XRA     A               ;ELSE SET AS O.K.
   F12B    C9                   RET                     ;SHOW BDOS SUCCESSFUL READ/WRITE
                        
   F12C                 CLOSE:
   F12C    3A FA15              LDA     HSTWRT          ;SEE IF WE HAVE A PENDING WRITE
   F12F    B7                   ORA     A
   F130    C8                   RZ                      ;IF NOT RETURN NOW
                        
                        ;WRITE FROM THE HOST BUFFER
                        
   F131                 FLUSH:
   F131                 WRTHST:
   F131    3A FA16              LDA     HSTDSK          ;GET ACTUAL WRITE DISK
   F134    32 F9E3              STA     PDISK           ;MAKE IT THE PHYSICAL DISK
   F137    CD F470              CALL    GETAPB          ;GET APB FOR THE DISK
   F13A    3A FA19              LDA     HSTSEC
   F13D    32 F9E6              STA     PSECT
   F140    3A FA17              LDA     HSTTRK
   F143    32 F9E4              STA     PTRACK
   F146    21 F5DD              LXI     H,WRBUFF        ;POINT TO WRITE BUFFER
   F149    22 F9E8              SHLD    PDMA            ;MAKE IT THE PHYSICAL DMA ADDRESS
                                
   F14C    CD F1B7              CALL    PWRITE          ;WRITE BACK THE COMBINED SECTOR
   F14F    C9                   RET
                        
   F150                 RDHST:
   F150    3A FA16              LDA     HSTDSK
   F153    32 F9E3              STA     PDISK
   F156    21 F5DD              LXI     H,RDBUFF        ;POINT TO READ BUFFER
   F159    22 F9E8              SHLD    PDMA            ;MAKE IT PHYSICAL DMA ADDRESS
   F15C    3A F9EA              LDA     CTRACK
   F15F    32 F9E4              STA     PTRACK
   F162    3A F9EC              LDA     CSECT
   F165    32 F9E6              STA     PSECT
                        
   F168    CD F1BB              CALL    PREAD           ;READ SECTOR INTO READ BUFFER
   F16B    C9                   RET
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 20




                        
                        ;GET ACTUAL TRACK TO SEEK
                        
   F16C                 GETTRK:
   F16C    3A FA1C              LDA     SEKTRK          ;GET CP/M TRACK NUMBER
   F16F    21 FA2B              LXI     H,OFF           ;GET NUMBER OF SYSTEM TRACKS
   F172    5E                   MOV     E,M
   F173    0E00                 MVI     C,0             ;ASSUME SINGLE SIDED DISK
   F175    21 FA2D              LXI     H,SSLEN         ;POINT TO SYSTEM SECTOR LENGTH
   F178    BB                   CMP     E
   F179    380F                 JRC     SYST            ;IT WAS A SYSTEM TRACK
   F17B    21 FA2A              LXI     H,FLAG          ;POINT TO FLAG BYTE
   F17E    CB4E                 BIT     1,M             ;TEST SIDES BIT
   F180    2805                 JRZ     SING            ;SINGLE SIDED DISK
   F182    83                   ADD     E               ;ADD IN OFFSET
   F183    CB3F                 SRLR    A               ;COMPUTE PHYSICAL TRACK NUMBER
   F185    CB19                 RARR    C               ;GET SIDE NUMBER BIT
   F187    21 FA2F      SING:   LXI     H,USLEN
   F18A                 SYST:
   F18A    32 F9EA              STA     CTRACK          ;SAVE ACTUAL TRACK NUMBER
                                        
                        
                        ;GET ACTUAL SECTOR TO READ/WRITE
                        
   F18D                 PYSEC:
   F18D    7E                   MOV     A,M             ;GET LENGTH BYTE
   F18E    47                   MOV     B,A
   F18F    FE03                 CPI     3
   F191    2004                 JRNZ    LRG
   F193    2607                 MVI     H,7
   F195    1806                 JMPR    GSEC
   F197    FE02         LRG:    CPI     2               ;512 BYTE SECTOR(y/n)
   F199    2001                 JRNZ    NO              ;NOPE, ACC HAS RECORD MASK
   F19B    3C                   INR     A               ;FIND MASK FOR 512 BYTE SECTOR
   F19C    67           NO:     MOV     H,A             ;SAVE RECORD MASK
                        
   F19D    3A F9DE      GSEC:   LDA     SEKSEC          ;GET CP/M SECTOR NUMBER
   F1A0    3D                   DCR     A               ;ADJUST DOWN TO START AT ZERO
   F1A1    6F                   MOV     L,A             ;SAVE FOR LATER
   F1A2    04                   INR     B               ;ADJUST FOR EASY LOOP
   F1A3    1802                 JMPR    JOIN
   F1A5    CB3F         LOOP2:  SRLR    A               ;PLACE SECTOR NUMBER IN LSB'S
   F1A7    10FC         JOIN:   DJNZ    LOOP2           ;REPEAT UNTIL ALIGNED IN LSB'S
   F1A9    3C                   INR     A               ;ADJUST TO MAKE PHYSICAL SECTOR
   F1AA    B1                   ORA     C               ;GET SIDE BIT   
   F1AB    32 FA1E              STA     SEKHST          ;HOST SECTOR
   F1AE    32 F9EC              STA     CSECT           ;SAVE COMBINED SECTOR
   F1B1    7D                   MOV     A,L             ;GET CP/M SECTOR NUMBER
   F1B2    A4                   ANA     H               ;MASK ALL BUT RECORD NUMBER
   F1B3    32 F9E2              STA     CREC            ;SAVE RECORD NUMBER
   F1B6    C9                   RET
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK PHYSICAL READ AND WRITE ROUTINE. ALL






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 21




                        ; FLOPPY DISK I/O IS PERFORMED BY CALLS TO THIS
                        ; ROUTINE. ON ENTRY PDISK, PTRACK, PSECT, AND PDMA
                        ; MUST BE VALID.
                        ;********************************************************
                        
   F1B7    3EA0         PWRITE: MVI     A,WWRITE        ;SET WRITE COMMAND
   F1B9    1802                 JMPR    PCOM            ;JOIN COMMON CODE
                        
   F1BB    3E80         PREAD:  MVI     A,WREAD         ;SET READ COMMAND
                        
   F1BD    32 F9F2      PCOM:   STA     PCMD            ;REMEMBER WHETHER READ OR WRITE
   F1C0    CD F470              CALL    GETAPB          ;MAKE SURE ATABLE IS RIGHT ONE
                        
                        
                        ;********************************************************       
                        ;       IF LAST I/O WAS ON DIFFERENT DISK, TELL THE
                        ;       179X TO UNLOAD ITS HEAD. THE HEAD LOAD ONE-SHOT
                        ;       WILL THEN BE RETRIGERED ON THE NEXT COMMAND.
                        ;********************************************************
                        
   F1C3    21 F9F1              LXI     H,OLDFLO        ;POINT TO OLD FLOPPY NUMBER
   F1C6    3A F9E3              LDA     PDISK           ;GET NEW NUMBER
   F1C9    BE                   CMP     M               ;SAME DISK(y/n)
   F1CA    2807                 JRZ     SADS            ;YES
                        
   F1CC    77                   MOV     M,A             ;NO, UPDATE OLD NUMBER TO NEW
   F1CD    CD F35F              CALL    TRIMWT          ;WAIT FOR TRIM ERASE TO END
   F1D0    CD F306              CALL    SETD3S          ;SET Z3S CONTROL BYTE
                        
                        ; FOLLOWING IS AN OBSOLETE OPERATION, NO LONGER USED,
                        ; BUT THE ORIGINAL CODE IS SHOWN FOR INTEREST.
                        ; HEAD UNLOADING WAS USED FROM TIME TO TIME TO
                        ; REDUCE DISK WEAR, HOWEVER IT WOULD SLOW DOWN
                        ; ACCESS TIMES, AND IMPROVED DISK HEAD DESIGN
                        ; AND MEDIA DURABILITY MADE IT REDUNDANT.
                        
                        ;       LDA     HLOPT           ;SEE IF DUAL HEAD LOAD
                        ;       ORA     A
                        ;       JRNZ    SADS            ;DON'T UNLOAD HEAD
                        ;       CALL    FUNLD           ;UNLOAD HEAD
                        ;       CALL    FDONE           ;INSURE FDC IS DONE
                        
                        
                        ;********************************************************
                        ;       INITIALIZE RETRY LIMITS. INSURE Z3S BYTE IS
                        ;       SET. SEEK TO CORRECT TRACK.
                        ;********************************************************
                        
   F1D3                 SADS:
   F1D3    3A EE39              LDA     HOMER           ;NUMBER OF HOME OPERATIONS
   F1D6    32 F9FD              STA     MRML
   F1D9    32 EE51              STA     KBIT
   F1DC                 MAC:
   F1DC    3A EE3A              LDA     RETRYIT         ;RETRIES BETWEEN HOME OPERATIONS
   F1DF    32 F9EF              STA     RMACRO






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 22




                        
   F1E2    CD F306              CALL    SETD3S          ;SET Z3S CONTROL BYTE
   F1E5    21 FA28              LXI     H,TRACK         ;GET OLD TRACK NUMBER
   F1E8    7E                   MOV     A,M
   F1E9    D355                 OUT     WTRACK          ;UPDATE 179X TRACK REG
   F1EB    3A F9E4              LDA     PTRACK          ;GET DESIRED TRACK NUMBER
   F1EE    BE                   CMP     M               ;SAME AS BEFORE(y/n)
   F1EF    2819                 JRZ     SATR            ;YES
                        
   F1F1    77                   MOV     M,A             ;UPDATE TRACK NUMBER
   F1F2    CD F35F              CALL    TRIMWT          ;WAIT FOR TRIM ERASE TO END
   F1F5    3A F9E4              LDA     PTRACK          ;GET DESIRED TRACK
   F1F8    B7                   ORA     A               ;TRACK 0 DESIRED(y/n)
                                
   F1F9    CD F36E              CALL    FSEEK           ;SEEK TO DESIRED TRACK
   F1FC    DA F4B8              JC              FATERR
                        
   F1FF    CD F467      ENDS:   CALL    PUTAPB          ;UPDATE APB FROM ATABLE
   F202    3A F9F2              LDA     PCMD            ;GET READ/WRITE COMMAND
   F205    CBD7                 SET     WBDEL,A         ;INSURE HEAD IS SETTLED
   F207                 NOMIL:
   F207    32 F9F2              STA     PCMD            ;BY SETTING DELAY BIT IN CMD
                        
                        
                        ;********************************************************
                        ;       SET UP DMA ADDRESS, SECTOR REGISTER. ISSUE
                        ;       THE READ OR WRITE COMMAND. SET HARDWARE WAIT.
                        ;********************************************************
                        
   F20A                 SATR:
   F20A                 MIC:
   F20A    3A F9E6              LDA     PSECT           ;GET DESIRED SECTOR NUMBER
   F20D    47                   MOV     B,A             ;SAVE SIDE BIT
   F20E    CB7F                 BIT     7,A             ;TEST SIDE BIT
   F210    3E30                 MVI     A,'0'
   F212    2802                 JRZ     SIDEZERO
   F214    3E31                 MVI     A,'1'
   F216                 SIDEZERO:
   F216    32 FA04              STA     SIDEID
                        
   F219    CB78                 BIT             7,B
   F21B    CA F22C              JZ              SSIDEA
   F21E    DB53                 IN              DCMD    ; SET SIDE FOR 1791
   F220    CB67                 BIT             4,A
   F222    CA F23D              JZ              SSECTOR
   F225    CBA7                 RES             4,A             ; SET SIDE B
   F227    D353                 OUT             DCMD
   F229    C3 F237              JMP             SETSIDE
   F22C                 SSIDEA:
   F22C    DB53                 IN              DCMD            ; SET SIDE FOR 1791
   F22E    CB67                 BIT             4,A
   F230    C2 F23D              JNZ             SSECTOR
   F233    CBE7                 SET             4,A                     ; SET SIDE A
   F235    D353                 OUT             DCMD
   F237                 SETSIDE:






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 23




   F237    C5                   PUSH    B
   F238    06FF                 MVI             B,0FFH          ;Slight delay for hardware
   F23A    10FE                 DELYS:  DJNZ DELYS
   F23C    C1                   POP             B
                                
   F23D                 SSECTOR:
   F23D    78                   MOV     A,B                     ;GET BACK SECTOR
   F23E    E67F                 ANI     07FH            ;DROP SIDE BIT
   F240    D356                 OUT     WSECT           ;UPDATE 179X SECTOR REGISTER
                        
   F242    DB53                 IN              DCMD
   F244    E67F                 ANI             07FH
   F246    D353                 OUT             DCMD
   F248    32 FA02              STA             OD3S
                        
   F24B    3A F9F2              LDA     PCMD            ;GET READ OR WRITE COMMAND
   F24E    CBCF                 SET     WBSID1,A        ;UPDATE SSO BIT TO 1
   F250    CB78                 BIT     7,B                     ;ARE WE ON SIDE 1(y/n)
   F252    2802                 JRZ     SID01           ;NO, LEAVE WBSIDE BIT AS 0
   F254    CBDF                 SET     WBSIDE,A
                        
                        
   F256                 SID01:
   F256    F3                   DI
   F257    D354                 OUT     WCMD            ;FOR PIO 179X COMMAND
   F259    32 FA03      SID2:   STA     OCMD
   F25C    32 F9F3              STA     ORWCMD          ;SAVE LAST READ OR WRITE CMD
   F25F    57                   MOV     D,A             ;SAVE THE COMMAND
                        
                        
   F260    01 8057              LXI     B,128 < 8+WDATA ;SET PORT AND LENGTH
   F263    3A F9E4              LDA     PTRACK          ;GET CURRENT TRACK
   F266    21 FA2B              LXI     H,OFF
   F269    BE                   CMP     M               ;IS IT A USER TRACK(y/n)
   F26A    3A FA2F              LDA     USLEN           ;GET USER SECTOR LENGTH
   F26D    3003                 JRNC    ULEN
   F26F    3A FA2D              LDA     SSLEN           ;GET SYSTEM SECTOR LENGTH
                        
   F272    2A F9E8      ULEN:   LHLD    PDMA            ;GET DMA ADDRESS
   F275    CB6A                 BIT     WBWRIT,D        ;ARE WE WRITING(y/n)
   F277    2018                 JRNZ    WRIT            ;YES, GO WRITE
                        
                        
                        ;********************************************************
                        ;                     READ THE SECTOR.
                        ;********************************************************
                        
   F279                 PIRD:
   F279    B7                   ORA     A
   F27A    280E                 JRZ     PR12
   F27C    0600                 MVI     B,0H
   F27E    3D                   DCR     A
   F27F    2809                 JRZ     PR25
   F281    3D                   DCR     A
   F282    2804                 JRZ     PR51






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 24




   F284    EDB2                 INIR
   F286    EDB2                 INIR
   F288    EDB2         PR51:   INIR
   F28A                 PR25:
   F28A    EDB2         PR12:   INIR
                                
   F28C                 RDFN:
                        
   F28C    FB                   EI
   F28D    0E9C                 MVI     C,WSREAD        ;STATUS BITS TO TEST
   F28F    1816                 JMPR    CHEK
                        
                        
                        ;********************************************************
                        ;                   WRITE THE SECTOR.
                        ;********************************************************
                        
   F291                 WRIT:
   F291    B7                   ORA     A
   F292    280E                 JRZ     PW12
   F294    0600                 MVI     B,0H
   F296    3D                   DCR     A
   F297    2809                 JRZ     PW25
   F299    3D                   DCR     A
   F29A    2804                 JRZ     PW51
   F29C    EDB3                 OUTIR
   F29E    EDB3                 OUTIR
                        
   F2A0    EDB3         PW51:   OUTIR
   F2A2                 PW25:
   F2A2    EDB3         PW12:   OUTIR
                                                
   F2A4                 WRFN:
   F2A4    FB                   EI
   F2A5    0EFC                 MVI     C,WSWRIT        ;STATUS BITS TO TEST
                        
                        
                        ;********************************************************
                        ;       WAIT FOR COMPLETION OF DISK OPERATION.
                        ;       TEST FOR ERRORS.
                        ;********************************************************
                        
   F2A7                 CHEK:   
   F2A7    DB53                 IN      DCMD
   F2A9    F680                 ORI     80H
   F2AB    D353                 OUT     DCMD
   F2AD    32 FA02              STA     OD3S
   F2B0    CD F3A1              CALL    FDONE           ;WAIT FOR 179X DONE
   F2B3    A1                   ANA     C               ;ANY ERROR BITS(y/n)
   F2B4    C8                   RZ                      ;NO, RETURN - SUCCESSFUL
                        
                        
                        ;********************************************************
                        ;           RETRY THE I/O IF AN ERROR OCCURED.
                        ;********************************************************






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 25




                        
   F2B5                 NOPRNT:
   F2B5    21 F9EF              LXI     H,RMACRO        ;POINT TO MACRO RETRY COUNT
   F2B8    35                   DCR     M               ;DECREMENT IT
   F2B9    C2 F20A              JNZ     MIC             ;RE-DO READ/WRITE
                        
   F2BC    21 EE51              LXI     H,KBIT
   F2BF    35                   DCR     M
   F2C0    CA F2CE              JZ      KEYIT
                        
   F2C3    CD F36A              CALL    FHOME
   F2C6    D8                   RC
   F2C7    AF                   XRA     A
   F2C8    32 FA28              STA     TRACK
   F2CB    C3 F1DC              JMP     MAC
                        
                        
                        ;       IF WE CAME HERE IT IS TIME TO RE-CALIBRATE THE DRIVE
                        
   F2CE                 KEYIT:
   F2CE    3E04                 MVI     A,4
   F2D0    32 EE51              STA     KBIT
   F2D3    3A FA00              LDA     ISTAT           ;GET BACK LAST STATUS
   F2D6    A1                   ANA     C
   F2D7    CD F3C9              CALL    EPRINT
                        
   F2DA                 NORE:
                        
                        ;********************************************************
                        ;THE FOLLOWING ROUTINE WAITS FOR USER
                        ;TO RETRY OPERATION ON DRIVE WITH ERROR
                        ;********************************************************
                        
   F2DA    CD F36A              CALL    FHOME
   F2DD    DA F4B8              JC      FATERR
   F2E0    AF                   XRA     A
   F2E1    32 FA28              STA     TRACK
                        
                        ; ON A MEDIA ERROR YOU CAN TYPE IN A CONTROL CHARACTER
                        ; THAT DETERMINS WHAT THE BIOS AND BDOS WILL DO NEXT
                        ;
                        ; - CONTROL-C TO WARM BOOT (YOU GIVE UP ON ERROR)
                        ; - CONTROL-D TO IGNORE THE ERROR SO YOU CAN READ/WRITE
                        ;   'BAD' DATA AND CONTINUE ON WITHOUT A 'BDOS BAD SECTOR' MESSAGE
                        ; - <RETURN> TO RETRY THE OPERATION ANOTHER 12 TIMES
                        
   F2E4                 CRIN:
   F2E4    CD F534              CALL    CONST           ;SEE IF KEY PRESSED
   F2E7    28FB                 JRZ     CRIN            ;IF NOT KEEP RINGING
   F2E9    CD F537              CALL    CONIN           ;GET CHAR
   F2EC    FE03                 CPI     3               ;A ^C (y/n)
   F2EE    CA EE6A              JZ      EEXIT           ;DO A WARM BOOT IF SO
   F2F1    FE04                 CPI     4               ;A ^D (y/n)
   F2F3    280D                 JRZ     FXER            ;IGNORE ERROR
   F2F5    FE0D                 CPI     13              ;SEE IF 'CR'






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 26




   F2F7    20EB                 JRNZ    CRIN            ;IF NOT TRY AGAIN
   F2F9    21 F9FD              LXI     H,MRML
   F2FC    35                   DCR     M
   F2FD    37                   STC
   F2FE    C8                   RZ
   F2FF    C3 F1DC              JMP     MAC             ;DO ANOTHER RE-TRY
                                
                        
                        ;IGNORE DISK I/O ERROR AND CONTINUE WITH STATUS SET O.K.
                        
   F302                 FXER:
   F302    37                   STC                     ;FIX UP CARRY
   F303    3F                   CMC
   F304    AF                   XRA     A               ;CLEAR ERROR FLAG
   F305    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET Z3S CONTROL BYTE. GET 2 Z3S CONTROL BYTES, ONE
                        ; WITH THE HARDWARE WAIT BIT ACTIVE AND ONE WITHOUT,
                        ; FROM THE 8 POSSIBLE CONTROL BYTES. OUTPUT THE NO WAIT
                        ; BYTE. SAVE BOTH FOR LATER USE.
                        ;********************************************************
                        
   F306    3A F9E4      SETD3S: LDA     PTRACK          ;GET DESIRED TRACK
   F309    21 FA2B              LXI     H,OFF
   F30C    BE                   CMP     M               ;USER TRACK(y/n)
   F30D    21 FA24              LXI     H,US0N          ;POINT TO USER TRACK BYTES
   F310    3003                 JRNC    USER
   F312    21 FA20              LXI     H,SS0N          ;POINT TO SYSTEM TRACK BYTES
                        
   F315    3A F9E6      USER:   LDA     PSECT           ;TEST IF ON SIDE 1
   F318    CB7F                 BIT     7,A
   F31A    2802                 JRZ     SID0            ;ON SIDE 0
   F31C    23                   INX     H               ;POINT TO SIDE 1 BYTES
   F31D    23                   INX     H
                        
   F31E    5E           SID0:   MOV     E,M             ;GET THE NO WAIT BYTE
   F31F    23                   INX     H
   F320    56                   MOV     D,M             ;GET THE WAIT BYTE
   F321    ED53 F9F9            SDED    D3SNO           ;SAVE BOTH
   F325    7B                   MOV     A,E
   F326    D353                 OUT     DCMD            ;OUTPUT THE NO WAIT BYTE
   F328    32 FA02              STA     OD3S
   F32B    C9                   RET
                        
                        
                        ;********************************************************
                        ; GET Z3S CONTROL BYTES. CREATE THE EIGHT Z3S CONTROL
                        ; BYTES IN ATABLE. THESE BYTES SET THE DENSITY BIT FOR
                        ; SYSTEM TRACKS AND USER TRACKS, SELECT SIDE 0 OR SIDE
                        ; 1, AND ENABLE OR DISABLE THE HARDWARE DATA WAIT.
                        ; CREATE THE BYTES BY MERGING THE APPROPRIATE HARDWARE
                        ; CONTROL BITS IN OPRTAB WITH THE CORRECT ADDRESS
                        ; CONTROL BITS IN ADRTAB.






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 27




                        ;********************************************************
                        
   F32C    3A F9F0      GETD3S: LDA     ADISK           ;GET CURRENT DISK NUMBER
   F32F    21 EE4B              LXI     H,ADRTAB        ;POINT TO ADDRESS
   F332    5F                   MOV     E,A             ;CONTROL BITS TABLE
   F333    1600                 MVI     D,0
   F335    19                   DAD     D
   F336    4E                   MOV     C,M             ;SAVE ADDR BITS FOR Z3S BYTES
                        
   F337    3A FA2A              LDA     FLAG            ;GET THE FLAG
   F33A    E614                 ANI     00010100B       ;ISOLATE SYSTEM DENSITY, SIZE
   F33C    47                   MOV     B,A
   F33D    0F                   RRC                     ;ALIGN THE DENSITY BIT
   F33E    B0                   ORA     B               ;COMBINE SIZE AND DENSITY
   F33F    E60C                 ANI     00001100B       ;DROP UNALIGNED BITS
   F341    11 FA20              LXI     D,SS0N          ;POINT TO BEGINNING OF DEST
   F344    CD F34C              CALL    GET             ;GET SYSTEM TRACK Z3S BYTES
                        
   F347    3A FA2A              LDA     FLAG            ;GET THE FLAG
   F34A    E60C                 ANI     00001100B       ;ISOLATE USER DENSITY, SIZE
                                                        ;AND GET USER TRACK Z3S BYTES
                        
   F34C    21 EE3B      GET:    LXI     H,OPRTAB        ;POINT TO CONTROL BITS TABLE
   F34F    D5                   PUSH    D
   F350    5F                   MOV     E,A             ;GET CONTROL BITS START ADDRESS
   F351    1600                 MVI     D,0
   F353    19                   DAD     D               ;START ADDRESS NOW IN HL
   F354    D1                   POP     D               ;DESTINATION RESTORED TO DE
   F355    0604                 MVI     B,4
   F357    7E           LOOP3:  MOV     A,M             ;GET A BYTE OF CONTROL BITS
   F358    23                   INX     H
   F359    B1                   ORA     C               ;COMBINE WITH ADDRESS BITS
   F35A    12                   STAX    D               ;STORE COMBINED BYTE
   F35B    13                   INX     D
   F35C    10F9                 DJNZ    LOOP3           ;DO ALL BYTES
   F35E    C9                   RET
                        
                        ;********************************************************
                        ; WAIT FOR TRIM ERASE TO END. WAIT ONLY IF THE LAST
                        ; FLOPPY DISK COMMAND WAS A WRITE. CALLED ONLY IF
                        ; PHYSICAL HEAD MOTION IS NEEDED TO ACCESS THE NEXT
                        ; SECTOR. THE WAIT IS ABOUT 500 USEC AT 4 MHZ. THIS
                        ; ALLOWS TRIM ERASE TO COMPLETE BEFORE THE DRIVE IS
                        ; DESELECTED OR THE HEAD IS MOVED.
                        ;********************************************************
                        
   F35F    3A F9F3      TRIMWT: LDA     ORWCMD          ;GET LAST READ OR WRITE COMMAND
   F362    CB6F                 BIT     WBWRIT,A        ;TEST WRITE BIT
   F364    C8                   RZ                      ;IT WAS A READ, DON'T WAIT
   F365    0696                 MVI     B,150           ;WAIT
   F367    10FE                 DJNZ    . 
   F369    C9                   RET
                        
                        
                        ;********************************************************






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 28




                        ;* MULTI-PURPOSE 179X SEEK SUBROUTINE. THE ENTRY
                        ;* POINTS ARE:
                        ;*
                        ;*      FHOME - RESTORE HEAD TO TRACK 0 POSITION
                        ;*      FSEEK - SEEK WITH HEAD LOAD TO DEST. IN ACC
                        ;*
                        ;*      FUNLD - SEEK SAME TRACK TO UNLOAD HEAD
                        ;*      FLOAD - SEEK SAME TRACK TO LOAD HEAD
                        ;*
                        ;* FOR THESE LAST TWO FUNCTIONS THE COMMAND IS STILL IN
                        ;* PROGRESS WHEN RETURN IS MADE. THE CALLING PROGRAM
                        ;* MUST WAIT FOR THE COMMAND TO COMPLETE.
                        ;*******************************************************
                        
   F36A    060C         FHOME:  MVI     B,WHOME         ;SET UP HOME COMMAND
   F36C    1804                 JMPR    FH
                        
   F36E    D357         FSEEK:  OUT     WDATA           ;OUTPUT SEEK DESTINATION
   F370    061C                 MVI     B,WSEEK         ;SET UP SEEK, DIFFERENT TRACK
                        
   F372    3A FA29      FH:     LDA     SPEED           ;GET SEEK SPEED
   F375    B0                   ORA     B               ;MERGE WITH SEEK COMMAND
   F376    D354                 OUT     WCMD            ;OUTPUT TO 179X
   F378    32 FA03              STA     OCMD
   F37B    CD F3A1              CALL    FDONE
   F37E    E698                 ANI     WSSEEK          ;ELIMINATE UNWANTED STATUS BITS
                        
                        
                        ;********************************************************
                        ;    NOW GO IN A WAIT LOOP FOR HEAD SETTLE TIME
                        ;********************************************************
                        
   F380    F5           SETL:   PUSH    PSW             ;SAVE FLAGS
                        
   F381    3A F9F2              LDA     PCMD
   F384    CB6F                 BIT     5,A             ;SEE IF READ OR WRITE
   F386    2807                 JRZ     NDLY
                                
   F388    3E14                 MVI     A,20            ;WAIT 20 MS
   F38A    10FE         SETL1:  DJNZ    SETL1           ;LOOP ON B REG
   F38C    3D                   DCR     A               ;LOOP ON SETTLE VALUE
   F38D    20FB                 JRNZ    SETL1
   F38F                 NDLY:
   F38F    F1                   POP     PSW             ;GET BACK REGS
   F390    C8                   RZ                      ;RETURN - SUCCESSFUL 
   F391    37                   STC
   F392    C9                   RET                     ;RETURN WITH CARRY SET - ERROR
                        
   F393    0610         FUNLD:  MVI     B,WUNLD         ;SET UP UNLOAD COMMAND
   F395    1802                 JMPR    FU
                        
   F397    0618         FLOAD:  MVI     B,WLOAD         ;SET UP LOAD COMMAND
                        
   F399    DB55         FU:     IN      WTRACK          ;GET CURRENT TRACK
   F39B    D357                 OUT     WDATA           ;OUTPUT SEEK DESTINATION






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 29




                        
   F39D    78                   MOV     A,B             ;OUTPUT SEEK COMMAND
   F39E    D354                 OUT     WCMD
   F3A0    C9                   RET
                        
                        
                        ;********************************************************
                        ; 179X NOT BUSY SUBROUTINE. WAIT FOR 179X NOT BUSY.
                        ; THEN RETURN THE LAST STATUS READ FROM THE CHIP. THERE
                        ; ARE TWO ENTRY POINTS. FDONE DELAYS A SHORT WHILE TO
                        ; ALLOW THE 179X TO SET ITS BUSY BIT.
                        ; THIS ROUTINE TESTS FOR TYPE 1 AND TYPE 2
                        ; COMMAND COMPLETION. 
                        ;********************************************************
                        
   F3A1                 FDONE:
                                
   F3A1    D5                   PUSH D
   F3A2    E5                   PUSH H
                        
   F3A3    3A F9E3              LDA     PDISK
   F3A6    21 EE33              LXI     H,SPDTAB        ;POINT TO STEP SPEED TABLE
   F3A9    5F                   MOV     E,A
   F3AA    1600                 MVI     D,0
   F3AC    19                   DAD     D
   F3AD    7E                   MOV     A,M             ;GET SPEED BYTE FOR THIS DISK
                        
   F3AE    CB7F                 BIT 7,A         ;8" or 5"
   F3B0    3E27                 MVI     A,39    ;For 8""
   F3B2    2802                 JRZ     DELAY1  
   F3B4    3E3C                 MVI     A,60    ;For 5"
   F3B6    0600         DELAY1: MVI     B,0
   F3B8    10FE         M0:     DJNZ    M0
   F3BA    3D                   DCR             A
   F3BB    20F9                 JRNZ    DELAY1  
                        
   F3BD    E1                   POP H
   F3BE    D1                   POP D
                        
   F3BF                 FQDONE:
   F3BF                 PIODON:
   F3BF    DB54                 IN      WSTAT
   F3C1    32 FA00              STA     ISTAT
   F3C4    CB47                 BIT     WBBUSY,A
   F3C6    20F7                 JRNZ    PIODON
   F3C8    C9                   RET     
                                
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK ERROR PRINT SUBROUTINE. ANY NON ZERO BITS
                        ; IN THE ACCUMULATOR ARE ERRORS. THE FIRST ONE FOUND IS
                        ; PRINTED OUT.
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 30




   F3C9    57           EPRINT: MOV     D,A     ;SAVE ERROR BITS
   F3CA    79                   MOV     A,C     ;STORE CALLING ROUTINE ID
   F3CB    32 FA01              STA     ACTIVE
   F3CE    DB55                 IN      WTRACK  ;STORE TRACK REGISTER
   F3D0    32 F9FE              STA     ITRACK
   F3D3    DB56                 IN      WSECT   ;STORE SECTOR REGISTER
   F3D5    32 F9FF              STA     ISECT
                        
   F3D8    CD F4C2              CALL    MSG
   F3DB    0D0A                 .BYTE   CR,LF
   F3DD    457272206F6E         .ASCIS  \Err on \
   F3E4    3A F9E3              LDA     PDISK
   F3E7    C641                 ADI     'A'
   F3E9    4F                   MOV     C,A
   F3EA    CD EE0C              CALL    BIOOUT
   F3ED    CD F4C2              CALL    MSG
   F3F0    3A20A0               .ASCIS  \:  \
                        
   F3F3    CBCA                 SET     1,D     ;INSURE NON ZERO ERROR BYTE
   F3F5    0600                 MVI     B,0
   F3F7    04           ..FIND: INR     B
   F3F8    CB12                 RALR    D       ;FIND FIRST NON ZERO BIT
   F3FA    30FB                 JRNC    ..FIND
   F3FC    21 F423              LXI     H,ERMESS ;POINT TO MESSAGE TABLE
   F3FF    1805                 JMPR    ..JOIN
   F401    CB7E         ..MORE: BIT     7,M     ;TEST FOR END OF MESSAGE
   F403    23                   INX     H
   F404    28FB                 JRZ     ..MORE  ;KEEP LOOKING FOR END, THIS MSG
   F406    10F9         ..JOIN: DJNZ    ..MORE  ;KEEP LOOKING FOR CORRECT MSG
   F408    CD F4C8              CALL    MSGHL   ;PRINT OUT CORRECT MESSAGE
   F40B    CD F4C2              CALL    MSG
   F40E    A0                   .ASCIS  \ \
                        
   F40F    0607                 MVI     B,EILEN ;NUMBER OF ERROR INFO BYTES
   F411    21 F9FE              LXI     H,EINFO
   F414    CD F4C2      ..LOOP: CALL    MSG     ;SPACE BETWEEN BYTES
   F417    A0                   .ASCIS  \ \
   F418    7E                   MOV     A,M
   F419    23                   INX     H
   F41A    CD F452              CALL    LBYTE   ;PRINT NEXT BYTE
   F41D    10F5                 DJNZ    ..LOOP
                        
   F41F    3E01                 MVI     A,1     ;CP/M ERROR FLAG
   F421    37                   STC             ;INTERNAL ERROR FLAG
   F422    C9                   RET
                        
                        ; FLOPPY DISK ERROR MESSAGES. USED BY THE EPRINT
                        ; ROUTINE TO TELL THE USER WHICH 179X ERROR OCCURED.
                        
   F423    4E6F74205265 ERMESS: .ASCIS  \Not Ready\
   F42C    577269746520         .ASCIS  \Write Protect\
   F439    4661756CF4           .ASCIS  \Fault\
   F43E    524EC6               .ASCIS  \RNF\
   F441    426164204352         .ASCIS  \Bad CRC\
   F448    4C6F73742044         .ASCIS  \Lost Data\






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 31




   F451    BF                   .ASCIS  \?\
                        
                        
                        ;********************************************************
                        ;            PRINT HEX BYTE ON CONSOLE.
                        ;********************************************************
                        
   F452    F5           LBYTE:  PUSH    PSW
   F453    0F                   RRC
   F454    0F                   RRC
   F455    0F                   RRC
   F456    0F                   RRC
   F457    CD F45B              CALL    P2
   F45A    F1                   POP     PSW
   F45B    E60F         P2:     ANI     0FH
   F45D    C690                 ADI     90H
   F45F    27                   DAA
   F460    CE40                 ACI     40H
   F462    27                   DAA
   F463    4F                   MOV     C,A
   F464    C3 EE0C              JMP     BIOOUT
                        
                        
                        ;********************************************************
                        ; MOVE ATABLE INTO THE CORRECT APB. MOVE THE CORRECT
                        ; APB INTO ATABLE.
                        ;********************************************************
                        
   F467    3A F9F0      PUTAPB: LDA     ADISK           ;GET CURRENT ATABLE NUMBER
   F46A    CD F49B              CALL    ASET            ;SET UP FOR MOVE
   F46D    EDB0                 LDIR                    ;COPY ATABLE INTO APB
   F46F    C9                   RET
                        
   F470    21 F9F0      GETAPB: LXI     H,ADISK         ;POINT TO ATABLE DRIVE NUMBER
   F473    3A F9E3              LDA     PDISK           ;GET NEW NUMBER
   F476    BE                   CMP     M               ;THE SAME(y/n)
   F477    C8                   RZ                      ;YES, ATABLE ALREADY VALID
   F478    77                   MOV     M,A             ;UPDATE ATABLE NUMBER
   F479    CD F49B              CALL    ASET            ;SET UP FOR MOVE
   F47C    EB                   XCHG                    ;APB ADDRESS NOW SOURCE
   F47D    EDB0                 LDIR                    ;COPY APB INTO ATABLE
                        
                        ;NOW GET ALLOCATION SIZE FOR SELECTED DISK
                        
   F47F    3A F9E3              LDA     PDISK           ;GET DISK #
   F482    5F                   MOV     E,A             ;MAKE INDEX
   F483    1600                 MVI     D,0
   F485    21 FA05              LXI     H,ALOCSZ        ;POINT TO SAVED BSH TABLE
   F488    19                   DAD     D
   F489    7E                   MOV     A,M             ;GET BSH VALUE
   F48A    21 F496              LXI     H,ALOREC        ;POINT TO RECORDS/ALLOCATION SIZE
   F48D    D603                 SUI     3               ;SET FOR INDEX
   F48F    5F                   MOV     E,A             ;MAKE INDEX
   F490    19                   DAD     D
   F491    7E                   MOV     A,M             ;GET RECORDS/ALLOCATION






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 32




   F492    32 FA09              STA     ALOCA           ;SAVE # FOR SELECTED DRIVE
                        
   F495    C9                   RET
                        
                        ;TABLE FOR # OF RECORDS FOR ALLOCATION SIZES FROM 1K TO 16K
                        
   F496                 ALOREC:
   F496    0810204080           .BYTE   8,16,32,64,128
                        
                        
   F49B    6F           ASET:   MOV     L,A             ;GET DISK NUMBER INTO L
   F49C    CD F4A6              CALL    GETDPH
   F49F    21 FA20              LXI     H,ATABLE
   F4A2    01 0011              LXI     B,ALEN
   F4A5    C9                   RET
                        
                        
                        ;********************************************************
                        ; GET DPH ADDRESS AND APB ADDRESS. RETURN THE DPH
                        ; ADDRESS IN HL, THE CORRESPONDING APB ADDRESS IN DE.
                        ; DISK NUMBER MUST BE IN L AT CALL.
                        ;********************************************************
                        
   F4A6    2600         GETDPH: MVI     H,0
   F4A8    29                   DAD     H               ;GET NUMBER * 2
   F4A9    5D                   MOV     E,L
   F4AA    54                   MOV     D,H
   F4AB    29                   DAD     H
   F4AC    29                   DAD     H
   F4AD    29                   DAD     H               ;GET NUMBER * 16
   F4AE    19                   DAD     D               ;GET NUMBER * 18
   F4AF    11 F53D              LXI     D,APBBEG
   F4B2    19                   DAD     D               ;NOW WE HAVE ADDR OF APB ADDR
   F4B3    5E                   MOV     E,M             ;GET APB ADDRESS INTO DE
   F4B4    23                   INX     H
   F4B5    56                   MOV     D,M
   F4B6    23                   INX     H               ;HL NOW HAS DPH ADDRESS
   F4B7    C9                   RET
                        
                        
                        ;********************************************************
                        ;                  FATAL ERROR.
                        ;********************************************************
                        
   F4B8                 FATERR:
   F4B8    CD F4C2      QUIT:   CALL    MSG
   F4BB    205354               .ASCII  ' ST'
   F4BE    D0                   .BYTE   'P'+80H
   F4BF    C3 EE6A              JMP     EEXIT           ;GO WARM BOOT
                        
                        
                        ;********************************************************
                        ; MESSAGE OUTPUT SUBROUTINE. THERE ARE TWO ENTRY
                        ; POINTS. FOR MSG A MESSAGE FOLLOWS INLINE AFTER THE
                        ; CALL. FOR MSGHL THE MESSAGE ADDRESS IS IN HL. FOR






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 33




                        ; BOTH ENTRY POINTS THE MESSAGE IS PRINTED OUT UP TO
                        ; AND INCLUDING A CHARACTER WITH ITS HI ORDER BIT SET.
                        ;********************************************************
                        
   F4C2    E3           MSG:    XTHL                    ;GET MESSAGE ADDRESS
   F4C3    CD F4C8              CALL    MSGHL           ;PRINT THE MESSAGE
   F4C6    E3                   XTHL                    ;RESTORE NEW RETURN ADDRESS
   F4C7    C9                   RET
                        
   F4C8    4E           MSGHL:  MOV     C,M             ;GET NEXT CHAR OF MESSAGE
   F4C9    23                   INX     H
   F4CA    CD EE0C              CALL    BIOOUT          ;OUTPUT THE CHAR
   F4CD    B7                   ORA     A               ;TEST FOR HI BIT SET
   F4CE    F2 F4C8              JP      MSGHL           ;NOT SET, KEEP GOING
   F4D1    C9                   RET
                        
                        
                        ;********************************************************
                        ; I/O VECTORING ROUTINES. THESE ROUTINES USE THE IOBYTE
                        ; TO SELECT THE PHYSICAL DEVICE WHICH WILL CORRESPOND
                        ; TO THE CONSOLE OR TO THE LIST OUTPUT. THE JUMPS TO
                        ; THE PHYSICAL DEVICES SHOULD BE CHANGED HERE TO USE
                        ; EXTERNAL I/O. THIS RETAINS IOBYTE CONTROL OVER THE
                        ; ROUTINES.
                        ;********************************************************
                        
                        
                        ;********************************************************
                        ;    I/O ROUTINES FOR THE TTY PHYSICAL DEVICE.
                        ;********************************************************
                        
   F4D2    43494F5442           .ASCII  \CIOTB\
                        
   F4D7    00           CSTAT:  .BYTE   0
   F4D8    00           KBSTAT: .BYTE   0
   F4D9    01           CIO:    .BYTE   1
   F4DA    01           KBIO:   .BYTE   1
   F4DB    04           COUT:   .BYTE   4
   F4DC    02           KIN:    .BYTE   2
                        
   F4DD    4B4953               .ASCII  \KIS\
   F4E0                 TTYIS:
   F4E0    3A F4D8              LDA     KBSTAT
   F4E3    4F                   MOV     C,A
   F4E4    3A F4DC              LDA     KIN
   F4E7    5F                   MOV     E,A
   F4E8    ED78                 INP     A
   F4EA    00                   NOP
                        ;       CMA FOR NEGATIVE LOGIC
   F4EB    00                   NOP
   F4EC    A3                   ANA     E
   F4ED    00                   NOP
   F4EE    00                   NOP
   F4EF    C8                   RZ                      ;RETURN FALSE IF UNAVAILABLE
   F4F0    00                   NOP






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 34




   F4F1    00                   NOP
   F4F2    3EFF                 MVI     A,0FFH
   F4F4    C9                   RET                     ;RETURN TRUE
                        
   F4F5    4B49                 .ASCII  \KI\
                        
   F4F7    CD F4E0      TTYIN:  CALL    TTYIS           ;GET STATUS
   F4FA    CA F4F7              JZ      TTYIN           ;WAIT UNTIL DATA AVAILABLE
   F4FD    3A F4DA              LDA     KBIO
   F500    4F                   MOV     C,A
   F501    ED78                 INP     A
   F503    00                   NOP
   F504    00                   NOP
   F505    E67F                 ANI     07FH            ;DROP PARITY
   F507    C9                   RET
                        
   F508    434F53               .ASCII  \COS\
                        
   F50B                 TTYOS:
   F50B    C5                   PUSH    B
   F50C    3A F4D7              LDA     CSTAT
   F50F    4F                   MOV     C,A
   F510    3A F4DB              LDA     COUT
   F513    5F                   MOV     E,A
   F514    ED78                 INP     A
                        ;       CMA FOR NEGATIVE LOGIC
   F516    00                   NOP
   F517    00                   NOP
   F518    A3                   ANA     E
   F519    C1                   POP     B
   F51A    C8                   RZ                      ;RETURN FALSE IF NOT EMPTY
   F51B    00                   NOP
   F51C    00                   NOP
   F51D    3EFF                 MVI     A,0FFH
   F51F    C9                   RET                     ;RETURN TRUE
                        
   F520    434F                 .ASCII  \CO\
   F522                 TTYOUT:
   F522    CD F50B              CALL    TTYOS           ;GET STATUS
   F525    CA F522              JZ      TTYOUT          ;WAIT UNTIL BUFFER EMPTY
   F528    59                   MOV     E,C
   F529    3A F4D9              LDA     CIO
   F52C    4F                   MOV     C,A
   F52D    7B                   MOV     A,E
   F52E    00                   NOP
   F52F    00                   NOP
   F530    ED79                 OUTP    A               ;OUTPUT THE DATA
   F532    C9                   RET
                        
                        
                        
                        ;********************************************************
                        ; Unimplemented I/O Routines
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 35




   F533                 CRTIS: 
   F533                 READER:
   F533                 CRTIN:  
   F533                 CRTOS:  
   F533                 PUNCH:
   F533                 CRTOUT: 
   F533                 TUBE:
   F533                 LISTST:
   F533                 LIST:
   F533                 LISTC:
   F533                 LIST1:
   F533                 SERP:
   F533                 SPIN0:
   F533                 SPIN2:  
   F533                 CRTOT1:
   F533                 SPINST: 
   F533                 CENST:
   F533                 SERPST:
   F533    C9                   RET
                        
                        
                        ;********************************************************
                        ; IO ROUTINES FOR THE OTHER IOBYTE VECTORED DEVICES
                        ;********************************************************
                        
   F534                 CONST:  
   F534    C3 F4E0              JMP     TTYIS   
                        
   F537                 CONIN:  
   F537    C3 F4F7              JMP     TTYIN
                        
   F53A                 CONOUT:
   F53A    C3 F522              JMP     TTYOUT
                        
                        
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK DPH TABLE. FOR THE CONVENIENCE OF THE
                        ; CBIOS THE APB ADDRESS FOR A DISK PRECEDES THE DPH
                        ; FOR THE DISK.
                        ;********************************************************
                        
   F53D                 APBBEG:
   F53D    FA34                 .WORD   APB0
   F53F    FA54                 .WORD   TRANS0          ;LOGICAL TO PHYSICAL XLATE TAB
   F541    0000                 .WORD   0               ;SCRATCH
   F543    0000                 .WORD   0
   F545    0000                 .WORD   0
   F547    FC14                 .WORD   DIRBUF          ;DIRECTORY BUFFER
   F549    FA45                 .WORD   DPB0            ;DISK PARAMETER BLOCK
   F54B    FD00                 .WORD   CSV0            ;CHECKSUM VECTOR
   F54D    FC94                 .WORD   ALV0            ;ALLOCATION VECTOR
                        
   F54F    FAAC                 .WORD   APB1






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 36




   F551    FACC                 .WORD   TRANS1
   F553    0000                 .WORD   0
   F555    0000                 .WORD   0
   F557    0000                 .WORD   0
   F559    FC14                 .WORD   DIRBUF
   F55B    FABD                 .WORD   DPB1
   F55D    FDAC                 .WORD   CSV1
   F55F    FD40                 .WORD   ALV1
                        
   F561    FB24                 .WORD   APB2
   F563    FB44                 .WORD   TRANS2
   F565    0000                 .WORD   0
   F567    0000                 .WORD   0
   F569    0000                 .WORD   0
   F56B    FC14                 .WORD   DIRBUF
   F56D    FB35                 .WORD   DPB2
   F56F    FE58                 .WORD   CSV2
   F571    FDEC                 .WORD   ALV2
                        
   F573    FB9C                 .WORD   APB3
   F575    FBBC                 .WORD   TRANS3
   F577    0000                 .WORD   0
   F579    0000                 .WORD   0
   F57B    0000                 .WORD   0
   F57D    FC14                 .WORD   DIRBUF
   F57F    FBAD                 .WORD   DPB3
   F581    FF04                 .WORD   CSV3
   F583    FE98                 .WORD   ALV3
                        
                        
                        ;********************************************************
                        ; STANDARD APBS, DPBS AND TRANSLATE TABLES. THESE
                        ; TABLES ARE USED BY SELDSK WHEN IT CANNOT FIND A VALID
                        ; DDB ON THE DISK. THE TABLES ARE FOR STANDARD 8" OR 5"
                        ; SINGLE DENSITY FLOPPY DISKS. THIS ALLOWS PROGRAM
                        ; INTERCHANGE WITH OTHER CP/M BASED SYSTEMS WITHOUT
                        ; REQUIRING A DDB TO BE WRITTEN ON EACH DISK.
                        ;********************************************************
                        
                        
                        
                        ;********************************************************
                        ;             8" FLOPPY DISK TABLES.
                        ;********************************************************
                        
   F585                 STDDDB:
   F585    01                   .BYTE   00000001B       ;FLAG
   F586    0002                 .WORD   2               ;OFF
   F588    00                   .BYTE   0               ;SSLEN
   F589    1A                   .BYTE   26              ;SLRPS
   F58A    00                   .BYTE   0               ;USLEN
   F58B    1A                   .BYTE   26              ;ULRPS
                        
   F58C    001A                 .WORD   26              ;STANDARD DPB
   F58E    030700               .BYTE   3,7,0






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 37




   F591    00F2                 .WORD   242
   F593    003F                 .WORD   63
   F595    C000                 .BYTE   192,0
   F597    0010                 .WORD   16
   F599    0002                 .WORD   2
                        
   F59B    01070D131905         .BYTE   1,7,13,19,25,5,11,17,23
   F5A4    03090F150208         .BYTE   3,9,15,21,2,8,14,20,26
   F5AD    060C1218040A         .BYTE   6,12,18,24,4,10,16,22
                        
                        
                        
                        ;********************************************************
                        ;            5" FLOPPY DISK TABLES.
                        ;********************************************************
                        
                        
   F5B5    05           ALTDDB: .BYTE   00000101B       ;FLAG
   F5B6    0003                 .WORD   3               ;OFF
   F5B8    00                   .BYTE   0               ;SSLEN
   F5B9    12                   .BYTE   18              ;SLRPS
   F5BA    00                   .BYTE   0               ;USLEN
   F5BB    12                   .BYTE   18              ;ULRPS
                        
   F5BC    0012                 .WORD   18              ;STANDARD DPB
   F5BE    030700               .BYTE   3,7,0
   F5C1    0047                 .WORD   71
   F5C3    003F                 .WORD   63
   F5C5    C000                 .BYTE   192,0
   F5C7    0010                 .WORD   16
   F5C9    0003                 .WORD   3
                        
   F5CB    0105090D1103         .BYTE   1,5,9,13,17,3,7,11,15
   F5D4    02060A0E1204         .BYTE   2,6,10,14,18,4,8,12,16
                        
                        ;********************************************************
                        ;       SECTOR READ AND WRITE BUFFERS.
                        ;********************************************************
                        
                        ; THE ORIGINAL CBIOS HAD INDEPENDENT READ AND WRITE BUFFERS.
                        ; BOHDAN COULDN'T WORK WITH THE DRI SINGLE BUFFER ALGORITHM,
                        ; SO HE LIMITED SECTOR SIZES TO 512 BYTES, AND HAD THESE LOCAL
                        ; READ AND WRITE BUFFERS. THAT WAY HE COULD IGNORE ANY 
                        ; ALLOCATION BLOCK-SIZE FLAGGING THAT BDOS PROVIDED.
                        ; B. JONES IMPLEMENTED THE DRI DEBLOCKING, COMBINED
                        ; RDBUFF & WRBUFF TO GIVE 1024 BYTE SECTOR SUPPORT.
                        ; RDBUFF & WRBUFF REFERANCES ARE STILL TO BE FOUND
                        ; IN THE PHYSICAL R/W CODE. THEY HAVE BEEN KEPT AS
                        ; FOSILS TO MARK THE ORIGINAL BUFFERING SCHEME.
                        
   F5DD                 HSTBUF:
   F5DD                 RDBUFF:
   F5DD                 WRBUFF:
   F5DD                 SYSNIT:
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 38




                        ; SYSNIT CODE IS DISCARDED AFTER USE.
                        
   F5DD    CD F4C2      SIGNON: CALL    MSG
   F5E0    0D0A0A               .BYTE   CR,LF,LF
   F5E3    446967697461         .ASCII  'Digital Research CP/M 2.2 '
                        
   F5FD    3634                 .BYTE   (MSIZ)/10+'0',(MSIZ) @10+'0'
   F5FF    4B2F                 .ASCII  'K/'
                        
   F601    3536                 .BYTE (((BDOS-6)/1024)/10)+'0',((BDOS-6)/1024) @10+'0'
   F603    4B20545041           .ASCII  'K TPA'
   F608    0D0A                 .BYTE   CR,LF
                        
   F60A    566572736146         .ASCII  'VersaFloppy II BIOS'
   F61D    0D0A80               .BYTE   CR,LF,80H       
                        
   F620    C9                   RET
                        
   0044                         NITLEN  ==      .-SYSNIT
                        
   F621                 BIOEND:
                        
                        ;********************************************************
                        ;        SHOW HOW MUCH DISK SPACE IS LEFT
                        ;********************************************************
                        
                        ;TOTAL BYTE NEEDED ON BOOT TRACKS ARE
                        ;FROM CCP TO END OF BIOS CODE PLUS LODER + DDB
                        
   1F21                 TOTSIZ  ==      ((BIOEND-CCP)+128+128)
                        
                        ;SYSTEM SECTORS USED
                        
   000F                 SECUSD  ==      TOTSIZ/512
   1E00                 SECIS   ==      SECUSD*512
                        
                                .IFG    TOTSIZ-SECIS,[
   0010                         SECALL=SECUSD+1
                                ][
                                SECALL=SECUSD
                                ]
                        
                        
                        
                                .IFG    (.-BIOS)-(NSBIOS*128),[
                                .PRNTX  \BIOS EXCEEDS DISK SPACE \
                                ]
                        
                        
                                .DEFINE SBOND[XX]=[.PRNTX /XX BYTES OF SYSTEM TRACKS LEFT/
                                ]
                                .DEFINE SBOD[XX]=[.PRNTX /XX BYTES BEYOND SYSTEM TRACKS/
                                ]       
                        
                                .DEFINE TSIZE[XX]=[






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 39




                                .PRNTX  /XX BYTES TOTAL BOOT TRACKS SPACE NEEDED /      ]
                        
                        
                                .DEFINE SECNED[XX]=[
                                .PRNTX  /XX   OF 18, 512 BYTE SECTORS USED ON SYSTEM TRACKS /]
                        
                                .IF1,[
                                .IFG    (NSBIOS*128)-(.-BIOS),[
                                SBOND   \(NSBIOS*128)-(.-BIOS)
                                TSIZE   \TOTSIZ
                                .RADIX  10
                                SECNED  \SECALL
                                ][
                                SBOD    \(.-BIOS)-(NSBIOS*128)
                                ]
                                ]
                        
                        ;********************************************************
                        ; END OF BIOS INSTRUCTIONS AND CONSTANTS. BEGINNING
                        ; OF WORK AREA.
                        ;********************************************************
                        
                        ; 1024 BYTE HOST BUFFER ENDS HERE       
                        
   F9DD                         .LOC    HSTBUFF+1024
                        
                        ;********************************************************
                        ; CP/M CALL PARAMETER STORAGE. CP/M SETS THE LOGICAL
                        ; PARAMETERS BY PRELIMINARY CALLS BEFORE CALLING THE
                        ; READ OR WRITE ROUTINES. THE CP/M I/O ROUTINES SET
                        ; AND USE THE REMAINING VARIABLES.
                        ;********************************************************
                        
   F9DD                 DMAFLG: .BLKB   1               ;CONTROLLER TYPE FLAG   
   F9DE                 SEKSEC: .BLKB   2               ;LOGICAL SECTOR TO R/W
   F9E0                 DMAADD: .BLKB   2               ;LOGICAL & ACTUAL CP/M DMA ADDR
   F9E2                 CREC:   .BLKB   1               ;CURRENT RECORD WITHIN SECTOR
                        
                        
                        ;********************************************************
                        ; PHYSICAL DISK I/O PARAMETER STORAGE. THESE PARAMETERS
                        ; MUST BE SET BEFORE CALLING THE FLOPPY DISK PHYSICAL
                        ; READ OR WRITE ROUTINES.
                        ;********************************************************
                        
   F9E3                 PDISK:  .BLKB   1               ;PHYSICAL DISK FOR NEXT I/O
   F9E4                 PTRACK: .BLKB   2               ;PHYSICAL TRACK FOR NEXT I/O
   F9E6                 PSECT:  .BLKB   2               ;PHYSICAL SECTOR FOR NEXT I/O
   F9E8                 PDMA:   .BLKB   2               ;PHYSICAL BUFFER ADDR, NEXT I/O
                        
   F9EA                 CTRACK: .BLKB   2
   F9EC                 CSECT:  .BLKB   2
                        
                        
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 40




                        ;********************************************************
                        ;    GENERAL PURPOSE VARIABLES ARE STORED HERE.
                        ;********************************************************
                        
   F9EE                 RETRY:
   F9EE                 RMICRO: .BLKB   1               ;MICRO FDC RETRY COUNT
   F9EF                 RMACRO: .BLKB   1               ;MACRO FDC RETRY COUNT
   F9F0                 ADISK:  .BLKB   1               ;DISK NUMBER OF DISK AT ATABLE
   F9F1                 OLDFLO: .BLKB   1               ;OLD FLOPPY DRIVE NUMBER
   F9F2                 PCMD:   .BLKB   1               ;ACTUAL FLOPPY READ/WRITE CMD
   F9F3                 ORWCMD: .BLKB   1               ;LAST R/W OUTPUT TO CMD REG
   F9F4                 DPHADR: .BLKB   2               ;DPH ADDRESS FOR CURRENT DISK
   F9F6                 APBADR: .BLKB   2               ;APB ADDRESS FOR CURRENT DISK
   F9F8                 WRTYPE: .BLKB   1               ;TYPE OF WRITE
   F9F9                 D3SNO:  .BLKB   1               ;CURRENT NO WAIT Z3S BYTE
   F9FA                 D3SWT:  .BLKB   1               ;CURRENT WAIT Z3S BYTE
   F9FB                 SAVADR: .BLKB   2               ;STD OR ALT DDB ADDRESS
   F9FD                 MRML:   .BLKB   1               ;MACRO RETRY MAJOR LOOP
                        
                        
                        ;********************************************************
                        ; ERROR INFORMATION STORAGE. VARIOUS ROUTINES USE THIS
                        ; AREA TO STORE KEY VARIABLES RELATING TO THE Z3S
                        ; CONTROLLER AND THE 179X CHIP. 
                        ;********************************************************
                        
   F9FE                 EINFO:
   F9FE                 ITRACK: .BLKB   1               ;LAST INPUT FROM TRACK REG
   F9FF                 ISECT:  .BLKB   1               ;LAST INPUT FROM SECTOR REG
   FA00                 ISTAT:  .BLKB   1               ;LAST INPUT FROM STATUS REG
   FA01                 ACTIVE: .BLKB   1               ;SHOWS WHICH ROUTINE HAD ERROR
   FA02                 OD3S:   .BLKB   1               ;LAST OUTPUT TO Z3S CTRL BYTE
   FA03                 OCMD:   .BLKB   1               ;LAST OUTPUT TO CMD REG
   FA04                 SIDEID: .BLKB   1               ;LASE SIDE SELECTED
                        
   0007                 EILEN   ==      .-EINFO
                        
                        
                        
                        ;********************************************************
                        ;*   ALLOCATION VALUES FOR SELECTED DISKS ARE NEXT
                        ;********************************************************
                        
   FA05                 ALOCSZ: .BLKB   4               ;BSH VALUE FOR 4 DRIVES
   FA09                 ALOCA:  .BLKB   1               ;RECORDS/BLOCK FOR SELECTED DRIVE
                        
                                ;UNALLOCATED PARAMETERS FOLLOW
                        
                        
   FA0A                 UNACNT: .BLKB   1               ;UNALLOCATED RECORD COUNT
                        
   FA0B                 UNADSK: .BLKB   1               ;      "     DISK #     
   FA0C                 UNATRK: .BLKB   2               ;      "     TRACK #
   FA0E                 UNASEC: .BLKB   2               ;      "     SECTOR #
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 41




   FA10                 NEWSEC: .BLKB   2               ;CP/M SET SECTOR
                        
   FA12                 RSFLAG: .BLKB   1               ;READ SECTOR FLAG
   FA13                 READOP: .BLKB   1               ;READ = 0, WRITE = 1
   FA14                 HSTACT: .BLKB   1               ;0 = HOST NOT ACTIVE
   FA15                 HSTWRT: .BLKB   1               ;HOST WRITTEN FLAG
                        
                        
   FA16                 HSTDSK: .BLKB   1
   FA17                 HSTTRK: .BLKB   2
   FA19                 HSTSEC: .BLKB   2
                        
   FA1B                 SEKDSK: .BLKB   1
   FA1C                 SEKTRK: .BLKB   2
   FA1E                 SEKHST: .BLKB   2
                        
   0016                         UNALEN  ==      .-UNACNT
                        
                        
                        ;********************************************************
                        ; APB COPY FOR CURRENT DISK. THE APB CONTAINS SEVERAL
                        ; IMPORTANT BYTES NEEDED TO CONTROL THE ACTIVE DISK
                        ; DRIVE. THE EXACT LENGTH AND ORDERING OF THESE ENTRIES
                        ; IS CRITICAL, SO CHANGES MUST BE MADE WITH CARE. ONLY
                        ; THE FLAG BYTE HAS ANY MEANING FOR A HARD DISK.
                        ;********************************************************
                        
   FA20                 ATABLE:
   FA20                 SS0N:   .BLKB   1               ;SYSTEM TRACK Z3S CONTROL BYTES
   FA21                 SS0W:   .BLKB   1
   FA22                 SS1N:   .BLKB   1
   FA23                 SS1W:   .BLKB   1
   FA24                 US0N:   .BLKB   1               ;USER TRACK Z3S CONTROL BYTES
   FA25                 US0W:   .BLKB   1
   FA26                 US1N:   .BLKB   1
   FA27                 US1W:   .BLKB   1
   FA28                 TRACK:  .BLKB   1               ;CURRENT TRACK
   FA29                 SPEED:  .BLKB   1               ;DRIVE SEEK SPEED
   FA2A                 FLAG:   .BLKB   1               ;FLAG BYTE
   FA2B                 OFF:    .BLKB   2               ;NUMBER OF SYSTEM TRACKS
   FA2D                 SSLEN:  .BLKB   1               ;SECTOR LENGTH, SYSTEM
   FA2E                 SLRPS:  .BLKB   1               ;RECORDS PER SIDE, SYS TRACKS
   FA2F                 USLEN:  .BLKB   1               ;SECTOR LENGTH, USER TRACKS
   FA30                 ULRPS:  .BLKB   1               ;RECORDS PER SIDE, USER TRACKS
                        
   0011                 ALEN    ==      .-ATABLE        ;ATABLE LENGTH
                        
   FA31                 CHKRDS: .BLKB   1               ;READ CHECK RETRIES
   FA32                 DEDMA:  .BLKB   2               ;DE FOR DMA OP.
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK APBS, DPBS AND TRANSLATE TABLES. THE APB
                        ; FOR EACH DRIVE IS HERE, FOLLOWED BY THE DPB, FOLLOWED
                        ; BY THE TRANSLATE TABLE. EXTERNAL ROUTINES NEEDING TO






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 42




                        ; ACCESS THE APB ASSUME THAT IT IMMEDIATELY PRECEDES
                        ; THE DPB.
                        ;********************************************************
                        
   FA34                 APB0:   .BLKB   ALEN            ;AUXILIARY PARAMETER BLOCK
   FA45                 DPB0:   .BLKB   15              ;DISK PARAMETER BLOCK
                        
   000F                 DPBLEN  ==      .-DPB0
                        
   FA54                 TRANS0: .BLKB   88              ;TRANSLATE TABLE
                        
   0058                 TRALEN  ==      .-TRANS0
   0078                 APBDIS  ==      .-APB0
                        
                        
   FAAC                 APB1:   .BLKB   ALEN
   FABD                 DPB1:   .BLKB   15
   FACC                 TRANS1: .BLKB   88
                        
                        
   FB24                 APB2:   .BLKB   ALEN
   FB35                 DPB2:   .BLKB   15
   FB44                 TRANS2: .BLKB   88
                        
                        
   FB9C                 APB3:   .BLKB   ALEN
   FBAD                 DPB3:   .BLKB   15
   FBBC                 TRANS3: .BLKB   88
                        
                        
                        
                        
                        ;********************************************************
                        ; CP/M WORK AREA. USED BY CP/M FOR DIRECTORY
                        ; OPERATIONS, FLOPPY DISK ALLOCATION VECTORS,
                        ; AND FLOPPY DISK CHANGED DISK CHECKSUMS.
                        ;********************************************************
                        
   FC14                 DIRBUF: .BLKB   128             ;DIRECTORY OPERATION BUFFER
                        
   FC94                 ALV0:   .BLKB   108             ;ALLOCATION VECTOR
   FD00                 CSV0:   .BLKB   64              ;CHECKSUM VECTOR
                        
   FD40                 ALV1:   .BLKB   108
   FDAC                 CSV1:   .BLKB   64
                        
                        
   FDEC                 ALV2:   .BLKB   108
   FE58                 CSV2:   .BLKB   64
                        
   FE98                 ALV3:   .BLKB   108
   FF04                 CSV3:   .BLKB   64
                        
   FF44                 LASLOC:
   0967                 WRKSP   ==      .-HSTBUF






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 43




                        
                        ; END OF WORK AREA.
                        
   3180                 OFFST   ==      1F80H -BIOS
                        
                        
                        
                                .IF1,[
                        
                        ;//MODIFIED TO PRINT HOW FAR OUT YOU ARE.
                        
                                .DEFINE BADMEM[XX]=[
                                .PRNTX  / !! ** BIOS EXCEEDS MEMORY SIZE BY XX BYTES, SET 'BIOSIZ' LARGER ** !!/        ]
                        
                                .DEFINE OKMEM[XX]=[
                                .PRNTX  /XX   BYTES OF MEMORY LEFT BY BIOS/     ]
                        
                                .DEFINE SBIOS[XX]=[
                                .PRNTX  /XX IS START OF BIOS/                   ]
                        
                                .DEFINE LASTM[XX]=[
                                .PRNTX  /XX IS LAST LOCATION USED/              ]
                        
                                .DEFINE BDOSL[XX]=[
                                .PRNTX  /XX IS START OF BDOS/                   ]
                        
                                .DEFINE CCPL[XX]=[
                                .PRNTX  /XX IS START OF CCP/                    ]
                        
                                .DEFINE LEFMEM[XX]=[
                                .PRNTX  /XX IS 1st FREE ADDRESS AFTER BIOS/     ]
                        
                                .DEFINE WORKSP[XX]=[
                                .PRNTX  /XX BYTES IS WORKSPACE USED BY BIOS/]
                        
                                .DEFINE OFFSET[XX]=[
                                .PRNTX  /XX IS BIOS OFFSET /                    ]
                        
                        
                                .DEFINE MOVCPM[XX]=[
                                .PRNTX  /XX   IS MOVCPM VALUE /                 ]
                        
                                .DEFINE CODEND[XX]=[
                                .PRNTX  /XX IS LAST BIOS RUNTIME CODE OR STATIC DATA LOCATION /]
                        
                                .DEFINE WRKEND[XX]=[
                                .PRNTX  /XX IS END OF DISCARDED INITIALIZATION CODE /   ]
                        
                                .DEFINE CIOLOC[XX]=[
                                .PRNTX  /XX IS CIOTB START IN SYSGENABLE MEMORY IMAGE/  ]
                        
                                .IFG    (.-BIOS)-(6*256+BIOSIZ*1024),[
                        
                                BADMEM  \((.-BIOS)-(6*256+BIOSIZ*1024))
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 44




                                .RADIX  16
                                CCPL    \CCP
                                BDOSL   \BDOS
                                SBIOS   \BIOS
                                CODEND  \HSTBUF-1
                                WRKEND  \BIOEND
                                CIOLOC  \(CSTAT+OFFST)
                                .RADIX  10
                                WORKSP  \WRKSP
                                .RADIX  16
                                LASTM   \.-1
                                LEFMEM  \.
                                OFFSET  \OFFST
                                .RADIX  10
                                MOVCPM  \MOVEIT
                        
                                        ][
                        
                                OKMEM   \ (MSIZ*1024)-LASLOC
                        
                        
                                .RADIX  16
                                CCPL    \CCP
                                BDOSL   \BDOS
                                SBIOS   \BIOS
                                CODEND  \HSTBUF-1
                                WRKEND  \BIOEND
                                CIOLOC  \(CSTAT+OFFST)
                                .RADIX  10
                                WORKSP  \WRKSP
                                .RADIX  16
                                LASTM   \.-1
                                LEFMEM  \.
                                OFFSET  \OFFST
                                .RADIX  10
                                MOVCPM  \MOVEIT
                        
                        
                                        ]
                                        ]
                        
                        
                        
                        
                        
                                .END












                                                                         