


TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 1




                        ;********************************************************
                        ;*                     V2BIOS.ASM                       *
                        ;*               FLOPPY CBIOS FOR CP/M 2.XX             *
                        ;*                     DEC 15  2003                     * 
                        ;********************************************************
                        
                        ; WRITTEN BY B. Y. TASHCHUK 1980
                        ;==================================================
                        ; MANY THANKS TO BOHDAN TASHCHUK FOR THIS CODE
                        ; AND HIS QUALITY SUPPORT OF THOSE WHO USED IT
                        ;==================================================
                        ;
                        ; B. JONES 1981
                        ; - ADDED SUPPORT FOR 9, 512 BYTE SECTORS ON
                        ;   SYSTEM TRACKS TO SUPPORT LARGER BIOS TYPES
                        ;   (MORE DRIVES, HARD DISKS, SPECIAL FUNCTIONS ETC.)
                        ; - ADDED 1024 BYTE SECTOR SUPPORT
                        ;   THIS SPEEDS UP DISK OPERATIONS BY 70% AND
                        ;   ADDS 220K MORE USEABLE SPACE
                        ; - ADDED MULTIPLE ALLOCATION BLOCK SIZE SUPPORT
                        ; - ADDED VERBOSE ASSEMBLY-TIME STRUCTURE INFORMATION
                        ;   RAM AND SECTOR USEAGE, MOVCPM VALUE AND DDT R VALUE
                        ;   END-OF-CODE/STATIC DATA AND TOTAL SIZE INFO
                        ; - ADDED 'CONTINUE' FOR HARD MEDIA DEFECTS
                        ;   THIS FEATURE ALLOWS ONE TO CONTINUE DISK
                        ;   OPERATIONS, EVEN THOUGH THE MEDIA HAS PERMINANT
                        ;   BAD SPOTS. LETS YOU RECOVER FILES YOU REALLY WANT!
                        ; - ADDED REMOTE SYSTEM CONTROL VIA MODEM
                        ; - ADDED SIMULTANEOUS TARBELL DD DMA FDC SUPPORT
                        ; - ADDED SPINWRITER SHIFT TESTING
                        ; - ADDED MULTI 'FOREIGN' DISK FORMAT SUPPORT
                        ;
                        ; B. JONES SEPT 2003
                        ; - ADDED Z80 DMA SUPPORT
                        ; - ADDED FULL FDC E.O.O. INTERRUPT SUPPORT
                        ;
                        ; B.JONES NOV. 2003
                        ; - ADDED VERSAFLOPPY II SUPPORT
                        ; - ADDED SUPPORT FOR FOUR DRIVES, UP TO 1.66 MBYTES EACH
                        ; - REMOVED REMOTE SYSTEM CONTROL
                        ; - REMOVED TARBELL DD DMA FDC SUPPORT
                        ; - REMOVED SPINWRITER SHIFT TESTING
                        ; - REMOVED Z80 DMA SUPPORT, THIS VERSION
                        ; - REMOVED FDC E.O.O. INTERRUPT SUPPORT, THIS VERSION
                        ; - REMOVED 'FOREIGN' FORMAT SUPPORT, THIS VERSION
                        ; - ADDED Z3S & VF II TEST & CONFIGURE AT STARTUP  
                        
                        
                                .PABS
                                .PHEX
                                .XLINK
                                .Z80
                        
   0022                 CPVERS  ==      22H             ;CP/M VERSION NUMBER
   0000                 BIVERS  ==      0H              ;BIOS VERSION NUMBER






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 2




   FFFF                 TRUE    ==      -1              ;TRUE AND FALSE VALUES
   0000                 FALSE   ==      #TRUE
   FFFF                 Z3S     ==      TRUE            ;THIS VERSION FOR PIO
                        
                        ;********************************************************
                        ;          CP/M SYSTEM SIZE ETC. NEXT
                        ;********************************************************
                        ; DISK DRIVE OPTIONS FIRST
                        
   0003                 NODSK   ==      3               ;NUMBER OF DISKS ALLOWED
   FFFF                 STEP    ==      TRUE    ;OLD STEP RATE SWITCH, MAY USE AGAIN
   0000                 STEPS   ==      0               ;8" STEP RATE 0=3MS STEP RATE FOR DRIVES
   0080                 STEPR   ==      080H    ;5" STEP RATE 
                                                                ;LOOK AT THE STEP SPEED TABLE FURTHER ON
                                                                ;TO SEE POSSIBLE VALUES.
   0000                 HLDOPT  ==      0               ;1 KEEP HEADS LOADED, 0 FOR UNLOADS
                        
                        ; CP/M MEMORY CALCULATIONS AND CONSTANTS
                        
                        ;================= NOTE ====================
                        ;*******************************************
                        ;BIOS SIZE FUNCTION (* 1024 BYTES)  NEXT
                        ;*******************************************
                        ;================= NOTE ====================
                        
   0003                 BIOSIZ  ==      3       ;THIS BIOS FITS WITHIN 3K
                                                ;IF YOU ENLARGE THE BIOS, YOU WILL INCREASE
                                                ;BIOSIZ BY 1 FOR EACH ADDITIONAL KILOBYTE, OR
                                                ;PART THEREOF.
                        
   0040                 MSIZ    =\      \ENTER TOTAL MEMORY SIZE IN KILOBYTES EG: 48 OR 64 \
                        
                        ;MSIZ   ==      64              ;ACTUAL AVAILABLE MEMORY SIZE
   003D                 MSIZE   ==      MSIZ-BIOSIZ     ;SUBTRACT BIOS SIZE
   A400                 BIAS    ==      (MSIZE-20)*1024 ;THE DRI BIAS FACTOR
   D800                 CCP     ==      3400H+BIAS      ;BASE OF CCP
   E006                 BDOS    ==      CCP+806H        ;BASE OF BDOS
   EE00                 BIOS    ==      CCP+1600H       ;BASE OF BIOS
   F406                 MOVECP  ==      BDOS+1400H      ;MOVECPM ADJUST
   003D                 MOVEIT  ==      MOVECP/1024
   002C                 NSECTS  ==      (BIOS-CCP)/128  ;WARM START SECTOR CNT, 128 BYTES SECTORS
   001A                 NSBIOS  ==      70-NSECTS       ;MAX SECTORS FOR CBIOS & CP/M
                                                        ;BASED ON HAVING 9, 512 BYTE SECTORS
                                                        ;ON THE SYSTEM TRACKS (0 & 1)
                                                        ;WITH 70 OF THOSE 128 BYTE LOGICAL
                                                        ;SECTORS BEING USEABLE FOR CP/M USE
                                                        ;72 LOGICAL SECTORS IS ACTUAL, BUT
                                                        ;ONE IS THE SYSTEM LOADER, AND ONE IS
                                                        ;A DISK DESCRIPTER BLOCK (DDB), THUS
                                                        ;70 ARE AVAILABLE FOR CP/M & BIOS
   0004                 CPMDSK  ==      0004H           ;CURRENT DISK NUMBER ADDR
   0003                 IOBYTE  ==      0003H           ;INTEL I/O BYTE ADDR
                        
                        ; USE SOME CONTROL CHARACTERS
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 3




   000D                 CR      ==      13
   000A                 LF      ==      10
   0007                 BELL    ==      7
   001A                 CLEAR   ==      26      ;ZEUS80 CLEAR SCREEN
                        
                        
                        ;********************************************************
                        ;*          SYSTEM DATA I/O PORT CONSTANTS NEXT
                        ;********************************************************
                        
                        ;                KEYBOARD & SCREEN
                        
                        ; MAIN CONSOLE IS SD SYSTEMS VDB-8024
                        
   0001                 TTYI    ==      1               ;TTY INPUT PORT ADDRESS
   0001                 TTYO    ==      1               ;TTY OUTPUT PORT ADDRESS
   0000                 TTYS    ==      0               ;TTY I/O STATUS PORT ADDRESS
   0002                 TTYDA   ==      2               ;TTY DATA AVAILABLE MASK
   0004                 TTYBE   ==      4               ;TTY XMIT BUFFER EMPTY MASK
                        
                        ;                   MODEM PORT
                        
   0005                 CRTI    ==      5               ;CRT INPUT PORT ADDRESS (MODEM)
   0005                 CRTO    ==      5               ;CRT OUTPUT PORT ADDRESS (MODEM)
   0004                 CRTS    ==      4               ;CRT I/O STATUS PORT ADDRESS
   0001                 CRTDA   ==      1               ;CRT DATA AVAILABLE MASK
   0080                 CRTBE   ==      80H             ;CRT XMIT BUFFER EMPTY MASK
                        
                        
                        
                        ;    PRINTER PORTS FOLLOW , PARALLEL PRINTER                    
                        ; WE HAVE TWO PORTS, WITH A COMMON DATA BUFFER
                        ; BUT INDIVIDUAL STATUS AND STOBE BITS
                        
   0006                 LSTST   ==      6               ;LIST DEVICE STATUS PORT
   0007                 LSTDAT  ==      7               ;LIST DEVICE DATA PORT
   0009                 CEN     ==      9               ;TURN ON CENTRONICS PORT
   0008                 SPIN    ==      8               ;TURN ON SPINWRITER PORT
                        
                        
                        ;          SERIAL PRINTER PORT NEXT
                        ; DEVICE OUTPUT READY MASK IS SAME AS MODEM PORT = CRTBE
                        ; INPUT DATA AVAILABLE MASK IS SAME AS MODEM = CRTDA
                        
   0002                 SERST   ==      2               ;SERIAL PRINTER STATUS
   0003                 SERDT   ==      3               ;SERIAL PRINTER DATA PORT
                                        
   0003                 CMSK    ==      00000011B       ;IOBYTE MASK FOR CONSOLE
   00C0                 LMSK    ==      11000000B       ;IOBYTE MASK FOR LIST
                        
                        ;********************************************************
                        ;                 FLOPPY DISK EQUATES.
                        ;********************************************************
                        ;********************************************************
                        ;              PIO CONTROLLER PORTS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 4




                        ;********************************************************
                        
   0053                 DCMD    ==      53H             ;Z3S COMMAND/CONTROL PORT
   0054                 W       ==      54H             ;WDC 179X ADDRESS
   0054                 WCMD    ==      W+0             ;COMMAND PORT
   0054                 WSTAT   ==      W+0             ;STATUS PORT
   0055                 WTRACK  ==      W+1             ;TRACK REG
   0056                 WSECT   ==      W+2             ;SECTOR REG
   0057                 WDATA   ==      W+3             ;DATA I/O REG
                        
                        ;********************************************************
                        ;            COMMON 179X CONTROLLER COMMANDS
                        ;********************************************************
                        
   000C                 WHOME   ==      00001100B       ;HOME COMMAND
   0080                 WREAD   ==      10000000B       ;READ SECTOR COMMAND
   00A0                 WWRITE  ==      10100000B       ;WRITE SECTOR COMMAND
   001C                 WSEEK   ==      00011100B       ;SEEK TO GIVEN TRACK COMMAND
   0010                 WUNLD   ==      00010000B       ;SEEK AND UNLOAD HEAD COMMAND
   0018                 WLOAD   ==      00011000B       ;SEEK AND LOAD HEAD COMMAND
                        
                        
                        ;********************************************************
                        ;             COMMON 179X CONTROLLER STATUS
                        ;********************************************************
                        
   0000                 WBBUSY  ==      0               ;179X BUSY STATUS BIT
   0001                 WBSID1  ==      1               ;SIDE SELECT FLAG COMMAND BIT
   0002                 WBDEL   ==      2               ;HEAD SETTLE DELAY COMMAND BIT
   0003                 WBSIDE  ==  3           ;EXPECT SIDE BIT
   0005                 WBWRIT  ==      5               ;READ/WRITE DISTINGUISHING BIT
   0004                 WBRNF   ==      4               ;RECORD NOT FOUND STATUS BIT
   009C                 WSREAD  ==      10011100B       ;READ SECTOR STATUS MASK
   00FC                 WSWRIT  ==      11111100B       ;WRITE SECTOR STATUS MASK
   0098                 WSSEEK  ==      10011000B       ;SEEK STATUS MASK
   00D0                 WFCINT  ==      11010000B       ;FORCE INTERRUPT COMMAND
                        
                        
                        ;********************************************************
                        ; PRIMARY JUMP TABLE. ALL CALLS FROM CP/M TO THE CBIOS
                        ; COME THROUGH THIS TABLE.
                        ;********************************************************
                        
   EE00                         .LOC    BIOS
                        
                        
   EE00    C3 EE52              JMP     CBOOT           ;COLD BOOT
   EE03    C3 EE63      WBOOTE: JMP     WBOOT           ;WARM BOOT
   EE06    C3 F56A              JMP     CONST           ;CONSOLE STATUS
   EE09    C3 F56D              JMP     CONIN           ;CONSOLE CHARACTER IN
   EE0C    C3 F570      BIOOUT: JMP     CONOUT          ;CONSOLE CHARACTER OUT,
   EE0F    C3 F569              JMP     LIST            ;LIST CHARACTER OUT
   EE12    C3 F569              JMP     PUNCH           ;PUNCH CHARACTER OUT
   EE15    C3 F569              JMP     READER          ;READER CHARACTER IN
   EE18    C3 F001              JMP     HOME            ;MOVE HEAD TO HOME POSITION






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 5




   EE1B    C3 EF11              JMP     SELDSK          ;SELECT DISK
   EE1E    C3 F010              JMP     SETTRK          ;SET TRACK NUMBER
   EE21    C3 F015              JMP     SETSEC          ;SET SECTOR NUMBER
   EE24    C3 F01A              JMP     SETDMA          ;SET DMA ADDRESS
   EE27    C3 F02A              JMP     READ            ;READ DISK
   EE2A    C3 F03D              JMP     WRITE           ;WRITE DISK
   EE2D    C3 F569              JMP     LISTST          ;RETURN LIST STATUS
   EE30    C3 F01F              JMP     SECTRA          ;SECTOR TRANSLATE
                        
                        
                        
                        ;********************************************************
                        ; STEP SPEED TABLE. THIS TABLE TELLS THE BIOS WHAT SIZE
                        ; OF DRIVE IS AT EACH ADDRESS AND WHAT TRACK TO TRACK
                        ; STEPPING SPEED TO USE FOR THAT DRIVE. THE BITS MEAN
                        ; THE FOLLOWING:
                        ;********************************************************
                        
                        ;       1000 0011
                        ;       ^      ^
                        ;       :      +- THE 179X STEP SPEED BITS. THESE ARE:
                        ;       :               VALUE   8"      5"
                        ;       :               00      3 MS    6 MS
                        ;       :               01      6 MS    12 MS
                        ;       :               10      10 MS   20 MS
                        ;       :               11      15 MS   30 MS
                        ;       :
                        ;       +-------- 0=8 INCH DISK AT THIS ADDRESS,
                        ;                 1=5 INCH DISK AT THIS ADDRESS.
                        
   EE33                 SPDTAB:
   EE33    00                   .BYTE   STEPS           ;DRIVE A
   EE34    00               .BYTE       STEPS           ;DRIVE B
   EE35    80                   .BYTE   STEPR           ;DRIVE C
   EE36    80                   .BYTE   STEPR           ;DRIVE D
                        
                        
                        ; OK TO CHANGE THE NEXT TWO BYTES.
                        
   EE37    54           INITIO: .BYTE   01010100B       ;INITIAL I/O BYTE AND
   EE38    00                           .BYTE   0H                      ;INITIAL DISK AFTER COLD BOOT
                        
   EE39    04           HOMER:  .BYTE   4               ;ALLOW 3 USER DISK FIXES
   EE3A    0A           RETRYIT:.BYTE   10              ;RETRY 10 TIMES EACH
                        
                        ;********************************************************
                        ; Z3S OPERATING CONTROL TABLE. THIS TABLE CONTAINS
                        ; THOSE BITS IN THE Z3S CONTROL BYTE WHICH SELECT THE
                        ; OPERATING MODE. THESE BITS ARE COMBINED WITH ADDRESS
                        ; CONTROL BITS TO FORM A COMPLETE Z3S CONTROL BYTE. THE
                        ; BITS ARE DEFINED AS FOLLOWS:
                        ;
                        ;                      NOTE
                        ;
                        ; THIS BIOS IS CODED FOR THE VERSAFLOPPY II.






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 6




                        ; REFERANCES TO Z3S OR Z4S FUNCTIONALITY THROUGHOUT
                        ; THE SOURCE ARE IN FACT FOR VF-II, AS THE OPERATING
                        ; TABLE BELOW SETS ALL SUCH FUNCTIONALITY FOR
                        ; VERSAFLOPPY II USE ONLY.
                        ;********************************************************
                        
                        ; VF-II VERSION OF TABLE
                        ;
                        ;       1111 0000
                        ;       ^^^^ ^
                        ;       :::: +- THESE BITS IN ADDRESS CONTROL TABLE
                        ;       ::::
                        ;       :::+--- 0=SIDE 1, 1=SIDE 0
                        ;   ::+---- 1=8 INCH DISK, 0=5 INCH DISK
                        ;       :+----- 1=SINGLE DENSITY (FM), 0=DOUBLE (MFM)
                        ;       +------ 0=ENABLE HARDWARE WAIT, 1=DISABLE
                        
   EE3B                 OPRTAB:
                        
                        ; FOR VERSAFLOPPY II
                        ; SIZE &         
                        ; DENSITY        
                        
   EE3B                 C8S:
   EE3B    F0                   .BYTE   11110000B       ;SIDE 0, NO WAIT
   EE3C    70                   .BYTE   01110000B       ;SIDE 0, WAIT
   EE3D    E0                   .BYTE   11100000B       ;SIDE 1, NO WAIT
   EE3E    60                   .BYTE   01100000B       ;SIDE 1, WAIT
                        
   EE3F                 C5S:    
   EE3F    D0                   .BYTE   11010000B
   EE40    50                   .BYTE   01010000B
   EE41    C0                   .BYTE   11000000B
   EE42    40                   .BYTE   01000000B
                        
   EE43                 C8D:    
   EE43    B0                   .BYTE   10110000B       ;SIDE 0, NO WAIT
   EE44    30                   .BYTE   00110000B       ;SIDE 0, WAIT
   EE45    A0                   .BYTE   10100000B       ;SIDE 1, NO WAIT
   EE46    20                   .BYTE   00100000B       ;SIDE 1, WAIT
                        
   EE47                 C5D:    
   EE47    90                   .BYTE   10010000B
   EE48    10                   .BYTE   00010000B
   EE49    80                   .BYTE   10000000B
   EE4A    00                   .BYTE   00000000B
                        
                        ;********************************************************
                        ; Z3S ADDRESS CONTROL TABLE. THIS TABLE CONTAINS THSOE
                        ; BITS IN THE Z3S BYTE WHICH SELECT THE ACTIVE DISK.
                        ; THESE BITS ARE COMBINED WITH OPERATING CONTROL BITS
                        ; TO FORM A COMPLETE Z3S CONTROL BYTE.
                        ;********************************************************
                        
   EE4B                 ADRTAB: 






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 7




   EE4B    0E                   .BYTE   1110B           ;DRIVE A
   EE4C    0D                   .BYTE   1101B           ;DRIVE B
   EE4D    0B                   .BYTE   1011B           ;DRIVE C
   EE4E    07                   .BYTE   0111B           ;DRIVE D
                        
                        ;********************************************************
                        ; THE SYSTEM CONFIGURATION OPTION BYTES FOLLOW
                        ;********************************************************
                        
   EE4F                 CFGOPT:
   EE4F    03                   ACTDSK: .BYTE   NODSK   ;NUMBER OF DISKS SUPPORTED
                                                                                ;NORMALLY 2 DRIVES
   EE50    00                   HLOPT:  .BYTE   HLDOPT  ;SINGLE OR DUAL HEAD LOAD
   EE51    04                   KBIT:   .BYTE   4               ;AUTO-RECAL COUNTER
                        
                        ;********************************************************
                        ; COLD BOOT ENTRY POINT. THE FIRST FOUR INSTRUCTIONS
                        ; SHOULD NOT BE CHANGED.
                        ;********************************************************
                        
   EE52                 CBOOT:
                        
   EE52    31 0080              LXI     SP,80H                  ;VALIDATE THE STACK POINTER
   EE55    2A EE37              LHLD    INITIO          ;SET INITIAL I/O BYTE, DISK
   EE58    22 0003              SHLD    IOBYTE
                        
   EE5B    CD F613              CALL    SYSNIT          ;ROUTINE IN HOST BUFFER SPACE
                                                                        ;IS DISCARDED AFTER THIS CALL
                            
   EE5E    CD EEE2              CALL    BCOMM           ;DO COMMON STUFF
   EE61    1844                 JMPR    GOCPM           ;PREPARE TO GO TO CCP
                        
                        ;********************************************************
                        ; WARM BOOT ENTRY POINT. IN ORDER TO WARM BOOT FROM
                        ; A FLOPPY DISK, CP/M MUST BE READ FROM TRACKS 0 AND 1.
                        ; THE PHYSICAL SECTORS ON THE SYSTEM TRACKS ARE ALWAYS
                        ; 512 BYTES LONG, BUT CP/M DOES NOT ALWAYS OCCUPY THE
                        ; ENTIRE SECTOR. THE SECTOR LAYOUT FOR BOTH 8" AND 5"
                        ; DISKS IS:
                        
                        ;       TRACK 0, SECTOR 1, BYTES 0 THRU 127 - COLD
                        ;          START LOADER
                        ;       TRACK 0, SECTOR 1, BYTES 128 THRU 511 - CP/M
                        ;       TRACK 0, SECTOR 2 THRU SECTOR 7 - CP/M
                        ;       TRACK 0, SECTOR 8, BYTES 0 THRU 383 - CP/M
                        ;       TRACK 0, SECTOR 8, BYTES 384 THRU 511 - DDB
                        ;       TRACK 1, SECTOR 1 THRU SECTOR 9 - CP/M,
                        ;          FOLLOWED BY THE CBIOS
                        
                        ; THE SYSTEM TRACKS ON 8" DISKS ARE RECORDED IN SINGLE
                        ; DENSITY, WHILE THE SYSTEM TRACKS ON 5" DISKS ARE
                        ; RECORDED IN DOUBLE DENSITY. ONLY SIDE 0 OF A 
                        ; DISK IS USED FOR THE SYSTEM.
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 8




   EE63                 WBOOT:
   EE63    F3                   DI
   EE64    31 0080              LXI     SP,80H          ;VALIDATE THE STACK POINTER
   EE67    CD F12F              CALL    CLOSE
   EE6A                 EEXIT:
   EE6A    CD EEE2              CALL    BCOMN           ;DO COMMON STUFF
                        
   E700                 ..JOG   ==      CCP+(30*128)    ;LAST GOOD ADDRESS
                                                        ;= 32 -(LOADER + DDB)
                        
   EE6D    AF                   XRA     A               ;READ FROM TRACK 0
   EE6E    01 0901              LXI     B,9<8+1         ;READ 9 SECTORS STARTING AT #1
   EE71    21 D780              LXI     H,CCP-128       ;START HERE TO SKIP LOADER
   EE74    CD EEC8              CALL    READM
                        
                        ;NOW COPY DOWN SECTOR #9
                        
   EE77    21 E780              LXI     H,CCP+(31*128)  ;LAST GOOD SECTOR STARTS HERE
   EE7A    11 E700              LXI     D,CCP+(30*128)  ;AND GOES OVER DDB HERE
   EE7D    01 0200              LXI     B,4*128         ;4 CPM RECORDS
   EE80    EDB0                 LDIR                    ;MOVE IT NOW
                        
   000A                 ..LEFT  ==      NSECTS-34
   0002                 ..PART  ==      ..LEFT@4
   0002                 ..FULL  ==      ..LEFT/4
   E900                 ..ADDR  ==      CCP+(128*(NSECTS-..LEFT))
   ED00                 ..LAST  ==      ..ADDR+(..FULL*512)
                        
   EE82    3E01                 MVI     A,1             ;READ FROM TRACK 1
   EE84    01 0201              LXI     B,..FULL <8+1   ;READ FULL SECTORS
   EE87    21 E900              LXI     H,CCP+(34*128)  ;STARTING AFTER 34 CP/M RECORDS
   EE8A    CD EEC8              CALL    READM
                        
                                .IFN    ..PART,[
                        
   EE8D    3E01                 MVI     A,1             ;READ FROM TRACK 1
   EE8F    01 0103              LXI     B,1<8+(1+..FULL);READ ONE LAST SECTOR
   EE92    21 F613              LXI     H,RDBUFF        ;INTO READ BUFFER FOR NOW
   EE95    CD EEC8              CALL    READM
                        
   EE98    01 0100              LXI     B,..PART*128
   EE9B    11 ED00              LXI     D,..LAST        ;SECTOR GOES HERE
   EE9E    21 F613              LXI     H,RDBUFF        ;SECTOR COMES FROM READ BUFFER
   EEA1    EDB0                 LDIR                    ;MOVE THE SECTOR
                        
                                ]
                        
                        ;********************************************************
                        ;THE FOLLOWING RESETS THE CCP BUFFER ON WARMBOOT
                        ;TO KILL AUTO-START ROUTINES
                        ;********************************************************
                        
   EEA3    AF                   XRA     A               ;CLEAR ACC.
   EEA4    32 D807              STA     CCP+7           ;STORE A CHAR. COUNTER LOCATION
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 9




                        ;********************************************************
                        ;       COMMON CODE BEFORE ENTERING CP/M.
                        ;********************************************************
                        
   EEA7                 GOCPM:
   EEA7    3EC3                 MVI     A,JMP           ;PATCH WARM START JUMP
   EEA9    32 0000              STA     0
   EEAC    21 EE03              LXI     H,WBOOTE
   EEAF    22 0001              SHLD    1
                                
   EEB2    32 0005              STA     5               ;PATCH JUMP TO BDOS
   EEB5    21 E006              LXI     H,BDOS
   EEB8    22 0006              SHLD    6
                        
   EEBB    21 0080              LXI     H,80H           ;SET DEFAULT DMA ADDR
   EEBE    22 FA16              SHLD    DMAADD
                        
   EEC1    3A 0004              LDA     CPMDSK          ;PASS CURRENT DISK
   EEC4    4F                   MOV     C,A             ;NUMBER TO THE CCP
   EEC5    C3 D800              JMP     CCP             ;GO TO THE CCP
                        
                        ;********************************************************
                        ; READ MULTIPLE SECTORS. USED BY THE FLOPPY DISK WARM
                        ; BOOT.
                        ;********************************************************
                        
   EEC8    32 FA1A      READM:  STA     PTRACK          ;SET TRACK
                        
   EECB    C5           LOOP:   PUSH    B               ;SAVE COUNT, SECTOR
   EECC    79                   MOV     A,C
   EECD    32 FA1C              STA     PSECT           ;SET SECTOR
   EED0    E5                   PUSH    H               ;SAVE DMA ADDRESS
   EED1    22 FA1E              SHLD    PDMA            ;SET DMA ADDRESS
   EED4    CD F1BE              CALL    PREAD           ;READ THE SECTOR
   EED7    DA F4C6              JC      FATER1          ;FATAL ERROR
   EEDA    E1                   POP     H
   EEDB    24                   INR     H               ;POINT TO NEXT DMA ADDRESS
   EEDC    24                   INR     H               ;INCREMENT BY 2 PAGES (512 BYTES)
   EEDD    C1                   POP     B
   EEDE    0C                   INR     C               ;POINT TO NEXT PHYSICAL SECTOR
   EEDF    10EA                 DJNZ    LOOP            ;REPEAT UNTIL DONE
   EEE1    C9                   RET
                        
                        ;********************************************************
                        ; BOOT COMMON ROUTINE. USED BY COLD BOOT AND WARM BOOT.
                        ;********************************************************
                        
   EEE2                 BCOMM:
                        
                        ; KEEP BOTH BCOMM & BCOMN FOR NOW
                        ; AT ONE TIME BCOMM HAD ADDITIONAL FUCTIONS, THEN
                        ; IT FELL THROUGH TO BCOMN. MAY DO THAT AGAIN
                        
   EEE2                 BCOMN:
   EEE2    CD EEF0              CALL    DSKRST          ;RESET DISK SYSTEM






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 10




   EEE5    0E00                 MVI     C,0             ;SELECT DISK 0, GET DDB
   EEE7    CD EF11              CALL    SELDSK
   EEEA    7C                   MOV     A,H             ;TEST FOR SUCCESSFUL SELECT
   EEEB    B5                   ORA     L
   EEEC    C0                   RNZ                     ;SUCCESSFUL
   EEED    C3 F4EE              JMP     QUIT1           ;FATAL ERROR
                        
                        ;********************************************************
                        ; RESET DISK SYSTEM. INVALIDATE CERTAIN FLOPPY DISK
                        ; TABLES AND BYTES TO ALLOW CHANGING DISKS. CALLED BY
                        ; COLD BOOT, WARM BOOT, AND SOME EXTERNAL ROUTINES.
                        ;********************************************************
                        
   EEF0    AF           DSKRST: XRA     A
   EEF1    21 FA40              LXI     H,UNACNT        ;INVALIDATE UNALLOCATED COUNT
   EEF4    0616                 MVI     B,UNALEN
   EEF6    77           LOP:    MOV     M,A
   EEF7    23                   INX     H
   EEF8    10FC                 DJNZ    LOP
   EEFA    21 EE4F              LXI     H,ACTDSK        ;POINT TO # DISKS       
   EEFD    46                   MOV     B,M             ;GET NUMBER INTO B
   EEFE    11 0078              LXI     D,APBDIS        ;GET DISTANCE BETWEEN FD APBS
                        
   EF01    21 FA74              LXI     H,APB0+(FLAG-ATABLE) ;POINT TO FLAG
                        
   EF04    77           LOOP1:  MOV     M,A             ;INVALIDATE ALL FLOPPY DISK
   EF05    19                   DAD     D               ;APBS BY CLEARING FLAGS
   EF06    10FC                 DJNZ    LOOP1
                        
   EF08    3D                   DCR     A
   EF09    32 FA27              STA     OLDFLO          ;FORCE HEAD UNLOAD/LOAD
   EF0C    32 FA26              STA     ADISK           ;INVALIDATE ATABLE
   EF0F    C9                   RET
                        
                        ;********************************************************
                        ;            LOAD HEAD ON CURRENT DISK
                        ;********************************************************
                        
   EF10    C9           HEADLD: RET
                        
                        
                        ;********************************************************
                        ; LOGICALLY SELECT THE DISK DRIVE FOR FUTURE READS AND
                        ; WRITES TO THAT PASSED IN REGISTER C. IF THE DDB FOR
                        ; THE DRIVE HAS NOT YET BEEN READ, THEN READ IT IN FROM
                        ; THE DISK. OTHERWISE, DON'T PERFORM A PHYSICAL SELECT
                        ; UNTIL A READ OR WRITE SECTOR CALL IS MADE. NOTE THAT
                        ; THE DPH, APB, DPB, AND TRANSLATE TABLE FOR THE DRIVE
                        ; ARE ALL VALID AT THE COMPLETION OF THIS CALL.
                        ;********************************************************
                        
   EF11                 SELDSK:
   EF11    79                   MOV     A,C
   EF12    21 EE4F              LXI     H,ACTDSK        ;POINT TO ACTUAL DISK #
   EF15    BE                   CMP     M               ;IN RANGE(y/n)






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 11




   EF16    D2 EFFA              JNC     BAD             ;NO
   EF19    32 FA51              STA     SEKDSK          ;D.R. HOST DISK
   EF1C    32 FA19              STA     PDISK
                        
   EF1F    D5                   PUSH    D               ;SAVE DISK RESET FLAG
                        
   EF20    69                   MOV     L,C             ;GET APB, DPH ADDRESSES
   EF21    CD F4B4              CALL    GETDPH          ;GET RAM LOCATION FOR DPH
   EF24    ED53 FA2C            SDED    APBADR          ;SAVE APB ADDRESS
   EF28    22 FA2A              SHLD    DPHADR          ;SAVE DPH ADDRESS
   EF2B    CD F47E              CALL    GETAPB          ;GET ATABLE FOR THIS DISK
                        
   EF2E    D1                   POP     D
   EF2F    CB43                 BIT     0,E
   EF31    2807                 JRZ     FRST            ;MAY HAVE BEEN RESET
                        
   EF33    3A FA60              LDA     FLAG
   EF36    B7                   ORA     A               ;DDB PROCESSED(y/n)
   EF37    C2 EFF0              JNZ     OK              ;YES
                        
   EF3A                 FRST:
   EF3A    CD F12F              CALL    CLOSE           ;ELSE CLEAR ANY PENDING WRITE
                                                        ;AND READ DDB FROM DISK
                        
   EF3D    AF                   XRA     A               ;WE WILL READ FROM TRACK 0
   EF3E    32 FA1A              STA     PTRACK
   EF41    3E08                 MVI     A,8             ;AND SECTOR 8
   EF43    32 FA1C              STA     PSECT
   EF46    21 F613              LXI     H,RDBUFF        ;INTO THE READ BUFFER
   EF49    22 FA1E              SHLD    PDMA
                        
   EF4C    3A FA19              LDA     PDISK           ;GET DISK NUMBER
   EF4F    21 EE33              LXI     H,SPDTAB        ;POINT TO STEP SPEED TABLE
   EF52    5F                   MOV     E,A
   EF53    1600                 MVI     D,0
   EF55    19                   DAD     D
   EF56    7E                   MOV     A,M             ;GET SPEED BYTE FOR THIS DISK
   EF57    47                   MOV     B,A             ;SAVE IN B
   EF58    E603                 ANI     3               ;ISOLATE SPEED BITS
   EF5A    67                   MOV     H,A             ;PUT IN H FOR DOUBLE STORE NEXT
   EF5B    2EFF                 MVI     L,0FFH          ;CURRENT TRACK - UNKNOWN
   EF5D    22 FA5E              SHLD    TRACK           ;UPDATE ATABLE TRACK AND SPEED
                        
                        
                        ;********************************************************
                        ;          ASSUME 8" S.S.S.D. DISK NEXT
                        ;********************************************************
                        
   EF60    3E01                 MVI     A,00000001B     ;INITIAL FLAG FOR 8" DRIVE
   EF62    21 F5BB              LXI     H,STDDDB        ;STANDARD 8" DDB ADDRESS
                        
                        
                        ;TEST IF 5" OR 8" DISK IN SPEED TABLE
                        
   EF65    CB78                 BIT     7,B             ;8" DISK(y/n)






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 12




   EF67    2805                 JRZ     EIG             ;IF YES GO DO 8"
   EF69    3E15                 MVI     A,00010101B     ;INITIAL 5" FLAG
   EF6B    21 F5EB              LXI     H,ALTDDB
                        
   EF6E    32 FA60      EIG:    STA     FLAG
   EF71    22 FA31              SHLD    SAVADR
                        
   EF74    21 0001              LXI     H,1             ;AT LEAST 1 SYSTEM TRACK
   EF77    22 FA61              SHLD    OFF
   EF7A    21 2002              LXI     H,2+32 < 8      ;512 BYTE SECTOR & 32 LOGICAL SECTORS
   EF7D    22 FA63              SHLD    SSLEN
                        
   EF80    CD F32B              CALL    GETD3S          ;GET Z3S CTRL BYTES INTO ATABLE
   EF83    CD F1BE              CALL    PREAD           ;GET THE DDB
   EF86    301F                 JRNC    YUP             ;WE GOT SOMETHING
                        
                        
                        ;********************************************************
                        ; IF ERROR IS R.N.F. THEN SHOW DISK READ FAILED
                        ; ELSE TEST IT FOR GOOD DISK TYPE
                        ;********************************************************
                        
   EF88    CB67                 BIT     WBRNF,A         ;RNF ERROR(y/n)
   EF8A    286B                 JRZ     ERR             ;NOPE, GIVE UP
                        
                        
                        ;********************************************************
                        ;    SET UP FOR STANDARD 8" S.S.S.D.  DISK HERE
                        ;********************************************************
                        
   EF8C                 NOV:
   EF8C    CD F4F8              CALL    MSG     ;WARN THE USER AND
   EF8F    0D0A                 .BYTE   CR,LF   ;   HOPE FOR THE BEST
   EF91    535444204469         .ASCIS  \STD Disk?\
   EF9A    2A FA31              LHLD    SAVADR  ;POINT TO STANDARD DDB
   EF9D    01 0076              LXI     B,128-10
   EFA0    11 F79D              LXI     D,RDBUFF+384+10
   EFA3    EDB0                 LDIR                    ;FIX RD BUFFER TO BE A STD DDB
   EFA5    1819                 JMPR    COMP
                        
   EFA7    2A F793      YUP:    LHLD    RDBUFF+384      ;GET VALIDITY BYTES FROM DDB
   EFAA    11 FDDD              LXI     D,0DDH+0FDH < 8 ;EXPECTED VALUE OF BYTES
   EFAD    B7                   ORA     A
   EFAE    ED52                 DSBC    D               ;DDB VALID(y/n)
   EFB0    20DA                 JRNZ    NOV             ;NOPE
   EFB2    2A F795              LHLD    RDBUFF+384+2    ;MORE VALIDITY BYTES
   EFB5    ED52                 DSBC    D               ;DDB VALID(y/n)
   EFB7    20D3                 JRNZ    NOV             ;NOPE
                        
   EFB9    3A F797              LDA     RDBUFF+384+4    ;TEST FOR COMPATIBILITY
   EFBC    E6FE                 ANI     11111110B
   EFBE    203A                 JRNZ    BAD             ;GIVE UP ON THIS DISK
                        
   EFC0    CD F475      COMP:   CALL    PUTAPB          ;UPDATE TRACK, SPEED IN APB
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 13




   EFC3    2A FA2C              LHLD    APBADR          ;GET APB ADDR FOR THIS DISK
   EFC6    11 000A              LXI     D,FLAG-ATABLE   ;POINT TO WHERE FLAG GOES
   EFC9    19                   DAD     D
   EFCA    EB                   XCHG                    ;MAKE THIS THE DESTINATION ADDR
   EFCB    21 F79D              LXI     H,RDBUFF+384+10 ;FROM FLAG IN RD BUFFER
                        
   EFCE    01 006E              LXI     B,ALEN-(FLAG-ATABLE)+DPBLEN+TRALEN
                        
   EFD1    EDB0                 LDIR                    ;MOVE DDB, DPB, TRANS INTO APB
                        
                        
                        ;********************************************************
                        ;*           NOW SET UP ALLOCATION SIZE
                        ;*           FOR THE DISK JUST SELECTED
                        ;* GET THE ALLOCATION SIZE FROM THE DSM VALUE IN THE DPB
                        ;********************************************************
                        
   EFD3                 GALV:
   EFD3    3A F7A6              LDA     RDBUFF+384+19   ;GET DSM
   EFD6    4F                   MOV     C,A             ;SAVE VALUE
   EFD7    3A FA51              LDA     SEKDSK
   EFDA    5F                   MOV     E,A
   EFDB    1600                 MVI     D,0
   EFDD    21 FA3B              LXI     H,ALOCSZ
   EFE0    19                   DAD     D
   EFE1    71                   MOV     M,C             ;SAVE FOR THIS DISK
                        
   EFE2    3EFF                 MVI     A,0FFH          ;UPDATE ATABLE FROM APB
   EFE4    32 FA26              STA     ADISK
   EFE7    CD F47E              CALL    GETAPB
   EFEA    CD F32B              CALL    GETD3S          ;PUT VALID Z3S BYTES IN ATABLE
   EFED    CD F475              CALL    PUTAPB          ;UPDATE APB FROM FULLY VALID ATABLE
                        
   EFF0    CD F369      OK:     CALL    FHOME
   EFF3    2A FA2A              LHLD    DPHADR          ;RETURN DPH ADDRESS
   EFF6    C9                   RET
                        
   EFF7                 ERR:
   EFF7    CD F3D7              CALL    EPRINT          ;PRINT ERROR IN READING DDB
                        
   EFFA    AF           BAD:    XRA     A               ;DESELECT INVALID DRIVE
   EFFB    32 0004              STA     CPMDSK
   EFFE    67                   MOV     H,A             ;ERROR RETURN CODE
   EFFF    6F                   MOV     L,A
   F000    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET TRACK FOR FUTURE READS OR WRITES TO TRACK 0. ALSO
                        ; PARTIALLY RESET THE DISK SYSTEM TO ALLOW FOR CHANGED
                        ; DISKS.
                        ;********************************************************
                        
   F001                 HOME:
   F001    CD F12F              CALL    CLOSE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 14




   F004    3A FA4B              LDA     HSTWRT          ;TEST FOR PENDING WRITE
   F007    B7                   ORA     A
   F008    2003                 JRNZ    HOMED
   F00A    32 FA4A              STA     HSTACT          ;CLEAR HOST ACTIVE FLAG
   F00D                 HOMED:
   F00D    01 0000              LXI     B,0             ;DROP THRU TO SET TRACK TO 0
                        
                        ;********************************************************
                        ; SET TRACK FOR FUTURE READS OR WRITES TO THAT PASSED
                        ; IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F010    ED43 FA52    SETTRK: SBCD    SEKTRK
   F014    C9                   RET
                        
                        ;********************************************************
                        ; SET SECTOR FOR FUTURE READS OR WRITES TO THAT PASSED
                        ; IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F015    ED43 FA14    SETSEC: SBCD    SEKSEC
   F019    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET DMA ADDRESS FOR FUTURE READS OR WRITES TO THAT
                        ; PASSED IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F01A    ED43 FA16    SETDMA: SBCD    DMAADD
   F01E    C9                   RET
                        
                        
                        ;********************************************************
                        ; SECTOR TRANSLATION ROUTINE. THE ROUTINE ONLY
                        ; TRANSLATES SECTORS ON THE USER TRACKS, SINCE CP/M
                        ; ACCESSES THE SYSTEM TRACKS WITHOUT CALLING FOR
                        ; TRANSLATION.
                        ;********************************************************
                        
   F01F                 SECTRA:
                        
   F01F    EB           YUP1:   XCHG                    ;HL GETS TRANS TABLE ADDRESS
                                                        ;CP/M PASSED IT IN DE
   F020    79                   MOV     A,C             ;GET SECTOR #
   F021    ED43 FA46            SBCD    NEWSEC          ;SAVE FOR UNALLOC TEST
   F025    09                   DAD     B               ;INDEX INTO TABLE, LOGICAL SECTOR
                                                        ;IS PASSED IN BC
   F026    6E                   MOV     L,M             ;GET THE TRANSLATED BYTE
   F027    2600                 MVI     H,0
   F029    C9                   RET
                        
                        ;********************************************************
                        ; CP/M ENTRY POINT FOR SECTOR READS. BUFFERED SECTOR
                        ; READS ARE DONE HERE. BUFFERED READ OPERATIONS REQUIRE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 15




                        ; READING THE SECTOR FROM DISK INTO THE READ BUFFER,
                        ; AND THEN PROVIDING 128 BYTE LOGICAL SECTORS TO THE
                        ; CALLING PROGRAM ON REQUEST.
                        ;********************************************************
                        
   F02A                 READ:
                        
   F02A    AF                   XRA     A
   F02B    32 FA40              STA     UNACNT          ;UNACNT=0, WE WON'T WRITE WITHOUT
                                                        ;PRE-READS FOR NOW
   F02E    3C                   INR     A       
   F02F    32 FA49              STA     READOP          ;SHOW WE ARE DOING A READ OPERATION
   F032    32 FA48              STA     RSFLAG          ;MUST READ DATA
   F035    3E02                 MVI     A,2
   F037    32 FA2E              STA     WRTYPE          ;TREAT AS UNALLOCATED
                        
   F03A    C3 F0A6              JMP     RWOPER          ;DO THE READ
                        
                        
                        ;********************************************************
                        ; CP/M ENTRY POINT FOR SECTOR WRITES. BUFFERED SECTOR
                        ; WRITES ARE DONE HERE. BUFFERED WRITE OPERATIONS
                        ; REQUIRE ACCEPTING 128 BYTE LOGICAL SECTORS FROM THE
                        ; CALLING PROGRAM, ACCUMULATING THEM IN A WRITE BUFFER,
                        ; THEN WRITING THE BUFFER WHEN IT BECOMES FULL. THE
                        ; BUFFER IS IMMEDIATELY WRITTEN OUT IF THE LOGICAL
                        ; SECTOR IS PART OF THE DISK DIRECTORY.
                        ;********************************************************
                        
                        
   F03D                 WRITE:
                        
   F03D    AF                   XRA     A
   F03E    32 FA49              STA     READOP          ;SET TO WRITE
                        
   F041    79                   MOV     A,C
   F042    32 FA2E              STA     WRTYPE          ;SAVE TYPE OF WRITE
                        
   F045    FE02                 CPI     2               ;WRITE UNALLOCATED(y/n)
   F047    2018                 JRNZ    CKUN            ;GO SEE IF O.K. ANYWAY
                        
   F049    3A FA3F              LDA     ALOCA           ;GET MAXIMUM UNALLOCATED RECORD COUNT
   F04C    32 FA40              STA     UNACNT          ;AND PUT HERE FOR WRITING
   F04F    3A FA51              LDA     SEKDSK          ;GET CURRENT DISK
   F052    32 FA41              STA     UNADSK
   F055    2A FA52              LHLD    SEKTRK          ;GET CURRENT TRACK
   F058    22 FA42              SHLD    UNATRK
   F05B    3A FA46              LDA     NEWSEC          ;GET CURRENT CP/M SECTOR
   F05E    32 FA44              STA     UNASEC
                        
   F061                 CKUN:                           ;SEE IF UNALLOCATED RECORDS REMAIN
                        
   F061    3A FA40              LDA     UNACNT          ;GET UNALLOCATED RECORDS LEFT
   F064    B7                   ORA     A
   F065    CA F09E              JZ      ALOC            ;NO UNALLOCATED LEFT






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 16




                        
                        
                        ;WE STILL HAVE UNALLOCATED RECORDS LEFT
                        
   F068    3D                   DCR     A               ;UPDATE UNALLOCATED RECORD COUNT
   F069    32 FA40              STA     UNACNT
                        
                        
                        ;NOW CHECK FOR CORRECT DISK, TRACK & SECTOR
                        
   F06C    3A FA51              LDA     SEKDSK          ;COMPARE DISKS FIRST
   F06F    21 FA41              LXI     H,UNADSK
   F072    BE                   CMP     M
   F073    C2 F09E              JNZ     ALOC
                        
                        
                        ;DISKS ARE SAME, NOW CHECK FOR TRACK
                        
   F076    21 FA42              LXI     H,UNATRK
   F079    3A FA52              LDA     SEKTRK
   F07C    BE                   CMP     M
   F07D    201F                 JRNZ    ALOC
                        
                        
                        ;TRACKS ARE SAME, NOW TEST FOR SECTOR
                        
   F07F    3A FA46              LDA     NEWSEC          ;COMPARE SECTORS NOW
   F082    21 FA44              LXI     H,UNASEC
   F085    BE                   CMP     M
   F086    2016                 JRNZ    ALOC
                        
                        
                        ;SECTORS ARE SAME, NOW UPDATE PARAMETERS
                        
   F088    34                   INR     M               ;MAKE NEXT EXPECTED SECTOR
   F089    7E                   MOV     A,M             ;GET NEXT EXPECTED SECTOR
   F08A    21 FA66              LXI     H,ULRPS         ;POINT TO SECTORS/USER TRACK
   F08D    BE                   CMP     M               ;TEST FOR END OF TRACK
   F08E    3808                 JRC     NOVR            ;NO OVERFLOW
                        
                        
                        ;HERE WE ALLOW FOR NEXT UNALLOCATED RECORD ON A NEW TRACK
                        
   F090    AF                   XRA     A               ;SET SECTOR AS FIRST
   F091    32 FA44              STA     UNASEC
   F094    21 FA42              LXI     H,UNATRK        ;POINT TO UNALLOCATED TRACK #
   F097    34                   INR     M               ;MAKE IT NEXT ONE
                        
                        
                        ;WRITE PARAMETERS MATCH, DON'T PRE-READ
                        
   F098                 NOVR:
   F098    AF                   XRA     A
   F099    32 FA48              STA     RSFLAG          ;SHOW WE DON'T READ A SECTOR
   F09C    1808                 JMPR    RWOPER






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 17




                        
                        
                        ;NOT AN UNALLOCATED RECORD, DO A PRE-READ
                        
   F09E                 ALOC:
   F09E    AF                   XRA     A
   F09F    32 FA40              STA     UNACNT          ;SET UNALLOCATED = 0
   F0A2    3C                   INR     A
   F0A3    32 FA48              STA     RSFLAG          ;RSFLAG = 1, WE MUST READ THE SECTOR
                        
                        
                        ;DO READ OR WRITE OPERATION NEXT
                        
   F0A6                 RWOPER:
                        
   F0A6    CD F16F              CALL    GETTRK          ;COMPUTE PHYSICAL TRACK & SECTOR
                        
   F0A9    21 FA4A              LXI     H,HSTACT        ;GET HOST ACTIVE FLAG
   F0AC    7E                   MOV     A,M     
   F0AD    3601                 MVI     M,1             ;SET IT ACTIVE FOR SURE
   F0AF    B7                   ORA     A               ;SEE IF IT WAS ACTIVE
   F0B0    CA F0D5              JZ      FILHST          ;IF NOT FILL IT
                                
                        
                        ;********************************************************
                        ;* CHECK TO SEE IF SECTOR IN HOST BUFFER IS CORRECT ONE
                        ;* IF NOT WRITE TO HOST BUFFER IF NEEDED & PREPARE FOR 
                        ;* CORRECT HOST BUFFER
                        ;********************************************************
                        
                        ;SEE IF DISKS ARE SAME
                        
   F0B3    3A FA51              LDA     SEKDSK          ;COMPARE DISKS FIRST
   F0B6    21 FA4C              LXI     H,HSTDSK
   F0B9    BE                   CMP     M
   F0BA    2012                 JRNZ    NOMAT
                        
                        
                        ;SEE IF TRACKS ARE SAME
                        
   F0BC    21 FA4D              LXI     H,HSTTRK
   F0BF    3A FA20              LDA     CTRACK
   F0C2    BE                   CMP     M
   F0C3    2009                 JRNZ    NOMAT
                        
                        
                        ;SEE IF SECTORS ARE SAME
                        
   F0C5    3A FA54              LDA     SEKHST          ;COMPARE SECTORS NOW
   F0C8    21 FA4F              LXI     H,HSTSEC
   F0CB    BE                   CMP     M
   F0CC    2824                 JRZ     MATCH
                        
                        
                        ;HOST PARAMETERS DO NOT MATCH CURRENT R/W PARAMETERS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 18




                        ;SEE IF WE HAVE TO FLUSH THE HOST BUFFER
                        
   F0CE                 NOMAT:
   F0CE    3A FA4B              LDA     HSTWRT          ;SEE IF HOST BUFFER WAS WRITTEN
   F0D1    B7                   ORA     A
   F0D2    C4 F134              CNZ     FLUSH           ;WRITE OUT THE BUFFER IF NOT
                        
                        
                        ;MAY HAVE TO FILL HOST BUFFER
                        ;SEET UP NEW PARAMETERS
                        
   F0D5                 FILHST:
                        
   F0D5    3A FA51              LDA     SEKDSK
   F0D8    32 FA4C              STA     HSTDSK
   F0DB    2A FA20              LHLD    CTRACK
   F0DE    22 FA4D              SHLD    HSTTRK
   F0E1    3A FA54              LDA     SEKHST          ;THE PHYSICAL SECTOR
   F0E4    32 FA4F              STA     HSTSEC
                        
   F0E7    3A FA48              LDA     RSFLAG          ;SEE IF WE NEED TO READ
   F0EA    B7                   ORA     A
   F0EB    C4 F153              CNZ     RDHST           ;IF SO READ IT
   F0EE    AF                   XRA     A
   F0EF    32 FA4B              STA     HSTWRT          ;SHOW NO PENDING WRITE
                        
                        ;WE HAVE CORRECT SECTOR SO COPY DATA TO/FROM DMA BUFFER
                        
   F0F2                 MATCH:
                        
   F0F2    3A FA18              LDA     CREC            ;GET RECORD #
   F0F5    47                   MOV     B,A             ;COMPUTE RECORD IN HOST BUFFER
   F0F6    0E00                 MVI     C,0
   F0F8    CB38                 SRLR    B
   F0FA    CB19                 RARR    C
   F0FC    21 F613              LXI     H,HSTBUF
   F0FF    09                   DAD     B               ;HL IS NOW HOST BUFFER
   F100    ED5B FA16            LDED    DMAADD          ;DE HAS DMA ADDRESS
   F104    01 0080              LXI     B,128           ;BYTES TO MOVE
   F107    3A FA49              LDA     READOP
   F10A    B7                   ORA     A               ;SEE IF WE ARE READING OR WRITING
   F10B    2009                 JRNZ    RWMOVE          ;SKIP ON READ
   F10D    3E01                 MVI     A,1             ;IF A WRITE THEN MARK & COPY TO BUFFER
   F10F    32 FA4B              STA     HSTWRT          ;HSTWRT = 1
   F112    EB                   XCHG                    ;DE IS NOW DESTINATION,= HOST ON WRITE
   F113    2A FA16              LHLD    DMAADD          ;HL IS SOURCE, = USER AREA TO GET       
                        
   F116                 RWMOVE:
                                
   F116    EDB0                 LDIR                    ;MOVE DATA
                        
                        
                        ;NOW CHECK WRITE TYPE FOR DIRECTORY UPDATE
                        
   F118    3A FA2E              LDA     WRTYPE          ;GET TYPE OF WRITE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 19




   F11B    3D                   DCR     A               ;IS IT TO THE DIRECTORY
   F11C    2802                 JRZ     WRITIT          ;IF SO WRITE IT OUT
                        
   F11E    1806                 JMPR    GOODOP          ;IF NOT SHOW A SUCCESSFUL R/W OPERATION 
                        
                        
                        ;CLEAR HOST BUFFER FOR DIRECTORY WRITE
                        
   F120                 WRITIT:
                        
   F120    32 FA4B              STA     HSTWRT
   F123    CD F134              CALL    WRTHST
                                
   F126                 GOODOP:
   F126    3A FA33              LDA     MRML            ;GET RETRY BYTE
   F129    B7                   ORA     A               ;TEST FOR ZERO
   F12A    3E01                 MVI     A,1             ;JUST IN CASE OF FAILURE
   F12C    C8                   RZ                      ;IF FAILED SHOW IT TO BDOS
   F12D    AF                   XRA     A               ;ELSE SET AS O.K.
   F12E    C9                   RET                     ;SHOW BDOS SUCCESSFUL READ/WRITE
                        
   F12F                 CLOSE:
   F12F    3A FA4B              LDA     HSTWRT          ;SEE IF WE HAVE A PENDING WRITE
   F132    B7                   ORA     A
   F133    C8                   RZ                      ;IF NOT RETURN NOW
                        
                        ;WRITE FROM THE HOST BUFFER
                        
   F134                 FLUSH:
   F134                 WRTHST:
   F134    3A FA4C              LDA     HSTDSK          ;GET ACTUAL WRITE DISK
   F137    32 FA19              STA     PDISK           ;MAKE IT THE PHYSICAL DISK
   F13A    CD F47E              CALL    GETAPB          ;GET APB FOR THE DISK
   F13D    3A FA4F              LDA     HSTSEC
   F140    32 FA1C              STA     PSECT
   F143    3A FA4D              LDA     HSTTRK
   F146    32 FA1A              STA     PTRACK
   F149    21 F613              LXI     H,WRBUFF        ;POINT TO WRITE BUFFER
   F14C    22 FA1E              SHLD    PDMA            ;MAKE IT THE PHYSICAL DMA ADDRESS
                                
   F14F    CD F1BA              CALL    PWRITE          ;WRITE BACK THE COMBINED SECTOR
   F152    C9                   RET
                        
   F153                 RDHST:
   F153    3A FA4C              LDA     HSTDSK
   F156    32 FA19              STA     PDISK
   F159    21 F613              LXI     H,RDBUFF        ;POINT TO READ BUFFER
   F15C    22 FA1E              SHLD    PDMA            ;MAKE IT PHYSICAL DMA ADDRESS
   F15F    3A FA20              LDA     CTRACK
   F162    32 FA1A              STA     PTRACK
   F165    3A FA22              LDA     CSECT
   F168    32 FA1C              STA     PSECT
                        
   F16B    CD F1BE              CALL    PREAD           ;READ SECTOR INTO READ BUFFER
   F16E    C9                   RET






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 20




                        
                        
                        ;GET ACTUAL TRACK TO SEEK
                        
   F16F                 GETTRK:
   F16F    3A FA52              LDA     SEKTRK          ;GET CP/M TRACK NUMBER
   F172    21 FA61              LXI     H,OFF           ;GET NUMBER OF SYSTEM TRACKS
   F175    5E                   MOV     E,M
   F176    0E00                 MVI     C,0             ;ASSUME SINGLE SIDED DISK
   F178    21 FA63              LXI     H,SSLEN         ;POINT TO SYSTEM SECTOR LENGTH
   F17B    BB                   CMP     E
   F17C    380F                 JRC     SYST            ;IT WAS A SYSTEM TRACK
   F17E    21 FA60              LXI     H,FLAG          ;POINT TO FLAG BYTE
   F181    CB4E                 BIT     1,M             ;TEST SIDES BIT
   F183    2805                 JRZ     SING            ;SINGLE SIDED DISK
   F185    83                   ADD     E               ;ADD IN OFFSET
   F186    CB3F                 SRLR    A               ;COMPUTE PHYSICAL TRACK NUMBER
   F188    CB19                 RARR    C               ;GET SIDE NUMBER BIT
   F18A    21 FA65      SING:   LXI     H,USLEN
   F18D                 SYST:
   F18D    32 FA20              STA     CTRACK          ;SAVE ACTUAL TRACK NUMBER
                                        
                        
                        ;GET ACTUAL SECTOR TO READ/WRITE
                        
   F190                 PYSEC:
   F190    7E                   MOV     A,M             ;GET LENGTH BYTE
   F191    47                   MOV     B,A
   F192    FE03                 CPI     3
   F194    2004                 JRNZ    LRG
   F196    2607                 MVI     H,7
   F198    1806                 JMPR    GSEC
   F19A    FE02         LRG:    CPI     2               ;512 BYTE SECTOR(y/n)
   F19C    2001                 JRNZ    NO              ;NOPE, ACC HAS RECORD MASK
   F19E    3C                   INR     A               ;FIND MASK FOR 512 BYTE SECTOR
   F19F    67           NO:     MOV     H,A             ;SAVE RECORD MASK
                        
   F1A0    3A FA14      GSEC:   LDA     SEKSEC          ;GET CP/M SECTOR NUMBER
   F1A3    3D                   DCR     A               ;ADJUST DOWN TO START AT ZERO
   F1A4    6F                   MOV     L,A             ;SAVE FOR LATER
   F1A5    04                   INR     B               ;ADJUST FOR EASY LOOP
   F1A6    1802                 JMPR    JOIN
   F1A8    CB3F         LOOP2:  SRLR    A               ;PLACE SECTOR NUMBER IN LSB'S
   F1AA    10FC         JOIN:   DJNZ    LOOP2           ;REPEAT UNTIL ALIGNED IN LSB'S
   F1AC    3C                   INR     A               ;ADJUST TO MAKE PHYSICAL SECTOR
   F1AD    B1                   ORA     C               ;GET SIDE BIT   
   F1AE    32 FA54              STA     SEKHST          ;HOST SECTOR
   F1B1    32 FA22              STA     CSECT           ;SAVE COMBINED SECTOR
   F1B4    7D                   MOV     A,L             ;GET CP/M SECTOR NUMBER
   F1B5    A4                   ANA     H               ;MASK ALL BUT RECORD NUMBER
   F1B6    32 FA18              STA     CREC            ;SAVE RECORD NUMBER
   F1B9    C9                   RET
                        
                        
                        ;********************************************************






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 21




                        ; FLOPPY DISK PHYSICAL READ AND WRITE ROUTINE. ALL
                        ; FLOPPY DISK I/O IS PERFORMED BY CALLS TO THIS
                        ; ROUTINE. ON ENTRY PDISK, PTRACK, PSECT, AND PDMA
                        ; MUST BE VALID.
                        ;********************************************************
                        
   F1BA    3EA0         PWRITE: MVI     A,WWRITE        ;SET WRITE COMMAND
   F1BC    1802                 JMPR    PCOM            ;JOIN COMMON CODE
                        
   F1BE    3E80         PREAD:  MVI     A,WREAD         ;SET READ COMMAND
                        
   F1C0    32 FA28      PCOM:   STA     PCMD            ;REMEMBER WHETHER READ OR WRITE
   F1C3    CD F47E              CALL    GETAPB          ;MAKE SURE ATABLE IS RIGHT ONE
                        
                        
                        ;********************************************************       
                        ;       IF LAST I/O WAS ON DIFFERENT DISK, TELL THE
                        ;       179X TO UNLOAD ITS HEAD. THE HEAD LOAD ONE-SHOT
                        ;       WILL THEN BE RETRIGERED ON THE NEXT COMMAND.
                        ;********************************************************
                        
   F1C6    21 FA27              LXI     H,OLDFLO        ;POINT TO OLD FLOPPY NUMBER
   F1C9    3A FA19              LDA     PDISK           ;GET NEW NUMBER
   F1CC    BE                   CMP     M               ;SAME DISK(y/n)
   F1CD    2807                 JRZ     SADS            ;YES
                        
   F1CF    77                   MOV     M,A             ;NO, UPDATE OLD NUMBER TO NEW
   F1D0    CD F35E              CALL    TRIMWT          ;WAIT FOR TRIM ERASE TO END
   F1D3    CD F2F9              CALL    SETD3S          ;SET Z3S CONTROL BYTE
                        
                        ; FOLLOWING IS AN OBSOLETE OPERATION, NO LONGER USED,
                        ; BUT THE ORIGINAL CODE IS SHOWN FOR INTEREST.
                        ; HEAD UNLOADING WAS USED FROM TIME TO TIME TO
                        ; REDUCE DISK WEAR, HOWEVER IT WOULD SLOW DOWN
                        ; ACCESS TIMES, AND IMPROVED DISK HEAD DESIGN
                        ; AND MEDIA DURABILITY MADE IT REDUNDANT.
                        
                        ;       LDA     HLOPT           ;SEE IF DUAL HEAD LOAD
                        ;       ORA     A
                        ;       JRNZ    SADS            ;DON'T UNLOAD HEAD
                        ;       CALL    FUNLD           ;UNLOAD HEAD
                        ;       CALL    FDONE           ;INSURE FDC IS DONE
                        
                        
                        ;********************************************************
                        ;       INITIALIZE RETRY LIMITS. INSURE Z3S BYTE IS
                        ;       SET. SEEK TO CORRECT TRACK.
                        ;********************************************************
                        
   F1D6                 SADS:
   F1D6    3A EE39              LDA     HOMER           ;NUMBER OF HOME OPERATIONS
   F1D9    32 FA33              STA     MRML
   F1DC    32 EE51              STA     KBIT
   F1DF                 MAC:
   F1DF    3A EE3A              LDA     RETRYIT         ;RETRIES BETWEEN HOME OPERATIONS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 22




   F1E2    32 FA25              STA     RMACRO
                        
   F1E5    CD F2F9              CALL    SETD3S          ;SET Z3S CONTROL BYTE
   F1E8    21 FA5E              LXI     H,TRACK         ;GET OLD TRACK NUMBER
   F1EB    7E                   MOV     A,M
   F1EC    D355                 OUT     WTRACK          ;UPDATE 179X TRACK REG
   F1EE    3A FA1A              LDA     PTRACK          ;GET DESIRED TRACK NUMBER
   F1F1    BE                   CMP     M               ;SAME AS BEFORE(y/n)
   F1F2    2818                 JRZ     SATR            ;YES
                        
   F1F4    77                   MOV     M,A             ;UPDATE TRACK NUMBER
   F1F5    CD F35E              CALL    TRIMWT          ;WAIT FOR TRIM ERASE TO END
   F1F8    3A FA1A              LDA     PTRACK          ;GET DESIRED TRACK
                        
   F1FB    CD F376              CALL    FSEEK           ;NORMAL SEEK TO DESIRED TRACK
   F1FE    DA F4D0              JC      FATER2
                        
   F201    CD F475      ENDS:   CALL    PUTAPB          ;UPDATE APB FROM ATABLE
   F204    3A FA28              LDA     PCMD            ;GET READ/WRITE COMMAND
   F207    CBD7                 SET     WBDEL,A         ;INSURE HEAD IS SETTLED
   F209                 NOMIL:
   F209    32 FA28              STA     PCMD            ;BY SETTING DELAY BIT IN CMD
                        
                        
                        ;********************************************************
                        ;       SET UP DMA ADDRESS, SECTOR REGISTER. ISSUE
                        ;       THE READ OR WRITE COMMAND. SET HARDWARE WAIT.
                        ;********************************************************
                        
   F20C                 SATR:
   F20C                 MIC:
   F20C    3A FA1C              LDA     PSECT           ;GET DESIRED SECTOR NUMBER
   F20F    47                   MOV     B,A             ;SAVE SIDE BIT
   F210    CB7F                 BIT     7,A             ;TEST SIDE BIT
   F212    3E30                 MVI     A,'0'
   F214    2802                 JRZ     SIDEZERO
   F216    3E31                 MVI     A,'1'
   F218                 SIDEZERO:
   F218    32 FA3A              STA     SIDEID
                        
   F21B    CB78                 BIT             7,B
   F21D    CA F22E              JZ              SSIDEA
   F220    DB53                 IN              DCMD    ; SET SIDE FOR 1791
   F222    CB67                 BIT             4,A
   F224    CA F23F              JZ              SSECTOR
   F227    CBA7                 RES             4,A             ; SET SIDE B
   F229    D353                 OUT             DCMD
   F22B    C3 F239              JMP             SETSIDE
   F22E                 SSIDEA:
   F22E    DB53                 IN              DCMD            ; SET SIDE FOR 1791
   F230    CB67                 BIT             4,A
   F232    C2 F23F              JNZ             SSECTOR
   F235    CBE7                 SET             4,A                     ; SET SIDE A
   F237    D353                 OUT             DCMD
   F239                 SETSIDE:






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 23




   F239    C5                   PUSH    B
   F23A    06FF                 MVI             B,0FFH          ;Slight delay for hardware
   F23C    10FE                 DELYS:  DJNZ DELYS
   F23E    C1                   POP             B
                                
   F23F                 SSECTOR:
   F23F    78                   MOV     A,B                     ;GET BACK SECTOR
   F240    E67F                 ANI     07FH            ;DROP SIDE BIT
   F242    D356                 OUT     WSECT           ;UPDATE 179X SECTOR REGISTER
                        
   F244    CD F3CD              CALL WAITON
                        
   F247    3A FA28              LDA     PCMD            ;GET READ OR WRITE COMMAND
   F24A    CBCF                 SET     WBSID1,A        ;UPDATE SSO BIT TO 1
   F24C    CB78                 BIT     7,B                     ;ARE WE ON SIDE 1(y/n)
   F24E    2802                 JRZ     SID01           ;NO, LEAVE WBSIDE BIT AS 0
   F250    CBDF                 SET     WBSIDE,A
                        
                        
   F252                 SID01:
   F252    F3                   DI
   F253    D354                 OUT     WCMD            ;FOR PIO 179X COMMAND
   F255    32 FA39      SID2:   STA     OCMD
   F258    32 FA29              STA     ORWCMD          ;SAVE LAST READ OR WRITE CMD
   F25B    57                   MOV     D,A             ;SAVE THE COMMAND
                        
                        
   F25C    01 8057              LXI     B,128 < 8+WDATA ;SET PORT AND LENGTH
   F25F    3A FA1A              LDA     PTRACK          ;GET CURRENT TRACK
   F262    21 FA61              LXI     H,OFF
   F265    BE                   CMP     M               ;IS IT A USER TRACK(y/n)
   F266    3A FA65              LDA     USLEN           ;GET USER SECTOR LENGTH
   F269    3003                 JRNC    ULEN
   F26B    3A FA63              LDA     SSLEN           ;GET SYSTEM SECTOR LENGTH
                        
   F26E    2A FA1E      ULEN:   LHLD    PDMA            ;GET DMA ADDRESS
   F271    CB6A                 BIT     WBWRIT,D        ;ARE WE WRITING(y/n)
   F273    2018                 JRNZ    WRIT            ;YES, GO WRITE
                        
                        
                        ;********************************************************
                        ;                     READ THE SECTOR.
                        ;********************************************************
                        
   F275                 PIRD:
   F275    B7                   ORA     A
   F276    280E                 JRZ     PR12
   F278    0600                 MVI     B,0H
   F27A    3D                   DCR     A
   F27B    2809                 JRZ     PR25
   F27D    3D                   DCR     A
   F27E    2804                 JRZ     PR51
   F280    EDB2                 INIR
   F282    EDB2                 INIR
   F284    EDB2         PR51:   INIR






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 24




   F286                 PR25:
   F286    EDB2         PR12:   INIR
                                
   F288                 RDFN:
                        
   F288    FB                   EI
   F289    0E9C                 MVI     C,WSREAD        ;STATUS BITS TO TEST
   F28B    1816                 JMPR    CHEK
                        
                        
                        ;********************************************************
                        ;                   WRITE THE SECTOR.
                        ;********************************************************
                        
   F28D                 WRIT:
   F28D    B7                   ORA     A
   F28E    280E                 JRZ     PW12
   F290    0600                 MVI     B,0H
   F292    3D                   DCR     A
   F293    2809                 JRZ     PW25
   F295    3D                   DCR     A
   F296    2804                 JRZ     PW51
   F298    EDB3                 OUTIR
   F29A    EDB3                 OUTIR
                        
   F29C    EDB3         PW51:   OUTIR
   F29E                 PW25:
   F29E    EDB3         PW12:   OUTIR
                                                
   F2A0                 WRFN:
   F2A0    FB                   EI
   F2A1    0EFC                 MVI     C,WSWRIT        ;STATUS BITS TO TEST
                                
                        
                        
                        ;********************************************************
                        ;       WAIT FOR COMPLETION OF DISK OPERATION.
                        ;       TEST FOR ERRORS.
                        ;********************************************************
                        
   F2A3                 CHEK:   
                        
   F2A3    CD F396              CALL    FDONE           ;WAIT FOR 179X DONE
                        
   F2A6    A1                   ANA     C               ;ANY ERROR BITS(y/n)
   F2A7    C8                   RZ                      ;NO, RETURN - SUCCESSFUL
                        
                        
                        ;********************************************************
                        ;           RETRY THE I/O IF AN ERROR OCCURED.
                        ;********************************************************
                        
   F2A8                 NOPRNT:
   F2A8    21 FA25              LXI     H,RMACRO        ;POINT TO MACRO RETRY COUNT
   F2AB    35                   DCR     M               ;DECREMENT IT






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 25




   F2AC    C2 F20C              JNZ     MIC             ;RE-DO READ/WRITE
                        
   F2AF    21 EE51              LXI     H,KBIT
   F2B2    35                   DCR     M
   F2B3    CA F2C1              JZ      KEYIT
                        
   F2B6    CD F369              CALL    FHOME
   F2B9    D8                   RC
   F2BA    AF                   XRA     A
   F2BB    32 FA5E              STA     TRACK
   F2BE    C3 F1DF              JMP     MAC
                        
                        
                        ;       IF WE CAME HERE IT IS TIME TO RE-CALIBRATE THE DRIVE
                        
   F2C1                 KEYIT:
   F2C1    3E04                 MVI     A,4
   F2C3    32 EE51              STA     KBIT
   F2C6    3A FA36              LDA     ISTAT           ;GET BACK LAST STATUS
   F2C9    A1                   ANA     C
   F2CA    CD F3D7              CALL    EPRINT
                        
   F2CD                 NORE:
                        
                        ;********************************************************
                        ;THE FOLLOWING ROUTINE WAITS FOR USER
                        ;TO RETRY OPERATION ON DRIVE WITH ERROR
                        ;********************************************************
                        
   F2CD    CD F369              CALL    FHOME
   F2D0    DA F4DA              JC      FATER3
   F2D3    AF                   XRA     A
   F2D4    32 FA5E              STA     TRACK
                        
                        ; ON A MEDIA ERROR YOU CAN TYPE IN A CONTROL CHARACTER
                        ; THAT DETERMINS WHAT THE BIOS AND BDOS WILL DO NEXT
                        ;
                        ; - CONTROL-C TO WARM BOOT (YOU GIVE UP ON ERROR)
                        ; - CONTROL-D TO IGNORE THE ERROR SO YOU CAN READ/WRITE
                        ;   'BAD' DATA AND CONTINUE ON WITHOUT A 'BDOS BAD SECTOR' MESSAGE
                        ; - <RETURN> TO RETRY THE OPERATION ANOTHER 12 TIMES
                        
   F2D7                 CRIN:
   F2D7    CD F56A              CALL    CONST           ;SEE IF KEY PRESSED
   F2DA    28FB                 JRZ     CRIN            ;IF NOT KEEP RINGING
   F2DC    CD F56D              CALL    CONIN           ;GET CHAR
   F2DF    FE03                 CPI     3               ;A ^C (y/n)
   F2E1    CA EE6A              JZ      EEXIT           ;DO A WARM BOOT IF SO
   F2E4    FE04                 CPI     4               ;A ^D (y/n)
   F2E6    280D                 JRZ     FXER            ;IGNORE ERROR
   F2E8    FE0D                 CPI     13              ;SEE IF 'CR'
   F2EA    20EB                 JRNZ    CRIN            ;IF NOT TRY AGAIN
   F2EC    21 FA33              LXI     H,MRML
   F2EF    35                   DCR     M
   F2F0    37                   STC






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 26




   F2F1    C8                   RZ
   F2F2    C3 F1DF              JMP     MAC             ;DO ANOTHER RE-TRY
                                
                        
                        ;IGNORE DISK I/O ERROR AND CONTINUE WITH STATUS SET O.K.
                        
   F2F5                 FXER:
   F2F5    37                   STC                     ;FIX UP CARRY
   F2F6    3F                   CMC
   F2F7    AF                   XRA     A               ;CLEAR ERROR FLAG
   F2F8    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET Z3S CONTROL BYTE. GET 2 Z3S CONTROL BYTES, ONE
                        ; WITH THE HARDWARE WAIT BIT ACTIVE AND ONE WITHOUT,
                        ; FROM THE 8 POSSIBLE CONTROL BYTES. OUTPUT THE NO WAIT
                        ; BYTE. SAVE BOTH FOR LATER USE.
                        ;********************************************************
                        
   F2F9    3A FA1A      SETD3S: LDA     PTRACK          ;GET DESIRED TRACK
   F2FC    21 FA61              LXI     H,OFF
   F2FF    BE                   CMP     M               ;USER TRACK(y/n)
   F300    21 FA5A              LXI     H,US0N          ;POINT TO USER TRACK BYTES
   F303    3003                 JRNC    USER
   F305    21 FA56              LXI     H,SS0N          ;POINT TO SYSTEM TRACK BYTES
                        
   F308    3A FA1C      USER:   LDA     PSECT           ;TEST IF ON SIDE 1
   F30B    CB7F                 BIT     7,A
   F30D    2802                 JRZ     SID0            ;ON SIDE 0
   F30F    23                   INX     H               ;POINT TO SIDE 1 BYTES
   F310    23                   INX     H
                        
   F311    5E           SID0:   MOV     E,M             ;GET THE NO WAIT BYTE
   F312    23                   INX     H
   F313    56                   MOV     D,M             ;GET THE WAIT BYTE
   F314    ED53 FA2F            SDED    D3SNO           ;SAVE BOTH
   F318    7B                   MOV     A,E
   F319    D353                 OUT     DCMD            ;OUTPUT THE NO WAIT BYTE
   F31B    32 FA38              STA             OD3S
                        
   F31E    CD F3A8              CALL DELAY
                        
   F321                 RDYCHK:
   F321    DB54                 IN      WSTAT                   ;Drive select delay
   F323    32 FA36              STA     ISTAT
   F326    E680                 ANI     80H
   F328    20F7                 JRNZ    RDYCHK          ;Return when ready
                        
   F32A    C9                   RET
                        
                        
                        ;********************************************************
                        ; GET Z3S CONTROL BYTES. CREATE THE EIGHT Z3S CONTROL
                        ; BYTES IN ATABLE. THESE BYTES SET THE DENSITY BIT FOR






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 27




                        ; SYSTEM TRACKS AND USER TRACKS, SELECT SIDE 0 OR SIDE
                        ; 1, AND ENABLE OR DISABLE THE HARDWARE DATA WAIT.
                        ; CREATE THE BYTES BY MERGING THE APPROPRIATE HARDWARE
                        ; CONTROL BITS IN OPRTAB WITH THE CORRECT ADDRESS
                        ; CONTROL BITS IN ADRTAB.
                        ;********************************************************
                        
   F32B    3A FA26      GETD3S: LDA     ADISK           ;GET CURRENT DISK NUMBER
   F32E    21 EE4B              LXI     H,ADRTAB        ;POINT TO ADDRESS
   F331    5F                   MOV     E,A             ;CONTROL BITS TABLE
   F332    1600                 MVI     D,0
   F334    19                   DAD     D
   F335    4E                   MOV     C,M             ;SAVE ADDR BITS FOR Z3S BYTES
                        
   F336    3A FA60              LDA     FLAG            ;GET THE FLAG
   F339    E614                 ANI     00010100B       ;ISOLATE SYSTEM DENSITY, SIZE
   F33B    47                   MOV     B,A
   F33C    0F                   RRC                     ;ALIGN THE DENSITY BIT
   F33D    B0                   ORA     B               ;COMBINE SIZE AND DENSITY
   F33E    E60C                 ANI     00001100B       ;DROP UNALIGNED BITS
   F340    11 FA56              LXI     D,SS0N          ;POINT TO BEGINNING OF DEST
   F343    CD F34B              CALL    GET             ;GET SYSTEM TRACK Z3S BYTES
                        
   F346    3A FA60              LDA     FLAG            ;GET THE FLAG
   F349    E60C                 ANI     00001100B       ;ISOLATE USER DENSITY, SIZE
                                                        ;AND GET USER TRACK Z3S BYTES
                        
   F34B    21 EE3B      GET:    LXI     H,OPRTAB        ;POINT TO CONTROL BITS TABLE
   F34E    D5                   PUSH    D
   F34F    5F                   MOV     E,A             ;GET CONTROL BITS START ADDRESS
   F350    1600                 MVI     D,0
   F352    19                   DAD     D               ;START ADDRESS NOW IN HL
   F353    D1                   POP     D               ;DESTINATION RESTORED TO DE
   F354    0604                 MVI     B,4
   F356    7E           LOOP3:  MOV     A,M             ;GET A BYTE OF CONTROL BITS
   F357    23                   INX     H
   F358    B1                   ORA     C               ;COMBINE WITH ADDRESS BITS
   F359    12                   STAX    D               ;STORE COMBINED BYTE
   F35A    13                   INX     D
   F35B    10F9                 DJNZ    LOOP3           ;DO ALL BYTES
   F35D    C9                   RET
                        
                        ;********************************************************
                        ; WAIT FOR TRIM ERASE TO END. WAIT ONLY IF THE LAST
                        ; FLOPPY DISK COMMAND WAS A WRITE. CALLED ONLY IF
                        ; PHYSICAL HEAD MOTION IS NEEDED TO ACCESS THE NEXT
                        ; SECTOR. THE WAIT IS ABOUT 500 USEC AT 4 MHZ. THIS
                        ; ALLOWS TRIM ERASE TO COMPLETE BEFORE THE DRIVE IS
                        ; DESELECTED OR THE HEAD IS MOVED.
                        ;********************************************************
                        
   F35E    3A FA29      TRIMWT: LDA     ORWCMD          ;GET LAST READ OR WRITE COMMAND
   F361    CB6F                 BIT     WBWRIT,A        ;TEST WRITE BIT
   F363    C8                   RZ                      ;IT WAS A READ, DON'T WAIT
   F364    0696                 MVI     B,150           ;WAIT






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 28




   F366    10FE                 DJNZ    . 
   F368    C9                   RET
                        
                        
                        ;********************************************************
                        ;* MULTI-PURPOSE 179X SEEK SUBROUTINE. THE ENTRY
                        ;* POINTS ARE:
                        ;*
                        ;*      FHOME - RESTORE HEAD TO TRACK 0 POSITION
                        ;*      FSEEK - SEEK WITH HEAD LOAD TO DEST. IN ACC
                        ;*
                        ;*      FUNLD - SEEK SAME TRACK TO UNLOAD HEAD
                        ;*      FLOAD - SEEK SAME TRACK TO LOAD HEAD
                        ;*
                        ;* FOR THESE LAST TWO FUNCTIONS THE COMMAND IS STILL IN
                        ;* PROGRESS WHEN RETURN IS MADE. THE CALLING PROGRAM
                        ;* MUST WAIT FOR THE COMMAND TO COMPLETE.
                        ;*******************************************************
                        
   F369                 FHOME:  
   F369    DB54                 IN              WSTAT
   F36B    E601                 ANI             1
   F36D    20FA                 JRNZ    FHOME
   F36F    CD F3C3              CALL    WAITOFF
   F372    060C                 MVI     B,WHOME         ;SET UP HOME COMMAND
   F374    180F                 JMPR    FH
                        
   F376                 FSEEK:
   F376    F5                   PUSH PSW
   F377                 WTSTAT: 
   F377    DB54                 IN              WSTAT
   F379    E601                 ANI             1
   F37B    20FA                 JRNZ    WTSTAT
   F37D    CD F3C3              CALL    WAITOFF
   F380    F1                   POP PSW
   F381    D357                 OUT     WDATA           ;OUTPUT SEEK DESTINATION
   F383    061C                 MVI     B,WSEEK         ;SET UP SEEK, DIFFERENT TRACK
                        
   F385    3A FA5F      FH:     LDA     SPEED           ;GET SEEK SPEED
   F388    B0                   ORA     B                       ;MERGE WITH SEEK COMMAND
   F389    D354                 OUT     WCMD            ;OUTPUT TO 179X
   F38B    32 FA39              STA     OCMD
                                
   F38E    CD F396              CALL    FDONE
                                
   F391    E698                 ANI     WSSEEK          ;ELIMINATE UNWANTED STATUS BITS
   F393    C8                   RZ                      ;RETURN - SUCCESSFUL 
   F394    37                   STC
   F395    C9                   RET                     ;RETURN WITH CARRY SET - ERROR
                        
                        ;********************************************************
                        ;    NOW GO IN A WAIT LOOP FOR HEAD SETTLE TIME
                        ;********************************************************
                        
                        ;SETL:   PUSH   PSW             ;SAVE FLAGS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 29




                        
                        ;       LDA     PCMD
                        ;       BIT     5,A             ;SEE IF READ OR WRITE
                        ;       JRZ     NDLY
                                
                        ;       MVI     A,20            ;WAIT 20 MS
                        ;SETL1:  DJNZ   SETL1           ;LOOP ON B REG
                        ;       DCR     A               ;LOOP ON SETTLE VALUE
                        ;        JRNZ    SETL1
                        ;NDLY:
                        ;        POP    PSW             ;GET BACK REGS
                        ;       RZ                      ;RETURN - SUCCESSFUL 
                        ;       STC
                        ;       RET                     ;RETURN WITH CARRY SET - ERROR
                        
                        ;FUNLD: MVI     B,WUNLD         ;SET UP UNLOAD COMMAND
                        ;       JMPR    FU
                        
                        ;FLOAD: MVI     B,WLOAD         ;SET UP LOAD COMMAND
                        
                        ;FU:    IN      WTRACK          ;GET CURRENT TRACK
                        ;       OUT     WDATA           ;OUTPUT SEEK DESTINATION
                        
                        ;       MOV     A,B             ;OUTPUT SEEK COMMAND
                        ;       OUT     WCMD
                        ;       RET
                        
                        
                        ;********************************************************
                        ; 179X NOT BUSY SUBROUTINE. WAIT FOR 179X NOT BUSY.
                        ; THEN RETURN THE LAST STATUS READ FROM THE CHIP. THERE
                        ; ARE TWO ENTRY POINTS. FDONE DELAYS A SHORT WHILE TO
                        ; ALLOW THE 179X TO SET ITS BUSY BIT.
                        ; THIS ROUTINE TESTS FOR TYPE 1 AND TYPE 2
                        ; COMMAND COMPLETION. 
                        ;********************************************************
                        
   F396                 FDONE:
                        
   F396    CD F3A8              CALL DELAY
                        
   F399                 PIODON:
   F399    DB54                 IN      WSTAT
   F39B    32 FA36              STA     ISTAT
   F39E    CB47                 BIT     WBBUSY,A
   F3A0    20F7                 JRNZ    PIODON
                        
   F3A2    F5                   PUSH PSW
   F3A3    CD F3C3              CALL WAITOFF
   F3A6    F1                   POP PSW
   F3A7    C9                   RET     
                                
                        ;
                        ; Delay for drive select hardware. Different for 8" and 5" drives
                        ;






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 30




   F3A8                 DELAY:  
                        
   F3A8    3A FA19              LDA     PDISK
   F3AB    21 EE33              LXI     H,SPDTAB        ;POINT TO STEP SPEED TABLE
   F3AE    5F                   MOV     E,A
   F3AF    1600                 MVI     D,0
   F3B1    19                   DAD     D
   F3B2    7E                   MOV     A,M             ;GET SPEED BYTE FOR THIS DISK
                        
   F3B3    CB7F                 BIT 7,A         ;8" or 5"
   F3B5    3E27                 MVI     A,39    ;For 8""
   F3B7    2802                 JRZ     DELAY1  
   F3B9    3E3C                 MVI     A,60    ;For 5"
   F3BB    0600         DELAY1: MVI     B,0
   F3BD    10FE         M0:     DJNZ    M0
   F3BF    3D                   DCR             A
   F3C0    20F9                 JRNZ    DELAY1  
                        
   F3C2    C9                   RET
                        
                        ;       DISABLE WAIT STATES
   F3C3                 WAITOFF:
   F3C3    DB53                 IN              DCMD
   F3C5    F680                 ORI             080H
   F3C7    D353                 OUT             DCMD
   F3C9    32 FA38              STA             OD3S
   F3CC    C9                   RET
                        ;
                        ;       ENABLE WAIT STATES
   F3CD                 WAITON:
   F3CD    DB53                 IN              DCMD
   F3CF    E67F                 ANI             07FH
   F3D1    D353                 OUT             DCMD
   F3D3    32 FA38              STA             OD3S
   F3D6    C9                   RET
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK ERROR PRINT SUBROUTINE. ANY NON ZERO BITS
                        ; IN THE ACCUMULATOR ARE ERRORS. THE FIRST ONE FOUND IS
                        ; PRINTED OUT.
                        ;********************************************************
                        
   F3D7    57           EPRINT: MOV     D,A     ;SAVE ERROR BITS
   F3D8    79                   MOV     A,C     ;STORE CALLING ROUTINE ID
   F3D9    32 FA37              STA     ACTIVE
   F3DC    DB55                 IN      WTRACK  ;STORE TRACK REGISTER
   F3DE    32 FA34              STA     ITRACK
   F3E1    DB56                 IN      WSECT   ;STORE SECTOR REGISTER
   F3E3    32 FA35              STA     ISECT
                        
   F3E6    CD F4F8              CALL    MSG
   F3E9    0D0A                 .BYTE   CR,LF
   F3EB    457272206F6E         .ASCIS  \Err on \
   F3F2    3A FA19              LDA     PDISK






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 31




   F3F5    C641                 ADI     'A'
   F3F7    4F                   MOV     C,A
   F3F8    CD EE0C              CALL    BIOOUT
   F3FB    CD F4F8              CALL    MSG
   F3FE    3A20A0               .ASCIS  \:  \
                        
   F401    CBCA                 SET     1,D     ;INSURE NON ZERO ERROR BYTE
   F403    0600                 MVI     B,0
   F405    04           ..FIND: INR     B
   F406    CB12                 RALR    D       ;FIND FIRST NON ZERO BIT
   F408    30FB                 JRNC    ..FIND
   F40A    21 F431              LXI     H,ERMESS ;POINT TO MESSAGE TABLE
   F40D    1805                 JMPR    ..JOIN
   F40F    CB7E         ..MORE: BIT     7,M     ;TEST FOR END OF MESSAGE
   F411    23                   INX     H
   F412    28FB                 JRZ     ..MORE  ;KEEP LOOKING FOR END, THIS MSG
   F414    10F9         ..JOIN: DJNZ    ..MORE  ;KEEP LOOKING FOR CORRECT MSG
   F416    CD F4FE              CALL    MSGHL   ;PRINT OUT CORRECT MESSAGE
   F419    CD F4F8              CALL    MSG
   F41C    A0                   .ASCIS  \ \
                        
   F41D    0607                 MVI     B,EILEN ;NUMBER OF ERROR INFO BYTES
   F41F    21 FA34              LXI     H,EINFO
   F422    CD F4F8      ..LOOP: CALL    MSG     ;SPACE BETWEEN BYTES
   F425    A0                   .ASCIS  \ \
   F426    7E                   MOV     A,M
   F427    23                   INX     H
   F428    CD F460              CALL    LBYTE   ;PRINT NEXT BYTE
   F42B    10F5                 DJNZ    ..LOOP
                        
   F42D    3E01                 MVI     A,1     ;CP/M ERROR FLAG
   F42F    37                   STC             ;INTERNAL ERROR FLAG
   F430    C9                   RET
                        
                        ; FLOPPY DISK ERROR MESSAGES. USED BY THE EPRINT
                        ; ROUTINE TO TELL THE USER WHICH 179X ERROR OCCURED.
                        
   F431    4E6F74205265 ERMESS: .ASCIS  \Not Ready\
   F43A    577269746520         .ASCIS  \Write Protect\
   F447    4661756CF4           .ASCIS  \Fault\
   F44C    524EC6               .ASCIS  \RNF\
   F44F    426164204352         .ASCIS  \Bad CRC\
   F456    4C6F73742044         .ASCIS  \Lost Data\
   F45F    BF                   .ASCIS  \?\
                        
                        
                        ;********************************************************
                        ;            PRINT HEX BYTE ON CONSOLE.
                        ;********************************************************
                        
   F460    F5           LBYTE:  PUSH    PSW
   F461    0F                   RRC
   F462    0F                   RRC
   F463    0F                   RRC
   F464    0F                   RRC






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 32




   F465    CD F469              CALL    P2
   F468    F1                   POP     PSW
   F469    E60F         P2:     ANI     0FH
   F46B    C690                 ADI     90H
   F46D    27                   DAA
   F46E    CE40                 ACI     40H
   F470    27                   DAA
   F471    4F                   MOV     C,A
   F472    C3 EE0C              JMP     BIOOUT
                        
                        
                        ;********************************************************
                        ; MOVE ATABLE INTO THE CORRECT APB. MOVE THE CORRECT
                        ; APB INTO ATABLE.
                        ;********************************************************
                        
   F475    3A FA26      PUTAPB: LDA     ADISK           ;GET CURRENT ATABLE NUMBER
   F478    CD F4A9              CALL    ASET            ;SET UP FOR MOVE
   F47B    EDB0                 LDIR                    ;COPY ATABLE INTO APB
   F47D    C9                   RET
                        
   F47E    21 FA26      GETAPB: LXI     H,ADISK         ;POINT TO ATABLE DRIVE NUMBER
   F481    3A FA19              LDA     PDISK           ;GET NEW NUMBER
   F484    BE                   CMP     M               ;THE SAME(y/n)
   F485    C8                   RZ                      ;YES, ATABLE ALREADY VALID
   F486    77                   MOV     M,A             ;UPDATE ATABLE NUMBER
   F487    CD F4A9              CALL    ASET            ;SET UP FOR MOVE
   F48A    EB                   XCHG                    ;APB ADDRESS NOW SOURCE
   F48B    EDB0                 LDIR                    ;COPY APB INTO ATABLE
                        
                        ;NOW GET ALLOCATION SIZE FOR SELECTED DISK
                        
   F48D    3A FA19              LDA     PDISK           ;GET DISK #
   F490    5F                   MOV     E,A             ;MAKE INDEX
   F491    1600                 MVI     D,0
   F493    21 FA3B              LXI     H,ALOCSZ        ;POINT TO SAVED BSH TABLE
   F496    19                   DAD     D
   F497    7E                   MOV     A,M             ;GET BSH VALUE
   F498    21 F4A4              LXI     H,ALOREC        ;POINT TO RECORDS/ALLOCATION SIZE
   F49B    D603                 SUI     3               ;SET FOR INDEX
   F49D    5F                   MOV     E,A             ;MAKE INDEX
   F49E    19                   DAD     D
   F49F    7E                   MOV     A,M             ;GET RECORDS/ALLOCATION
   F4A0    32 FA3F              STA     ALOCA           ;SAVE # FOR SELECTED DRIVE
                        
   F4A3    C9                   RET
                        
                        ;TABLE FOR # OF RECORDS FOR ALLOCATION SIZES FROM 1K TO 16K
                        
   F4A4                 ALOREC:
   F4A4    0810204080           .BYTE   8,16,32,64,128
                        
                        
   F4A9    6F           ASET:   MOV     L,A             ;GET DISK NUMBER INTO L
   F4AA    CD F4B4              CALL    GETDPH






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 33




   F4AD    21 FA56              LXI     H,ATABLE
   F4B0    01 0011              LXI     B,ALEN
   F4B3    C9                   RET
                        
                        
                        ;********************************************************
                        ; GET DPH ADDRESS AND APB ADDRESS. RETURN THE DPH
                        ; ADDRESS IN HL, THE CORRESPONDING APB ADDRESS IN DE.
                        ; DISK NUMBER MUST BE IN L AT CALL.
                        ;********************************************************
                        
   F4B4    2600         GETDPH: MVI     H,0
   F4B6    29                   DAD     H               ;GET NUMBER * 2
   F4B7    5D                   MOV     E,L
   F4B8    54                   MOV     D,H
   F4B9    29                   DAD     H
   F4BA    29                   DAD     H
   F4BB    29                   DAD     H               ;GET NUMBER * 16
   F4BC    19                   DAD     D               ;GET NUMBER * 18
   F4BD    11 F573              LXI     D,APBBEG
   F4C0    19                   DAD     D               ;NOW WE HAVE ADDR OF APB ADDR
   F4C1    5E                   MOV     E,M             ;GET APB ADDRESS INTO DE
   F4C2    23                   INX     H
   F4C3    56                   MOV     D,M
   F4C4    23                   INX     H               ;HL NOW HAS DPH ADDRESS
   F4C5    C9                   RET
                        
                        
                        ;********************************************************
                        ;                  FATAL ERROR.
                        ;********************************************************
                        
   F4C6                 FATER1:
   F4C6    CD F4F8              CALL    MSG
   F4C9    204631               .ASCII  ' F1'
   F4CC    D0                   .BYTE   'P'+80H
   F4CD    C3 EE6A              JMP     EEXIT           ;GO WARM BOOT
                        
   F4D0                 FATER2:
   F4D0    CD F4F8              CALL    MSG
   F4D3    204632               .ASCII  ' F2'
   F4D6    D0                   .BYTE   'P'+80H
   F4D7    C3 EE6A              JMP     EEXIT           ;GO WARM BOOT
                        
   F4DA                 FATER3:
   F4DA    CD F4F8              CALL    MSG
   F4DD    204633               .ASCII  ' F3'
   F4E0    D0                   .BYTE   'P'+80H
   F4E1    C3 EE6A              JMP     EEXIT           ;GO WARM BOOT
                        
   F4E4                 FATER4:
   F4E4    CD F4F8              CALL    MSG
   F4E7    204634               .ASCII  ' F4'
   F4EA    D0                   .BYTE   'P'+80H
   F4EB    C3 EE6A              JMP     EEXIT           ;GO WARM BOOT






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 34




                        
   F4EE    CD F4F8      QUIT1:  CALL    MSG
   F4F1    205131               .ASCII  ' Q1'
   F4F4    D0                   .BYTE   'P'+80H
   F4F5    C3 EE6A              JMP     EEXIT           ;GO WARM BOOT
                        
                        ;********************************************************
                        ; MESSAGE OUTPUT SUBROUTINE. THERE ARE TWO ENTRY
                        ; POINTS. FOR MSG A MESSAGE FOLLOWS INLINE AFTER THE
                        ; CALL. FOR MSGHL THE MESSAGE ADDRESS IS IN HL. FOR
                        ; BOTH ENTRY POINTS THE MESSAGE IS PRINTED OUT UP TO
                        ; AND INCLUDING A CHARACTER WITH ITS HI ORDER BIT SET.
                        ;********************************************************
                        
   F4F8    E3           MSG:    XTHL                    ;GET MESSAGE ADDRESS
   F4F9    CD F4FE              CALL    MSGHL           ;PRINT THE MESSAGE
   F4FC    E3                   XTHL                    ;RESTORE NEW RETURN ADDRESS
   F4FD    C9                   RET
                        
   F4FE    4E           MSGHL:  MOV     C,M             ;GET NEXT CHAR OF MESSAGE
   F4FF    23                   INX     H
   F500    CD EE0C              CALL    BIOOUT          ;OUTPUT THE CHAR
   F503    B7                   ORA     A               ;TEST FOR HI BIT SET
   F504    F2 F4FE              JP      MSGHL           ;NOT SET, KEEP GOING
   F507    C9                   RET
                        
                        
                        ;********************************************************
                        ; I/O VECTORING ROUTINES. THESE ROUTINES USE THE IOBYTE
                        ; TO SELECT THE PHYSICAL DEVICE WHICH WILL CORRESPOND
                        ; TO THE CONSOLE OR TO THE LIST OUTPUT. THE JUMPS TO
                        ; THE PHYSICAL DEVICES SHOULD BE CHANGED HERE TO USE
                        ; EXTERNAL I/O. THIS RETAINS IOBYTE CONTROL OVER THE
                        ; ROUTINES.
                        ;********************************************************
                        
                        
                        ;********************************************************
                        ;    I/O ROUTINES FOR THE TTY PHYSICAL DEVICE.
                        ;********************************************************
                        
   F508    43494F5442           .ASCII  \CIOTB\
                        
   F50D    00           CSTAT:  .BYTE   0
   F50E    00           KBSTAT: .BYTE   0
   F50F    01           CIO:    .BYTE   1
   F510    01           KBIO:   .BYTE   1
   F511    04           COUT:   .BYTE   4
   F512    02           KIN:    .BYTE   2
                        
   F513    4B4953               .ASCII  \KIS\
   F516                 TTYIS:
   F516    3A F50E              LDA     KBSTAT
   F519    4F                   MOV     C,A
   F51A    3A F512              LDA     KIN






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 35




   F51D    5F                   MOV     E,A
   F51E    ED78                 INP     A
   F520    00                   NOP
                        ;       CMA FOR NEGATIVE LOGIC
   F521    00                   NOP
   F522    A3                   ANA     E
   F523    00                   NOP
   F524    00                   NOP
   F525    C8                   RZ                      ;RETURN FALSE IF UNAVAILABLE
   F526    00                   NOP
   F527    00                   NOP
   F528    3EFF                 MVI     A,0FFH
   F52A    C9                   RET                     ;RETURN TRUE
                        
   F52B    4B49                 .ASCII  \KI\
                        
   F52D    CD F516      TTYIN:  CALL    TTYIS           ;GET STATUS
   F530    CA F52D              JZ      TTYIN           ;WAIT UNTIL DATA AVAILABLE
   F533    3A F510              LDA     KBIO
   F536    4F                   MOV     C,A
   F537    ED78                 INP     A
   F539    00                   NOP
   F53A    00                   NOP
   F53B    E67F                 ANI     07FH            ;DROP PARITY
   F53D    C9                   RET
                        
   F53E    434F53               .ASCII  \COS\
                        
   F541                 TTYOS:
   F541    C5                   PUSH    B
   F542    3A F50D              LDA     CSTAT
   F545    4F                   MOV     C,A
   F546    3A F511              LDA     COUT
   F549    5F                   MOV     E,A
   F54A    ED78                 INP     A
                        ;       CMA FOR NEGATIVE LOGIC
   F54C    00                   NOP
   F54D    00                   NOP
   F54E    A3                   ANA     E
   F54F    C1                   POP     B
   F550    C8                   RZ                      ;RETURN FALSE IF NOT EMPTY
   F551    00                   NOP
   F552    00                   NOP
   F553    3EFF                 MVI     A,0FFH
   F555    C9                   RET                     ;RETURN TRUE
                        
   F556    434F                 .ASCII  \CO\
   F558                 TTYOUT:
   F558    CD F541              CALL    TTYOS           ;GET STATUS
   F55B    CA F558              JZ      TTYOUT          ;WAIT UNTIL BUFFER EMPTY
   F55E    59                   MOV     E,C
   F55F    3A F50F              LDA     CIO
   F562    4F                   MOV     C,A
   F563    7B                   MOV     A,E
   F564    00                   NOP






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 36




   F565    00                   NOP
   F566    ED79                 OUTP    A               ;OUTPUT THE DATA
   F568    C9                   RET
                        
                        
                        
                        ;********************************************************
                        ; Unimplemented I/O Routines
                        ;********************************************************
                        
   F569                 CRTIS: 
   F569                 READER:
   F569                 CRTIN:  
   F569                 CRTOS:  
   F569                 PUNCH:
   F569                 CRTOUT: 
   F569                 TUBE:
   F569                 LISTST:
   F569                 LIST:
   F569                 LISTC:
   F569                 LIST1:
   F569                 SERP:
   F569                 SPIN0:
   F569                 SPIN2:  
   F569                 CRTOT1:
   F569                 SPINST: 
   F569                 CENST:
   F569                 SERPST:
   F569    C9                   RET
                        
                        
                        ;********************************************************
                        ; IO ROUTINES FOR THE OTHER IOBYTE VECTORED DEVICES
                        ;********************************************************
                        
   F56A                 CONST:  
   F56A    C3 F516              JMP     TTYIS   
                        
   F56D                 CONIN:  
   F56D    C3 F52D              JMP     TTYIN
                        
   F570                 CONOUT:
   F570    C3 F558              JMP     TTYOUT
                        
                        
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK DPH TABLE. FOR THE CONVENIENCE OF THE
                        ; CBIOS THE APB ADDRESS FOR A DISK PRECEDES THE DPH
                        ; FOR THE DISK.
                        ;********************************************************
                        
   F573                 APBBEG:
   F573    FA6A                 .WORD   APB0






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 37




   F575    FA8A                 .WORD   TRANS0          ;LOGICAL TO PHYSICAL XLATE TAB
   F577    0000                 .WORD   0               ;SCRATCH
   F579    0000                 .WORD   0
   F57B    0000                 .WORD   0
   F57D    FC4A                 .WORD   DIRBUF          ;DIRECTORY BUFFER
   F57F    FA7B                 .WORD   DPB0            ;DISK PARAMETER BLOCK
   F581    FD36                 .WORD   CSV0            ;CHECKSUM VECTOR
   F583    FCCA                 .WORD   ALV0            ;ALLOCATION VECTOR
                        
   F585    FAE2                 .WORD   APB1
   F587    FB02                 .WORD   TRANS1
   F589    0000                 .WORD   0
   F58B    0000                 .WORD   0
   F58D    0000                 .WORD   0
   F58F    FC4A                 .WORD   DIRBUF
   F591    FAF3                 .WORD   DPB1
   F593    FDE2                 .WORD   CSV1
   F595    FD76                 .WORD   ALV1
                        
   F597    FB5A                 .WORD   APB2
   F599    FB7A                 .WORD   TRANS2
   F59B    0000                 .WORD   0
   F59D    0000                 .WORD   0
   F59F    0000                 .WORD   0
   F5A1    FC4A                 .WORD   DIRBUF
   F5A3    FB6B                 .WORD   DPB2
   F5A5    FE8E                 .WORD   CSV2
   F5A7    FE22                 .WORD   ALV2
                        
   F5A9    FBD2                 .WORD   APB3
   F5AB    FBF2                 .WORD   TRANS3
   F5AD    0000                 .WORD   0
   F5AF    0000                 .WORD   0
   F5B1    0000                 .WORD   0
   F5B3    FC4A                 .WORD   DIRBUF
   F5B5    FBE3                 .WORD   DPB3
   F5B7    FF3A                 .WORD   CSV3
   F5B9    FECE                 .WORD   ALV3
                        
                        
                        ;********************************************************
                        ; STANDARD APBS, DPBS AND TRANSLATE TABLES. THESE
                        ; TABLES ARE USED BY SELDSK WHEN IT CANNOT FIND A VALID
                        ; DDB ON THE DISK. THE TABLES ARE FOR STANDARD 8" OR 5"
                        ; SINGLE DENSITY FLOPPY DISKS. THIS ALLOWS PROGRAM
                        ; INTERCHANGE WITH OTHER CP/M BASED SYSTEMS WITHOUT
                        ; REQUIRING A DDB TO BE WRITTEN ON EACH DISK.
                        ;********************************************************
                        
                        
                        
                        ;********************************************************
                        ;             8" FLOPPY DISK TABLES.
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 38




   F5BB                 STDDDB:
   F5BB    01                   .BYTE   00000001B       ;FLAG
   F5BC    0002                 .WORD   2               ;OFF
   F5BE    00                   .BYTE   0               ;SSLEN
   F5BF    1A                   .BYTE   26              ;SLRPS
   F5C0    00                   .BYTE   0               ;USLEN
   F5C1    1A                   .BYTE   26              ;ULRPS
                        
   F5C2    001A                 .WORD   26              ;STANDARD DPB
   F5C4    030700               .BYTE   3,7,0
   F5C7    00F2                 .WORD   242
   F5C9    003F                 .WORD   63
   F5CB    C000                 .BYTE   192,0
   F5CD    0010                 .WORD   16
   F5CF    0002                 .WORD   2
                        
   F5D1    01070D131905         .BYTE   1,7,13,19,25,5,11,17,23
   F5DA    03090F150208         .BYTE   3,9,15,21,2,8,14,20,26
   F5E3    060C1218040A         .BYTE   6,12,18,24,4,10,16,22
                        
                        
                        
                        ;********************************************************
                        ;            5" FLOPPY DISK TABLES.
                        ;********************************************************
                        
                        
   F5EB    05           ALTDDB: .BYTE   00000101B       ;FLAG
   F5EC    0003                 .WORD   3               ;OFF
   F5EE    00                   .BYTE   0               ;SSLEN
   F5EF    12                   .BYTE   18              ;SLRPS
   F5F0    00                   .BYTE   0               ;USLEN
   F5F1    12                   .BYTE   18              ;ULRPS
                        
   F5F2    0012                 .WORD   18              ;STANDARD DPB
   F5F4    030700               .BYTE   3,7,0
   F5F7    0047                 .WORD   71
   F5F9    003F                 .WORD   63
   F5FB    C000                 .BYTE   192,0
   F5FD    0010                 .WORD   16
   F5FF    0003                 .WORD   3
                        
   F601    0105090D1103         .BYTE   1,5,9,13,17,3,7,11,15
   F60A    02060A0E1204         .BYTE   2,6,10,14,18,4,8,12,16
                        
                        ;********************************************************
                        ;       SECTOR READ AND WRITE BUFFERS.
                        ;********************************************************
                        
                        ; THE ORIGINAL CBIOS HAD INDEPENDENT READ AND WRITE BUFFERS.
                        ; BOHDAN COULDN'T WORK WITH THE DRI SINGLE BUFFER ALGORITHM,
                        ; SO HE LIMITED SECTOR SIZES TO 512 BYTES, AND HAD THESE LOCAL
                        ; READ AND WRITE BUFFERS. THAT WAY HE COULD IGNORE ANY 
                        ; ALLOCATION BLOCK-SIZE FLAGGING THAT BDOS PROVIDED.
                        ; B. JONES IMPLEMENTED THE DRI DEBLOCKING, COMBINED






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 39




                        ; RDBUFF & WRBUFF TO GIVE 1024 BYTE SECTOR SUPPORT.
                        ; RDBUFF & WRBUFF REFERANCES ARE STILL TO BE FOUND
                        ; IN THE PHYSICAL R/W CODE. THEY HAVE BEEN KEPT AS
                        ; FOSILS TO MARK THE ORIGINAL BUFFERING SCHEME.
                        
   F613                 HSTBUF:
   F613                 RDBUFF:
   F613                 WRBUFF:
   F613                 SYSNIT:
                        
                        ; SYSNIT CODE IS DISCARDED AFTER USE.
                        
   F613    CD F4F8      SIGNON: CALL    MSG
   F616    0D0A0A               .BYTE   CR,LF,LF
   F619    446967697461         .ASCII  'Digital Research CP/M 2.2 '
                        
   F633    3634                 .BYTE   (MSIZ)/10+'0',(MSIZ) @10+'0'
   F635    4B2F                 .ASCII  'K/'
                        
   F637    3536                 .BYTE (((BDOS-6)/1024)/10)+'0',((BDOS-6)/1024) @10+'0'
   F639    4B20545041           .ASCII  'K TPA'
   F63E    0D0A                 .BYTE   CR,LF
                        
   F640    566572736146         .ASCII  'VersaFloppy II BIOS'
   F653    0D0A80               .BYTE   CR,LF,80H       
                        
   F656    C9                   RET
                        
   0044                         NITLEN  ==      .-SYSNIT
                        
   F657                 BIOEND:
                        
                        ;********************************************************
                        ;        SHOW HOW MUCH DISK SPACE IS LEFT
                        ;********************************************************
                        
                        ;TOTAL BYTE NEEDED ON BOOT TRACKS ARE
                        ;FROM CCP TO END OF BIOS CODE PLUS LODER + DDB
                        
   1F57                 TOTSIZ  ==      ((BIOEND-CCP)+128+128)
                        
                        ;SYSTEM SECTORS USED
                        
   000F                 SECUSD  ==      TOTSIZ/512
   1E00                 SECIS   ==      SECUSD*512
                        
                                .IFG    TOTSIZ-SECIS,[
   0010                         SECALL=SECUSD+1
                                ][
                                SECALL=SECUSD
                                ]
                        
                        
                        
                                .IFG    (.-BIOS)-(NSBIOS*128),[






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 40




                                .PRNTX  \BIOS EXCEEDS DISK SPACE \
                                ]
                        
                        
                                .DEFINE SBOND[XX]=[.PRNTX /XX BYTES OF SYSTEM TRACKS LEFT/
                                ]
                                .DEFINE SBOD[XX]=[.PRNTX /XX BYTES BEYOND SYSTEM TRACKS/
                                ]       
                        
                                .DEFINE TSIZE[XX]=[
                                .PRNTX  /XX BYTES TOTAL BOOT TRACKS SPACE NEEDED /      ]
                        
                        
                                .DEFINE SECNED[XX]=[
                                .PRNTX  /XX   OF 18, 512 BYTE SECTORS USED ON SYSTEM TRACKS /]
                        
                                .IF1,[
                                .IFG    (NSBIOS*128)-(.-BIOS),[
                                SBOND   \(NSBIOS*128)-(.-BIOS)
                                TSIZE   \TOTSIZ
                                .RADIX  10
                                SECNED  \SECALL
                                ][
                                SBOD    \(.-BIOS)-(NSBIOS*128)
                                ]
                                ]
                        
                        ;********************************************************
                        ; END OF BIOS INSTRUCTIONS AND CONSTANTS. BEGINNING
                        ; OF WORK AREA.
                        ;********************************************************
                        
                        ; 1024 BYTE HOST BUFFER ENDS HERE       
                        
   FA13                         .LOC    HSTBUFF+1024
                        
                        ;********************************************************
                        ; CP/M CALL PARAMETER STORAGE. CP/M SETS THE LOGICAL
                        ; PARAMETERS BY PRELIMINARY CALLS BEFORE CALLING THE
                        ; READ OR WRITE ROUTINES. THE CP/M I/O ROUTINES SET
                        ; AND USE THE REMAINING VARIABLES.
                        ;********************************************************
                        
   FA13                 DMAFLG: .BLKB   1               ;CONTROLLER TYPE FLAG   
   FA14                 SEKSEC: .BLKB   2               ;LOGICAL SECTOR TO R/W
   FA16                 DMAADD: .BLKB   2               ;LOGICAL & ACTUAL CP/M DMA ADDR
   FA18                 CREC:   .BLKB   1               ;CURRENT RECORD WITHIN SECTOR
                        
                        
                        ;********************************************************
                        ; PHYSICAL DISK I/O PARAMETER STORAGE. THESE PARAMETERS
                        ; MUST BE SET BEFORE CALLING THE FLOPPY DISK PHYSICAL
                        ; READ OR WRITE ROUTINES.
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 41




   FA19                 PDISK:  .BLKB   1               ;PHYSICAL DISK FOR NEXT I/O
   FA1A                 PTRACK: .BLKB   2               ;PHYSICAL TRACK FOR NEXT I/O
   FA1C                 PSECT:  .BLKB   2               ;PHYSICAL SECTOR FOR NEXT I/O
   FA1E                 PDMA:   .BLKB   2               ;PHYSICAL BUFFER ADDR, NEXT I/O
                        
   FA20                 CTRACK: .BLKB   2
   FA22                 CSECT:  .BLKB   2
                        
                        
                        
                        ;********************************************************
                        ;    GENERAL PURPOSE VARIABLES ARE STORED HERE.
                        ;********************************************************
                        
   FA24                 RETRY:
   FA24                 RMICRO: .BLKB   1               ;MICRO FDC RETRY COUNT
   FA25                 RMACRO: .BLKB   1               ;MACRO FDC RETRY COUNT
   FA26                 ADISK:  .BLKB   1               ;DISK NUMBER OF DISK AT ATABLE
   FA27                 OLDFLO: .BLKB   1               ;OLD FLOPPY DRIVE NUMBER
   FA28                 PCMD:   .BLKB   1               ;ACTUAL FLOPPY READ/WRITE CMD
   FA29                 ORWCMD: .BLKB   1               ;LAST R/W OUTPUT TO CMD REG
   FA2A                 DPHADR: .BLKB   2               ;DPH ADDRESS FOR CURRENT DISK
   FA2C                 APBADR: .BLKB   2               ;APB ADDRESS FOR CURRENT DISK
   FA2E                 WRTYPE: .BLKB   1               ;TYPE OF WRITE
   FA2F                 D3SNO:  .BLKB   1               ;CURRENT NO WAIT Z3S BYTE
   FA30                 D3SWT:  .BLKB   1               ;CURRENT WAIT Z3S BYTE
   FA31                 SAVADR: .BLKB   2               ;STD OR ALT DDB ADDRESS
   FA33                 MRML:   .BLKB   1               ;MACRO RETRY MAJOR LOOP
                        
                        
                        ;********************************************************
                        ; ERROR INFORMATION STORAGE. VARIOUS ROUTINES USE THIS
                        ; AREA TO STORE KEY VARIABLES RELATING TO THE Z3S
                        ; CONTROLLER AND THE 179X CHIP. 
                        ;********************************************************
                        
   FA34                 EINFO:
   FA34                 ITRACK: .BLKB   1               ;LAST INPUT FROM TRACK REG
   FA35                 ISECT:  .BLKB   1               ;LAST INPUT FROM SECTOR REG
   FA36                 ISTAT:  .BLKB   1               ;LAST INPUT FROM STATUS REG
   FA37                 ACTIVE: .BLKB   1               ;SHOWS WHICH ROUTINE HAD ERROR
   FA38                 OD3S:   .BLKB   1               ;LAST OUTPUT TO Z3S CTRL BYTE
   FA39                 OCMD:   .BLKB   1               ;LAST OUTPUT TO CMD REG
   FA3A                 SIDEID: .BLKB   1               ;LASE SIDE SELECTED
                        
   0007                 EILEN   ==      .-EINFO
                        
                        
                        
                        ;********************************************************
                        ;*   ALLOCATION VALUES FOR SELECTED DISKS ARE NEXT
                        ;********************************************************
                        
   FA3B                 ALOCSZ: .BLKB   4               ;BSH VALUE FOR 4 DRIVES
   FA3F                 ALOCA:  .BLKB   1               ;RECORDS/BLOCK FOR SELECTED DRIVE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 42




                        
                                ;UNALLOCATED PARAMETERS FOLLOW
                        
                        
   FA40                 UNACNT: .BLKB   1               ;UNALLOCATED RECORD COUNT
                        
   FA41                 UNADSK: .BLKB   1               ;      "     DISK #     
   FA42                 UNATRK: .BLKB   2               ;      "     TRACK #
   FA44                 UNASEC: .BLKB   2               ;      "     SECTOR #
                        
   FA46                 NEWSEC: .BLKB   2               ;CP/M SET SECTOR
                        
   FA48                 RSFLAG: .BLKB   1               ;READ SECTOR FLAG
   FA49                 READOP: .BLKB   1               ;READ = 0, WRITE = 1
   FA4A                 HSTACT: .BLKB   1               ;0 = HOST NOT ACTIVE
   FA4B                 HSTWRT: .BLKB   1               ;HOST WRITTEN FLAG
                        
                        
   FA4C                 HSTDSK: .BLKB   1
   FA4D                 HSTTRK: .BLKB   2
   FA4F                 HSTSEC: .BLKB   2
                        
   FA51                 SEKDSK: .BLKB   1
   FA52                 SEKTRK: .BLKB   2
   FA54                 SEKHST: .BLKB   2
                        
   0016                         UNALEN  ==      .-UNACNT
                        
                        
                        ;********************************************************
                        ; APB COPY FOR CURRENT DISK. THE APB CONTAINS SEVERAL
                        ; IMPORTANT BYTES NEEDED TO CONTROL THE ACTIVE DISK
                        ; DRIVE. THE EXACT LENGTH AND ORDERING OF THESE ENTRIES
                        ; IS CRITICAL, SO CHANGES MUST BE MADE WITH CARE. ONLY
                        ; THE FLAG BYTE HAS ANY MEANING FOR A HARD DISK.
                        ;********************************************************
                        
   FA56                 ATABLE:
   FA56                 SS0N:   .BLKB   1               ;SYSTEM TRACK Z3S CONTROL BYTES
   FA57                 SS0W:   .BLKB   1
   FA58                 SS1N:   .BLKB   1
   FA59                 SS1W:   .BLKB   1
   FA5A                 US0N:   .BLKB   1               ;USER TRACK Z3S CONTROL BYTES
   FA5B                 US0W:   .BLKB   1
   FA5C                 US1N:   .BLKB   1
   FA5D                 US1W:   .BLKB   1
   FA5E                 TRACK:  .BLKB   1               ;CURRENT TRACK
   FA5F                 SPEED:  .BLKB   1               ;DRIVE SEEK SPEED
   FA60                 FLAG:   .BLKB   1               ;FLAG BYTE
   FA61                 OFF:    .BLKB   2               ;NUMBER OF SYSTEM TRACKS
   FA63                 SSLEN:  .BLKB   1               ;SECTOR LENGTH, SYSTEM
   FA64                 SLRPS:  .BLKB   1               ;RECORDS PER SIDE, SYS TRACKS
   FA65                 USLEN:  .BLKB   1               ;SECTOR LENGTH, USER TRACKS
   FA66                 ULRPS:  .BLKB   1               ;RECORDS PER SIDE, USER TRACKS
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 43




   0011                 ALEN    ==      .-ATABLE        ;ATABLE LENGTH
                        
   FA67                 CHKRDS: .BLKB   1               ;READ CHECK RETRIES
   FA68                 DEDMA:  .BLKB   2               ;DE FOR DMA OP.
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK APBS, DPBS AND TRANSLATE TABLES. THE APB
                        ; FOR EACH DRIVE IS HERE, FOLLOWED BY THE DPB, FOLLOWED
                        ; BY THE TRANSLATE TABLE. EXTERNAL ROUTINES NEEDING TO
                        ; ACCESS THE APB ASSUME THAT IT IMMEDIATELY PRECEDES
                        ; THE DPB.
                        ;********************************************************
                        
   FA6A                 APB0:   .BLKB   ALEN            ;AUXILIARY PARAMETER BLOCK
   FA7B                 DPB0:   .BLKB   15              ;DISK PARAMETER BLOCK
                        
   000F                 DPBLEN  ==      .-DPB0
                        
   FA8A                 TRANS0: .BLKB   88              ;TRANSLATE TABLE
                        
   0058                 TRALEN  ==      .-TRANS0
   0078                 APBDIS  ==      .-APB0
                        
                        
   FAE2                 APB1:   .BLKB   ALEN
   FAF3                 DPB1:   .BLKB   15
   FB02                 TRANS1: .BLKB   88
                        
                        
   FB5A                 APB2:   .BLKB   ALEN
   FB6B                 DPB2:   .BLKB   15
   FB7A                 TRANS2: .BLKB   88
                        
                        
   FBD2                 APB3:   .BLKB   ALEN
   FBE3                 DPB3:   .BLKB   15
   FBF2                 TRANS3: .BLKB   88
                        
                        
                        
                        
                        ;********************************************************
                        ; CP/M WORK AREA. USED BY CP/M FOR DIRECTORY
                        ; OPERATIONS, FLOPPY DISK ALLOCATION VECTORS,
                        ; AND FLOPPY DISK CHANGED DISK CHECKSUMS.
                        ;********************************************************
                        
   FC4A                 DIRBUF: .BLKB   128             ;DIRECTORY OPERATION BUFFER
                        
   FCCA                 ALV0:   .BLKB   108             ;ALLOCATION VECTOR
   FD36                 CSV0:   .BLKB   64              ;CHECKSUM VECTOR
                        
   FD76                 ALV1:   .BLKB   108
   FDE2                 CSV1:   .BLKB   64






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 44




                        
                        
   FE22                 ALV2:   .BLKB   108
   FE8E                 CSV2:   .BLKB   64
                        
   FECE                 ALV3:   .BLKB   108
   FF3A                 CSV3:   .BLKB   64
                        
   FF7A                 LASLOC:
   0967                 WRKSP   ==      .-HSTBUF
                        
                        ; END OF WORK AREA.
                        
   3180                 OFFST   ==      1F80H -BIOS
                        
                        
                        
                                .IF1,[
                        
                        ;//MODIFIED TO PRINT HOW FAR OUT YOU ARE.
                        
                                .DEFINE BADMEM[XX]=[
                                .PRNTX  / !! ** BIOS EXCEEDS MEMORY SIZE BY XX BYTES, SET 'BIOSIZ' LARGER ** !!/        ]
                        
                                .DEFINE OKMEM[XX]=[
                                .PRNTX  /XX   BYTES OF MEMORY LEFT BY BIOS/     ]
                        
                                .DEFINE SBIOS[XX]=[
                                .PRNTX  /XX IS START OF BIOS/                   ]
                        
                                .DEFINE LASTM[XX]=[
                                .PRNTX  /XX IS LAST LOCATION USED/              ]
                        
                                .DEFINE BDOSL[XX]=[
                                .PRNTX  /XX IS START OF BDOS/                   ]
                        
                                .DEFINE CCPL[XX]=[
                                .PRNTX  /XX IS START OF CCP/                    ]
                        
                                .DEFINE LEFMEM[XX]=[
                                .PRNTX  /XX IS 1st FREE ADDRESS AFTER BIOS/     ]
                        
                                .DEFINE WORKSP[XX]=[
                                .PRNTX  /XX BYTES IS WORKSPACE USED BY BIOS/]
                        
                                .DEFINE OFFSET[XX]=[
                                .PRNTX  /XX IS BIOS OFFSET /                    ]
                        
                        
                                .DEFINE MOVCPM[XX]=[
                                .PRNTX  /XX   IS MOVCPM VALUE /                 ]
                        
                                .DEFINE CODEND[XX]=[
                                .PRNTX  /XX IS LAST BIOS RUNTIME CODE OR STATIC DATA LOCATION /]
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 45




                                .DEFINE WRKEND[XX]=[
                                .PRNTX  /XX IS END OF DISCARDED INITIALIZATION CODE /   ]
                        
                                .DEFINE CIOLOC[XX]=[
                                .PRNTX  /XX IS CIOTB START IN SYSGENABLE MEMORY IMAGE/  ]
                        
                                .IFG    (.-BIOS)-(6*256+BIOSIZ*1024),[
                        
                                BADMEM  \((.-BIOS)-(6*256+BIOSIZ*1024))
                        
                                .RADIX  16
                                CCPL    \CCP
                                BDOSL   \BDOS
                                SBIOS   \BIOS
                                CODEND  \HSTBUF-1
                                WRKEND  \BIOEND
                                CIOLOC  \(CSTAT+OFFST)
                                .RADIX  10
                                WORKSP  \WRKSP
                                .RADIX  16
                                LASTM   \.-1
                                LEFMEM  \.
                                OFFSET  \OFFST
                                .RADIX  10
                                MOVCPM  \MOVEIT
                        
                                        ][
                        
                                OKMEM   \ (MSIZ*1024)-LASLOC
                        
                        
                                .RADIX  16
                                CCPL    \CCP
                                BDOSL   \BDOS
                                SBIOS   \BIOS
                                CODEND  \HSTBUF-1
                                WRKEND  \BIOEND
                                CIOLOC  \(CSTAT+OFFST)
                                .RADIX  10
                                WORKSP  \WRKSP
                                .RADIX  16
                                LASTM   \.-1
                                LEFMEM  \.
                                OFFSET  \OFFST
                                .RADIX  10
                                MOVCPM  \MOVEIT
                        
                        
                                        ]
                                        ]
                        
                        
                        
                        
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 46




                                .END

























































                                                                                    