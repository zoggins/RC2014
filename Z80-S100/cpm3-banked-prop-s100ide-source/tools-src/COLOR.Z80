;xxxxxxxxxxx 80 COLUMN PAGE WIDTH MARKER  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

;TV Dazzler 2 Color display test program  	COLOR.COM	
;
;COPYRIGHT 11/14/2016 8:32 PM BY JAMES T WALKER, WALKER SYSTEMS
;PROGRAM MAY BE COPIED OR REUSED IF THIS NOTICE REMAINS IN IT

;Joystick 1 pushbutton 4 is used for program exit, or connect P11 pin 4 to pin 6,
;or use cntrl-C on keyboard to go to CPM.
;
;joystick button usage:
;JS1 SW1: press for bit map display
;JS1 SW2: press for 32x32 display
;JS1 SW3: press for gray scale display
;JS1 SW4: press to exit program
;If JS1 SW1 is pressed:
;JS2 SW1: press for bit map color low intensity
;JS2 SW2: press for bit map color blue disable 
;JS2 SW3: press for bit map color green disable
;JS2 SW4: press for bit map color red disable
;If JS1 SW1 is not pressed:
;JS2 SW1: press to display using alternate color map
;JS2 SW2: press to display second page
;
;NOTE: THE INCREASING X ADDRESS ON DISPLAY IS IN DIRECTION TO RIGHT
;      THE INCREASING Y ADDRESS ON DISPLAY IS IN DOWNWARDS DIRECTION
;	
;
;REGISTER B AND C ARE USED FOR SCRATCH AS NEEDED
;
;SAVED X VALUE IN E REGISTER, Y VALUE IN D REGISTER
;DE IS USED TO GENERATE HL FOR EACH PIXEL PLOTTED
;
;HL REGISTER IS POINTER TO TV DAZZLER DISPLAY MEMORY
;
;DESIRED HL CONTENTS ARE: (DUE TO DISPLAY BEING IN QUADRANTS)
;BIT LOCN       H7  H6  H5  H4  H3  H2  H1  H0  L7  L6  L5  L4  L3  L2  L1  L0
;DATA CONTENT    0   0   0   0   0  Y5  X5  Y4  Y3  Y2  Y1  Y0  X4  X3  X2  X1
;WILL ADD OFFSET 0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
;
;ROUTINE TO INITIALIZE REGISTERS

FALSE		EQU	0
TRUE		EQU	NOT FALSE

CPM	EQU	TRUE	;IF FALSE OUTPUT DIRECT TO XZ0 MONITOR
;
ORG 0100H		;SET CODE START AT 100H FOR .COM PROGRAM IN CPM

START:	LD A,84H	;TURN TVD ON, START MEMORY AREA AT 0800H
	OUT 0EH,A	;SEND TO ADDRESS PORT
	LD A,30H	;SET FOR 64X64 COLOR DISPLAY
	OUT 0FH,A	;SEND TO CONTROL PORT
	LD A,00H	;CLEAR EXTRA PORT TO USE MAIN PAGE AND ORIGINAL COLORS
	OUT 18H,A	;SET SW1=00001100 (1 TO 8)FOR EXTRA PORT ADDRESS 18H OUT
	LD SP,07FEH	;SET STACK TOP AT 7FEH JUST BELOW DISPLAY
	CALL CLEAR	;ERASE THE SCREEN TO ALL BLACK
	LD DE,SIGNON	;POINT TO AND PRINT A WELCOME MESSAGE ON CONSOLE
	LD C,PRINT
	CALL PRMSG	;PRINT MESSAGE, RETURN
;;
;START OF SCREEN GENERATION ROUTINE
;
	LD DE,0000H	;POINT TO TOP LEFT CORNER OF SCREEN
			;ALL PIXEL LOCATIONS ARE IN DAZZLER COORDINATES
	LD B,00FH	;CODE FOR BLACK ON WHITE
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL COLPLT	;PLOT A RECTANGLE AND BINARY COLOR CODE SEG TWICE
;
	LD B,010H	;CODE FOR LIGHT RED ON BLACK
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL COLPLT	;PLOT A RECTANGLE AND BINARY COLOR CODE SEG TWICE
;
	LD B,020H	;CODE FOR LIGHT GREEN ON BLACK
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL COLPLT	;PLOT A RECTANGLE AND BINARY COLOR CODE SEG TWICE
;
	LD B,030H	;CODE FOR LIGHT YELLOW ON BLACK
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL COLPLT	;PLOT A RECTANGLE AND BINARY COLOR CODE SEG TWICE
;
	LD B,040H	;CODE FOR LIGHT BLUE ON BLACK
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL COLPLT	;PLOT A RECTANGLE AND BINARY COLOR CODE SEG TWICE
;
	LD B,050H	;CODE FOR LIGHT MAGENTA ON BLACK
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL COLPLT	;PLOT A RECTANGLE AND BINARY COLOR CODE SEG TWICE
;
	LD B,060H	;CODE FOR LIGHT CYAN ON BLACK
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL COLPLT	;PLOT A RECTANGLE AND BINARY COLOR CODE SEG TWICE
;
	LD B,070H	;CODE FOR GRAY ON BLACK
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL COLPLT	;PLOT A RECTANGLE AND BINARY COLOR CODE SEG TWICE
	CALL PAGE2	;PUT A LABEL AT TOP OF DISPLAY FOR PAGE 2
			;LEAVE THE REMAINDER LOOKING LIKE CONFETTI
;
;THIS LOOP IS USED TO MONITOR FOR EXIT AND SEND CONTROL DATA TO PORTS
;
LOOPX:
IF  CPM  
	LD	C,0BH	;See if CTRL-C was entered from CPM console FOR EXIT
	CALL	BDOS
	CP	A,01H	;01H if was CTRL-C entered, RETURN TO CPM
	JP	Z,EXIT	;TURN OFF DISPLAY FIRST
ENDIF	
	LD B,0		;CLEAR B REG WHERE WILL BUILD PORT 0FH DATA
	IN A,18H	;READ PUSHBUTTONS
	AND 02H		;MASK BIT 1 JS1 SW 2
	JR Z,PT2	;JUMP IF ZERO FOR 32X32 DISPLAY
	LD A,20H	;TO SET BIT 5 OF OUTPUT FOR 64X64 DISPLAY
	OR B		;SET BIT 5 IN B REG
	LD B,A
PT2:	IN A,18H	;READ PUSHBUTTONS
	AND 04H		;MASK BIT 2 JS1 SW 3
	JR Z,PT3	;JUMP IF ZERO FOR B&W DISPLAY
	LD A,10H	;TO SET BIT 4 OF OUTPUT FOR COLOR DISPLAY
	OR B		;SET BIT 4 IN B REG
	LD B,A
PT3:	IN A,18H	;READ PUSHBUTTONS
	AND 01H		;MASK BIT 0 JS1 SW 1 
	JR Z,PT4	;JUMP IF ZERO FOR BIT MAPPED DISPLAY
			;OTHERWISE LEAVE BIT 6 OF OUTPUT LOW FOR COLOR DISPLAY
	LD A,B		;GET FINAL COMPILED PORT DATA, BITS 0-3 AND 7 ARE ZERO
	OUT 0FH,A	;SEND PORT 0FH DATA
;
	LD B,0		;CLEAR DATA TO BE SENT TO PORT 18H (EXTRA PORT)
	IN A,18H	;READ PUSHBUTTONS
	AND 10H		;MASK BIT 4 JS2 SW 1
	JR NZ,PT5	;JUMP IF NOT PRESSED FOR STANDARD COLOR DISPLAY
	LD A,04H	;TO SET BIT 3 OF OUTPUT FOR ALTERNATE COLOR MAP DISPLAY
	OR B		;SET BIT 3 IN B REG
	LD B,A
PT5:	IN A,18H	;READ PUSHBUTTONS
	AND 20H		;MASK BIT 5 JS2 SW 2
	JR NZ,PT6	;JUMP IF NOT PRESSED FOR MAIN PAGE DISPLAY
	LD A,01H	;TO SET BIT 0 OF OUTPUT FOR SECOND PAGE DISPLAY
	OR B		;SET BIT 0 IN B REG
	LD B,A
PT6: LD A,B	
	 OUT 18H,A	;SEND CONTROL TO EXTRA PORT
			;MAKE SURE P18 JUMPERS 3-4 AND 31-32 HAVE BEEN REMOVED
			;AND U18 INSTALLED
	JR PTEX		;JUMP TO REMAINDER OF LOOP ROUTINE TO CHECK EXIT
;
PT4:	LD A,40H	;TO SET BIT 6 OF OUTPUT H TO DO BIT MAPPED DISPLAY
	OR B		;SET BIT 6 IN B REG
	LD B,A
	IN A,18H	;READ PUSHBUTTONS
	AND 10H		;MASK BIT 4 JS2 SW 1
	JR Z,PT7	;JUMP IF ZERO FOR LOW INTENSITY
	LD A,08H	;TO SET BIT 3 OF OUTPUT FOR HIGH INTENSITY
	OR B		;SET BIT 3 IN B REG
	LD B,A
PT7:	IN A,18H	;READ PUSHBUTTONS
	AND 20H		;MASK BIT 5 JS2 SW 2
	JR Z,PT8	;JUMP IF ZERO FOR NO BLUE
	LD A,04H	;TO SET BIT 2 OF OUTPUT FOR BLUE COLOR ON
	OR B		;SET BIT 2 IN B REG
	LD B,A
PT8:	IN A,18H	;READ PUSHBUTTONS
	AND 40H		;MASK BIT 6 JS2 SW 3
	JR Z,PT9	;JUMP IF ZERO FOR NO GREEN
	LD A,02H	;TO SET BIT 1 OF OUTPUT FOR GREEN COLOR ON
	OR B		;SET BIT 1 IN B REG
	LD B,A
PT9:	IN A,18H	;READ PUSHBUTTONS
	AND 80H		;MASK BIT 7 JS2 SW 4
	JR Z,PT10	;JUMP IF ZERO FOR NO RED
	LD A,01H	;TO SET BIT 0 OF OUTPUT FOR RED COLOR ON
	OR B		;SET BIT 0 IN B REG
	LD B,A
PT10:	LD A,B		;GET FINAL COMPILED PORT DATA
	OUT 0FH,A	;SEND PORT DATA

PTEX:	IN A,18H	;READ PUSHBUTTONS
	AND 08H		;EXIT IF BIT 3 JS1 SW4 IS PRESSED
	JP NZ,LOOPX	;LOOP IF NOT TO REFRESH PORTS AND CHECK AGAIN
EXIT:	LD A,00H	;TURN TVD OFF TO PREVENT MENTAL CLUTTER
	OUT 0EH,A	;SEND TO ADDRESS PORT
	JP 0		;JUMP TO ADDRESS ZERO FOR RETURN TO CPM 
;
;COLOR AND CODE PLOT ROUTINE FOR ONE ROW
;ENTER WITH B = COLOR CODES FOR THIS ROW
;
COLPLT:	LD HL,RECT	;GOING TO PLOT A COLOR RECTANGLE 4x6 ON 6x8 BACKGROUND
			;FOREGROUND COLOR IN UPPER HALF OF B REG
	CALL CHPLOT	;DO IT, DE IS LEFT AT TOP LEFT CORNER FOR NEXT CHAR
	CALL BINARY	;PLOT 'B' REGISTER UPPER NIBBLE WITH 4 BINARY DIGITS
	LD A,E		;GET X VALUE TO MOVE 4 PIXELS TO RIGHT
	ADD A,04H	;ADD 4
	LD E,A		;PUT BACK
	LD HL,RECT	;GOING TO PLOT A COLOR RECTANGLE 4x6 ON 6x8 BACKGROUND
	LD A,B		;CHANGE TO BRIGHT COLORS FOR FOREGROUND ONLY
	ADD A,080H
	LD B,A
	CALL CHPLOT	;DO IT, DE IS LEFT AT TOP LEFT CORNER FOR NEXT CHAR	
	CALL BINARY	;PLOT 'B' REGISTER UPPER NIBBLE WITH 4 BINARY DIGITS
			;NOW CHANGE DE REG TO POINT TO NEXT ROW START
	LD A,D		;GET Y VALUE
	ADD A,08H	;MOVE DOWN 8 PIXELS SO ROWS ARE ADJACENT
	LD D,A		;PUT BACK
	XOR A,A		;CLEAR A
	LD E,A		;SET X TO LEFT EDGE, NOW AT START FOR NEXT ROW
	RET
;
;PAGE 2 LABEL GENERATOR
;DE ADDRESS IS AT TOP LEFT CORNER OF PAGE 2 AT ENTRY TIME
;
PAGE2:	LD HL,CHARP	;POINT TO DEFINITION FOR 'P'
	LD B,0C0H	;PLOT BLUE ON BLACK
	CALL CHPLOT	;PLOT THE CHARACTER
	LD HL,CHARA	;POINT TO DEFINITION FOR 'A'
	LD B,0A0H	;PLOT GREEN ON BLACK
	CALL CHPLOT	;PLOT THE CHARACTER
	LD HL,CHARG	;POINT TO DEFINITION FOR 'G'
	LD B,0B0H	;PLOT YELLOW ON BLACK
	CALL CHPLOT	;PLOT THE CHARACTER
	LD HL,CHARE	;POINT TO DEFINITION FOR 'E'
	LD B,090H	;PLOT RED ON BLACK
	CALL CHPLOT	;PLOT THE CHARACTER
	LD HL,SPACE	;POINT TO DEFINITION FOR SPACE
	LD B,002H	;PLOT BLACK ON LIGHT GREEN
			;CREATE A BLACK SPACE WITH LIGHT GREEN VERT STRIPE AT RIGHT
	CALL CHPLOT	;PLOT THE CHARACTER
	LD HL,CHAR2	;POINT TO DEFINITION FOR '2'
	LD B,0D2H	;PLOT MAGENTA ON LIGHT GREEN
	CALL CHPLOT	;PLOT THE CHARACTER
	RET
;
;FAST SCREEN ERASE ROUTINE FOR DISPLAY MEMORY ASSIGNED 0800H TO 0FFFH
;THE SECOND PAGE OF MEMORY WILL NOT BE ERASED
;A BETTER ROUTINE WOULD HAVE THE START AS A DEFINED CONSTANT AND DO A CONSTANT AMOUNT 800H
;
CLEAR:	LD HL, 0800H	;SET DISPLAY MEMORY START ADDRESS IN HL
CLR:	LD A,00H	;TO CLEAR MEMORY TO 0 IN EACH NIBBLE
	LD (HL),A	;WRITE 00 TO MEMORY LOCATION IN HL
	INC HL		;MOVE TO NEXT LOCATION
	LD A,H		;GET UPPER ADDRESS BITS
	CP 10H		;ARE WE AT 1000H YET?
	JR C,CLR	;LOOP BACK TO DO MORE IF NOT, FALL THROUGH IF DONE
	RET
;
;ROUTINE TO PLOT A CHARACTER ON THE SCREEN
;ENTER WITH HL CONTAINING ADDRESS OF CHARACTER DEFINITION TABLE
;DE CONTAINING THE PIXEL ADDRESS OF THE TOP LEFT CORNER OF CHARACTER
;B CONTAINING THE PIXEL COLOR IN HIGH HALF AND BACKGROUND COLOR IN LOW HALF
;C IS USED FOR COUNTER, CHARACTER IS 6 PIXELS HIGH IN 8 PIXEL COLUMN
;
CHPLOT:	PUSH AF		;SAVE 'A' REG
	PUSH BC		;SAVE COLORS & C REG
	LD C,06H	;6 PIXEL COLUMNS IN A CHARACTER
			;LAST COLUMN OF EACH CHARACTER IS BACKGROUND
CHPL1:	PUSH DE		;SAVE Y:X VALUES
	LD A,(HL)	;GET A BYTE FROM THE CHARACTER TABLE
	CALL PIXPLT	;PLOT A BIT (MSB) IN THE BYTE AND INCREMENT Y
	CALL PIXPLT	;PLOT A BIT IN THE BYTE AND INCREMENT Y
	CALL PIXPLT	;PLOT A BIT IN THE BYTE AND INCREMENT Y
	CALL PIXPLT	;PLOT A BIT IN THE BYTE AND INCREMENT Y
	CALL PIXPLT	;PLOT A BIT IN THE BYTE AND INCREMENT Y
	CALL PIXPLT	;PLOT A BIT IN THE BYTE AND INCREMENT Y
	CALL PIXPLT	;PLOT A BIT IN THE BYTE AND INCREMENT Y
	CALL PIXPLT	;PLOT A BIT (LSB) IN THE BYTE AND INCREMENT Y
			;SKIP THE LSB SO COLUMN IS 7 PIXELS HIGH
	POP DE		;RESTORE Y:X VALUE
	INC E		;ADD ONE TO X TO GO TO NEXT PIXEL COLUMN
			;NOW DE POINTS TO TOP OF NEXT COLUMN
	INC HL		;POINT TO NEXT BYTE IN TABLE
	DEC C		;DECREMENT COLUMN COUNT
	JR NZ,CHPL1	;LOOP BACK IF MORE TO DO
	POP BC		;RESTORE
	POP AF		;RESTORE
	RET		;RETURN IF DONE
;
;PIXEL PLOT ROUTINE
;ENTER WITH PIXEL ADDRESS IN DE FOR Y:X, BOTH RIGHT JUSTIFIED 7:6 BIT BINARY
;HL AT ENTRY IS PRESERVED, B CONTAINS PLOT COLORS
;A CONTAINS 8 BIT STRING, ROTATED TO LEFT AT EXIT TIME
;A MSB = 1 TO PLOT FOREGROUND COLOR IN B, 0 TO PLOT BACKGROUND COLOR IN B
;
PIXPLT:	PUSH HL		;SAVE HL & BC SCRATCH REGISTERS ON STACK
	PUSH BC		;SO CAN BUILD MEMORY ADDRESS IN HL
	RLC A		;ROTATE A LEFT AND COPY MSB INTO CY 
	PUSH AF		;SAVE ROTATED 'A' REG FOR NEXT TIME
	LD A,B		;GET COLORS
	JP C,PPLT2	;JUMP IF MSB WAS A '1'
	AND 0FH		;MASK BACKGROUND COLOR
	JR PPLT3	;JUMP TO PLOT
PPLT2:	AND 0F0H	;MASK FOREGROUND COLOR
	RRC A		;MOVE COLOR TO LOW NIBBLE
	RRC A
	RRC A
	RRC A		
PPLT3:	LD B,A		;NOW COLOR TO USE IS IN LOW NIBBLE OF B REG
	CALL DETOHL	;CONVERT PIXEL ADDRESS IN DE TO MEMORY ADDRESS IN HL
			;AND LEAVE NIBBLE ADDRESS XN IN CY
	LD A,(HL)	;GET BYTE CONTAINING PIXEL TO PLOT
	JP NZ,PPLT1	;JUMP IF XN=1 (Z FLAG = 0)
	AND 0F0H	;CLEAR LOWER NIBBLE OF 'A' REG SINCE XN = 0
	OR B		;AND PUT CODE FOR COLOR THERE
	JR PIXE		;GO TO EXIT
PPLT1:	RLC B		;GET COLOR IN LOW HALF
	RLC B		;ROTATE TO UPPER HALF
	RLC B
	RLC B
	AND 0FH		;CLEAR UPPER NIBBLE OF 'A' REG
	OR B		;AND PUT CODE FOR COLOR THERE
PIXE:	LD (HL),A	;WRITE TO MEMORY
	INC D		;MOVE DOWNWARDS TO NEXT PIXEL ROW
	POP AF		;RESTORE SHIFTED BINARY BEING WRITTEN
	POP BC		;RESTORE COLOR PAIR
	POP HL		;RESTORE REGISTERS
	RET
;
;ROUTINE TO TRANSFORM DE REG TO DESIRED MEMORY ADDRESS IN HL
;AND ADD OFFSET OF 800H FOR FIRST DISPLAY MEMORY BYTE LOCATION
;ENTER WITH D CONTAINING 7 BIT Y ADDRESS (PAGE 2 IS DIRECTLY AFTER PAGE 1)
;AND E CONTAINING 6 BIT X ADDRESS
;BOTH ARE RIGHT JUSTIFIED
;EXIT WITH HL CONTAINING THE BYTE ADDRESS TO MODIFY AND Z CLEAR IF XN = 1.
;NZ = XN = X0, H FOR RIGHT HALF OF BYTE
;
;DE ENTRY REGISTER ORIGINAL CONTENTS ARE ABSOLUTE BINARY 0 TO 63:
;BIT LOCN       D7  D6  D5  D4  D3  D2  D1  D0  E7  E6  E5  E4  E3  E2  E1  E0
;DATA CONTENT   XX  Y6  Y5  Y4  Y3  Y2  Y1  Y0  XX  XX  X5  X4  X3  X2  X1  XN
;
;DESIRED HL CONTENTS ARE: (DUE TO DISPLAY BEING IN QUADRANTS)
;BIT LOCN       H7  H6  H5  H4  H3  H2  H1  H0  L7  L6  L5  L4  L3  L2  L1  L0
;DATA CONTENT    0   0   0   0  Y6  Y5  X5  Y4  Y3  Y2  Y1  Y0  X4  X3  X2  X1
;WILL ADD OFFSET 0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
;AND XN IS SAVED IN C REG BIT 0
;
;
DETOHL:	PUSH DE		;SAVE Y:X ADDRESS
	LD A,E		;GET BINARY X VALUE 0 TO 63
	AND 03FH	;MASK BOTTOM 6 BITS TO PREVENT WRAP AROUND
	LD E,A		;SAVE FOR LATER
	AND 01EH 	;MASK 4 BITS X4-X1
	SRA A		;DISCARD XN BIT, 0 FILL MSB
	LD L,A		;AND PUT IN L REG
	LD A,E		;GET X ADDRESS BITS AGAIN
	AND 20H		;MASK X5 IN E5 LOCATION
	RRC A		;ROTATE TO H1 LOCATION IN A REG
	RRC A
	RRC A
	RRC A
	LD H,A		;AND SAVE IN H REG, NOW HAVE X VALUES IN PROPER LOCATION
	LD A,D		;GET BINARY Y VALUE 0 TO 63 (PAGE 1) AND 64-127 (PAGE2)
	AND 0FH		;MASK LOW 4 BITS Y3-Y0
	SLA A		;ROTATE ADDRESS LEFT 4 BITS
	SLA A		;SO Y3 IS IN L7 LOCATION
	SLA A
	SLA A
	OR L		;AND PUT IN TOP 4 BITS IN L REG
	LD L,A		;SAVE FINAL L REG VALUE
	LD A,D		;GET Y ADDRESS BITS AGAIN
	AND 10H		;MASK Y4 IN D4 LOCATION
	RRC A		;ROTATE TO H0 LOCATION IN A REG
	RRC A
	RRC A
	RRC A
	OR H		;MERGE WITH PREVIOUS X5 VALUE IN H1
	LD H,A		;SAVE X5 AND Y4
	LD A,D		;GET Y ADDRESS BITS AGAIN
	AND 60H		;MASK Y5 IN D5 AND Y6 (PAGE 2) IN D6 LOCATION
	RRC A		;ROTATE TO H2 AND H3 LOCATIONS IN A REG
	RRC A
	RRC A
	OR H		;MERGE WITH PREVIOUS X5 AND Y4 VALUES IN H REG
	ADD A,08H	;ADD MEMORY START ADDRESS OFFSET for 800H
	LD H,A		;SAVE FINAL H REG VALUE
	LD A,E		;GET BINARY X VALUE AGAIN
	AND 01H		;MASK XN VALUE IN LSB
			;EXIT WITH Z FLAG CLEAR IF XN = 1
	POP DE		;RESTORE DE ADDRESS
	RET		;ALL DONE
;
;ROUTINE TO PLOT 4 BIT BINARY NUMBER AS HORIZONTAL STRING OF 0 AND 1 CHARACTERS
;ENTER WITH 4 BIT NIBBLE TO PLOT AS 0/1 CHARACTERS IN LOW HALF OF 'A' REG, 
;HL IS CHARACTER PLOT DEFINITION STRING ADDRESS, C IS SCRATCH FOR LOOP COUNTER
;B CONTAINS THE PIXEL COLOR IN HIGH HALF AND BACKGROUND COLOR IN LOW HALF
;DE IS UPPER LEFT PIXEL OF FIRST CHAR LOCATION
;
BINARY:	LD C,04H	;GOING TO PLOT 4 BINARY DIGITS
	LD A,B		;PUT FOREGROUND NIBBLE FROM B IN UPPER HALF OF 'A' REG
BLOOP:	RLC A		;PUT VALUE OF MSB IN CARRY
	LD HL,CHAR1	;POINT TO STRING TO PLOT A '1'
	JP C,BIN1	;JUMP IF A '1'
	LD HL,CHAR0	;VALUE IS 0, POINT TO STRING TO PLOT A '0'
BIN1:	CALL CHPLOT	;DO IT, EXIT DE IS AT TOP LEFT CORNER FOR NEXT CHAR,
			;A REG IS PRESERVED
	DEC C		;DECREMENT LOOP VALUE
	JP NZ,BLOOP	;LOOP BACK IF MORE BITS TO DO
	RET		;OTHERWISE RETURN
;
;ROUTINE TO PRINT MESSAGES
;ENTER WITH DE CONTAINING ADDRESS OF FIRST CHARACTER OF MESSAGE, END WITH '$'
;
PRMSG:	PUSH HL
	PUSH AF
	
IF	CPM  
	LD C,PRINT
	CALL BDOS
ELSE
CONOUT:	IN  A,(CONSTAT)
	AND A,04H			;Is port ready
	JP  Z,CONOUT
	LD  A,(DE)
	OUT (CONDATA),A
	INC DE
	LD  A,(DE)
	CP  A,'$'
	JP  NZ,CONOUT
ENDIF
	POP AF
	POP HL
	RET
;
;CONSOLE EQUATES
;
CONSTAT EQU	0	;Console status bits (Hardware specific, check your system)
CONDATA EQU	1	

; CPM BDOS EQUATES
; 
PRINT	EQU 9
BDOS	EQU 5
CR	EQU 0DH
LF 	EQU 0AH
;
;MESSAGES
;
SIGNON:	DB CR,LF,'Walker Systems TV Dazzler II color display test program.',CR,LF
	DB 'Four bit binary code for each color is displayed to right of color example.',CR,LF
	DB 'Program runs once to write display and loops with pattern left in SRAM.',CR,LF,LF
	DB 'All displayed data nibbles have the MSB at the left.',CR,LF,LF
	DB 'Press joystick 1 button 4 or connect P11 pin 4 to pin 6 to exit',CR,LF
	DB 'Program exit for CPM can also use cntrl-C on keyboard',CR,LF,LF
	DB 'joystick button usage:',CR,LF
	DB 'JS1 SW1: press for bit map display',CR,LF
	DB 'JS1 SW2: press for 32x32 display',CR,LF
	DB 'JS1 SW3: press for gray scale display',CR,LF
	DB 'JS1 SW4: press to exit program',CR,LF
	DB 'Following apply if JS1 SW1 is pressed:',CR,LF
	DB 'JS2 SW1: press for bit map color low intensity',CR,LF
	DB 'JS2 SW2: press for bit map color blue disable',CR,LF 
	DB 'JS2 SW3: press for bit map color green disable',CR,LF
	DB 'JS2 SW4: press for bit map color red disable',CR,LF
	DB 'Following apply if JS1 SW1 is not pressed:',CR,LF
	DB 'P18 jumpers 3-4 and 31-32 must be removed and U18 installed.',CR,LF
	DB 'JS2 SW1: press to display using alternate color map',CR,LF
	DB 'JS2 SW2: press to display second page',CR,LF
	DB 'JS2 SW3 and SW4 are not used in color mode',CR,LF
	DB '$'
;
;CHARACTER PLOT PIXEL DEFINITIONS
;CHARACTERS ARE 5 COLUMNS BY 6 ROWS IN A 6 BY 8 BLOCK
;BITS ARE: MSB = TOP PIXEL, LSB = BOTTOM PIXEL
;BYTES ARE: CHARACTER COLUMNS FROM LEFT TO RIGHT
;IF BIT = H, USE FOREGROUND COLOR, USE BACKGROUND FOR BIT = L 
;
CHAR0:	DB 03CH, 042H, 042H, 042H, 03CH, 000H
CHAR1:	DB 000H, 022H, 07EH, 002H, 000H, 000H
CHARP:	DB 0FEH, 090H, 090H, 090H, 060H, 000H
CHARA:	DB 03EH, 048H, 088H, 048H, 03EH, 000H
CHARG:	DB 07CH, 082H, 092H, 092H, 05CH, 000H
CHARE:	DB 0FEH, 092H, 092H, 092H, 082H, 000H
SPACE:	DB 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 000H	;VERT BACKGROUND STRIPE AT RIGHT EDGE
CHAR2:	DB 022H, 046H, 04AH, 052H, 022H, 000H
RECT:	DB 000H, 07EH, 07EH, 07EH, 07EH, 000H
;
;PROGRAM END   >>>>>>>>>>>>>>>







