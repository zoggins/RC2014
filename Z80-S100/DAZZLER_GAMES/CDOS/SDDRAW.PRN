CROMEMCO CDOS Z80 ASSEMBLER version 02.15		     PAGE 0001


                   0001 ;	THIS PROGRAM INPUTS COORDINATE DATA FROM THE D+
			7A JOYSTICK 
                   0002 ;	AND DRAWS IN THE SUPERDAZZLER MEMORY AREA 4300 
			TO FFFF HEX
                   0003 ;	OPERATION IS THE SAME AS DAZZLE DOODLE
                   0004 ;	REGISTER USAGE: BC-X AXIS CURSOR LOCATION   D4-
			D7 ONLY IN C REG
                   0005 ;			DE-Y AXIS CURSOR LOCATION   D4-
			D7 ONLY IN E REG
                   0006 ;			C LOWER 4 BITS ARE CURSOR FLASH
			 TIMER (INCR AT 60 HZ)
                   0007 ;			E LOWER 4 BITS ARE DATA SAVE RE
			G FOR CURSOR LOCATION
                   0008 ;			NO RAM DATA USAGE EXCEPT FOR DI
			SPLAY AREA 4300-FFFF
                   0009 ;	THIS PROGRAM CAN EXECUTE FROM ROM AT 0100
                   0010 ;
0000               0011 	ORG 100H
0100  3EC8         0012 	LD A,0C8H
0102  D382         0013 	OUT 82H,A
0104  3E00         0014 	LD A,0H
0106  D383         0015 	OUT 83H,A	;NOW ARE SET FOR 48K MODE COLOR
0108  0600         0016 MAP:	LD B,0H	;DATA CODE COUNT  FOR SETTING THE MAP R
			AM
010A  0E00         0017 LOOP1:	LD C,0H
010C  1600         0018 	LD D,0H
                   0019 ;	DATA REPRESENTATION:  D0(LSB)-RED  D1-GREEN  D2
			-BLUE  D3-ZERO
010E  78           0020 	LD A,B
010F  E601         0021 	AND 01H
0111  CA1801       0022 	JP Z,K1
0114  79           0023 	LD A,C
0115  F6F0         0024 	OR 0F0H
0117  4F           0025 	LD C,A
0118  78           0026 K1:	LD A,B
0119  E602         0027 	AND 02H
011B  CA2201       0028 	JP Z,K2
011E  7A           0029 	LD A,D
011F  F60F         0030 	OR 0FH
0121  57           0031 	LD D,A
0122  78           0032 K2:	LD A,B
0123  E604         0033 	AND 04H
0125  CA2C01       0034 	JP Z,K3
0128  7A           0035 	LD A,D
0129  F6F0         0036 	OR 0F0H
012B  57           0037 	LD D,A
012C  79           0038 K3:	LD A,C
012D  B0           0039 	OR B
012E  D380         0040 	OUT 80H,A
0130  7A           0041 	LD A,D
0131  D381         0042 	OUT 81H,A
0133  78           0043 	LD A,B
0134  3C           0044 	INC A
0135  FE10         0045 	CP A,10H
0137  47           0046 	LD B,A
0138  C20A01       0047 	JP NZ,LOOP1
013B  3E02         0048 	LD A,02H
CROMEMCO CDOS Z80 ASSEMBLER version 02.15		     PAGE 0002


013D  D340         0049 	OUT 40H,A	;TURN ON DAZZLER MEMORY BANKS (
			THIS ALLOWS KEEPING
                   0050 ;			 THEM OFF WHEN MONITOR STARTS S
			O STACK IS NOT IN
                   0051 ;			 THE DISPLAY AREA)
013F  0100A0       0052 	LD BC,0A000H	;SET THE INITIAL CURSOR POSITIO
			N
0142  110080       0053 	LD DE,8000H
                   0054 ;
                   0055 ;	ROUTINE TO REMOVE CURSOR AND RESTORE PLOT POINT
                   0056 ;
0145  00           0057 START:	NOP
0146  DB82         0058 L1:	IN A,82H	;GET SD STATUS
0148  E640         0059 	AND 40H		;MASK VSYNC BIT
014A  C24601       0060 	JP NZ,L1	;LOOP IF HIGH
014D  DB82         0061 L2:	IN A,82H
014F  E640         0062 	AND 40H
0151  CA4D01       0063 	JP Z,L2		;LOOP IF LOW   PROGRAM STARTS W
			HEN VSYNC GOES HIGH
0154  DB18         0064 	IN A,18H	;GET SWITCHES
0156  E601         0065 	AND 01H
0158  CA3202       0066 	JP Z,CLEAR	;JUMP TO CLEAR SCREEN
015B  60           0067 	LD H,B
015C  6A           0068 	LD L,D		;CREATE CURRENT ADDRESS IN HL
015D  79           0069 	LD A,C
015E  E680         0070 	AND 80H		;GET BYTE HALF
0160  C27101       0071 	JP NZ,K6	;JUMP FOR UPPER BYTE HALF(D4-D7
			)
0163  7E           0072 	LD A,(HL)
0164  E6F0         0073 	AND 0F0H
0166  67           0074 	LD H,A
0167  7B           0075 	LD A,E
0168  E60F         0076 	AND 0FH		;RECOVER PLOT POINT
016A  B4           0077 	OR H
016B  60           0078 	LD H,B
016C  6A           0079 	LD L,D
016D  77           0080 	LD (HL),A	;RESTORE POINT IN MEMORY
016E  C38001       0081 	JP K7
0171  7E           0082 K6:	LD A,(HL)	;GET MEMORY DATA
0172  E60F         0083 	AND 0FH
0174  67           0084 	LD H,A
0175  7B           0085 	LD A,E
0176  E60F         0086 	AND 0FH
0178  07           0087 	RLCA
0179  07           0088 	RLCA
017A  07           0089 	RLCA
017B  07           0090 	RLCA
017C  B4           0091 	OR H
017D  60           0092 	LD H,B
017E  6A           0093 	LD L,D
017F  77           0094 	LD (HL),A
0180  DB18         0095 K7:	IN A,18H
0182  E610         0096 	AND 010H	;MASK 2ND JOYSTICK BUTTONS
0184  CA6A02       0097 	JP Z,COLOR	;JUMP TO CHANGE COLOR MAP CONTE
			NTS
                   0098 ;
                   0099 ;CALCULATION OF NEW PLOT POINT IN MEMORY SPACE WITH 12 
CROMEMCO CDOS Z80 ASSEMBLER version 02.15		     PAGE 0003


			BIT ACCURACY
                   0100 ;
0187  DB19         0101 CALC:	IN A,19H	;GET DELTA X
0189  E6F0         0102 	AND 0F0H
018B  6F           0103 	LD L,A
018C  2600         0104 	LD H,0H
018E  E680         0105 	AND 80H		;EXTEND SIGN
0190  CA9501       0106 	JP Z,K8
0193  26FF         0107 	LD H,0FFH
0195  09           0108 K8:	ADD HL,BC	;CALCULATE NEW X COORDINATE
0196  7C           0109 	LD A,H
0197  FE00         0110 	CP 0H
0199  C2A101       0111 	JP NZ,K9
019C  2643         0112 	LD H,43H
019E  C3A801       0113 	JP K10
01A1  FE43         0114 K9:	CP 43H
01A3  D2A801       0115 	JP NC,K10
01A6  26FF         0116 	LD H,0FFH	;IF A<43, SETS H TO FF
01A8  44           0117 K10:	LD B,H
01A9  4D           0118 	LD C,L		;PUT NEW X VALUE BACK IN BC
01AA  DB1A         0119 	IN A,1AH	;GET DELTA Y
01AC  2F           0120 	CPL
01AD  3C           0121 	INC A		;INVERT Y AXIS JOYSTICK MOTION
01AE  E6F0         0122 	AND 0F0H
01B0  6F           0123 	LD L,A
01B1  2600         0124 	LD H,0H
01B3  E680         0125 	AND 80H
01B5  CABA01       0126 	JP Z,K11
01B8  26FF         0127 	LD H,0FFH
01BA  29           0128 K11:	ADD HL,HL	;MULTIPLY DELTA Y BY TWO
01BB  19           0129 	ADD HL,DE	;CALCULATE NEW Y VALUE
01BC  7C           0130 	LD A,H
01BD  FEF1         0131 	CP 0F1H
01BF  DACB01       0132 	JP C,K12
01C2  2600         0133 	LD H,0H
01C4  FEFF         0134 	CP 0FFH
01C6  DACB01       0135 	JP C,K12
01C9  26F0         0136 	LD H,0F0H
01CB  54           0137 K12:	LD D,H
01CC  5D           0138 	LD E,L		;PUT NEW Y VALUE IN DE
                   0139 ;
                   0140 ;ROUTINE TO PUT CURSOR AT NEW POINT AND DRAW ON SAVED P
			OINT
                   0141 ;
01CD  79           0142 	LD A,C		;INCREMENT CURSOR COUNTER
01CE  E60F         0143 	AND 0FH		;IN LOWER C REGISTER HALF
01D0  3C           0144 	INC A
01D1  67           0145 	LD H,A
01D2  79           0146 	LD A,C
01D3  E6F0         0147 	AND 0F0H
01D5  B4           0148 	OR H
01D6  4F           0149 	LD C,A
01D7  60           0150 	LD H,B		;CONSTRUCT CURRENT ADDRESS
01D8  6A           0151 	LD L,D
01D9  7E           0152 	LD A,(HL)
01DA  6F           0153 	LD L,A
01DB  79           0154 	LD A,C		;POINT DATA IS IN L
CROMEMCO CDOS Z80 ASSEMBLER version 02.15		     PAGE 0004


01DC  E680         0155 	AND 80H		;MASK BYTE HALF
01DE  C20602       0156 	JP NZ,K14	;JUMP IF UPPER HALF
01E1  7D           0157 	LD A,L
01E2  E60F         0158 	AND 0FH		;MASK LOWER HALF TO SAVE IN H
01E4  67           0159 	LD H,A
01E5  DB18         0160 	IN A,18H	;GET SWITCHES
01E7  2F           0161 	CPL		;INVERT FOR TRUE LOGIC
01E8  E60E         0162 	AND 0EH		;MASK COLOR BITS
01EA  0F           0163 	RRCA		;PUT IN LSB'S
01EB  B4           0164 	OR H		;MERGE WITH SAVE POINT
01EC  67           0165 	LD H,A
01ED  7B           0166 	LD A,E
01EE  E6F0         0167 	AND 0F0H	;MASK Y COUNT LSB'S
01F0  B4           0168 	OR H		;MERGE WITH SAVE POINT
01F1  5F           0169 	LD E,A		;RESTORE E REGISTER
01F2  79           0170 	LD A,C
01F3  E608         0171 	AND 08H		;MASK CURSOR COUNT MSB
01F5  C2FE01       0172 	JP NZ,K13
01F8  7D           0173 	LD A,L		;GET DATA BYTE
01F9  E6F0         0174 	AND 0F0H	;ZERO LOWER HALF
01FB  C32C02       0175 	JP K16
01FE  7D           0176 K13:	LD A,L
01FF  F60F         0177 	OR 0FH		;SET D0-D2
0201  E6F7         0178 	AND 0F7H	;LEAVE D3 CLEAR
0203  C32C02       0179 	JP K16
0206  7D           0180 K14:	LD A,L		;ROUTINE TO DRAW IN UPPER BYTE 
			HALF
0207  E6F0         0181 	AND 0F0H	;MASK UPPER HALF TO SAVE
0209  0F           0182 	RRCA
020A  0F           0183 	RRCA
020B  0F           0184 	RRCA
020C  0F           0185 	RRCA
020D  67           0186 	LD H,A		;SAVE IN LOWER HALF OF H
020E  DB18         0187 	IN A,18H	;GET SWITCHES
0210  2F           0188 	CPL
0211  E60E         0189 	AND 0EH
0213  0F           0190 	RRCA
0214  B4           0191 	OR H
0215  67           0192 	LD H,A		;NEW POINT VALUE IN H
0216  7B           0193 	LD A,E
0217  E6F0         0194 	AND 0F0H	;MASK Y COUNT LSB'S
0219  B4           0195 	OR H
021A  5F           0196 	LD E,A
021B  79           0197 	LD A,C
021C  E608         0198 	AND 08H
021E  C22702       0199 	JP NZ,K15	;JUMP IF CURSOR IS ON
0221  7D           0200 	LD A,L		;GET DATA BYTE
0222  E60F         0201 	AND 0FH		;ZERO UPPER HALF
0224  C32C02       0202 	JP K16
0227  7D           0203 K15:	LD A,L
0228  F6F0         0204 	OR 0F0H		;SET UPPER HALF
022A  E67F         0205 	AND 7FH		;CLEAR MSB
022C  60           0206 K16:	LD H,B
022D  6A           0207 	LD L,D
022E  77           0208 	LD (HL),A	;PLOT POINT WITH CURSOR IN SCRE
			EN MEMORY
022F  C34501       0209 	JP START
CROMEMCO CDOS Z80 ASSEMBLER version 02.15		     PAGE 0005


                   0210 ;
                   0211 ;	ROUTINE TO CLEAR SCREEN AND RESET COLOR MAP
                   0212 ;	TURNS OFF DMA DURING SCREEN CLEAR OPERATION TO 
			SPEED COMPUTATION
                   0213 ;
0232  3E00         0214 CLEAR:	LD A,0H
0234  D382         0215 	OUT 82H,A	;TURN OFF DMA
0236  210040       0216 	LD HL,4000H
0239  3E00         0217 K17:	LD A,0H
023B  77           0218 	LD (HL),A	;CLEARING SUBDIVIDE BITS
023C  23           0219 	INC HL
023D  7C           0220 	LD A,H
023E  FE43         0221 	CP 43H
0240  DA3902       0222 	JP C,K17	;LOOP UNTIL FIRST 300 HEX BYTES
			 ARE ZEROED
0243  DB18         0223 	IN A,18H	;GET SWITCHES
0245  2F           0224 	CPL
0246  E60E         0225 	AND 0EH		;MASK COLOR TO BE PUT INTO MEMO
			RY
0248  0F           0226 	RRCA
0249  67           0227 	LD H,A
024A  07           0228 	RLCA
024B  07           0229 	RLCA
024C  07           0230 	RLCA
024D  07           0231 	RLCA
024E  B4           0232 	OR A,H		;DUPLICATE COLOR IN BOTH BYTE H
			ALVES
024F  210043       0233 	LD HL,4300H	;START OF DISPLAY AREA
0252  5F           0234 	LD E,A		;TEMP STORAGE FOR COLOR DURING 
			LOOP
0253  77           0235 K18:	LD (HL),A
0254  23           0236 	INC HL
0255  7C           0237 	LD A,H
0256  E6FF         0238 	AND 0FFH	;CHECK FOR 0 IN H (ALL MEMORY C
			LEARED)
0258  7B           0239 	LD A,E
0259  C25302       0240 	JP NZ,K18
025C  E60F         0241 	AND 0FH
025E  5F           0242 	LD E,A		;PUT COLOR IN LOWER E SAVE REGI
			STER
025F  79           0243 	LD A,C
0260  E680         0244 	AND 80H		;CLEAR CURSOR COUNTER
0262  4F           0245 	LD C,A
0263  3EC8         0246 	LD A,0C8H
0265  D382         0247 	OUT 82H,A	;TURN DMA BACK ON
0267  C30801       0248 	JP MAP		;JUMP TO RESET COLOR MAP
                   0249 ;
                   0250 ;	ROUTINE TO USE 2ND JOYSTICK TO VARY COLOR DEFIN
			ITIONS
                   0251 ;	IN COLOR MAP LOCATIONS 0 T0 7
                   0252 ;	USES COLOR ALGEBRA SIMILAR TO NTSC FORMAT 
                   0253 ;	X AXIS=BLUE     Y AXIS=RED    GREEN=1-1/2(X+Y)
                   0254 ;	CURSOR IS LEFT AT LOWER LEFT CORNER ON EXIT
                   0255 ;
026A  00           0256 COLOR:	NOP
026B  DB1B         0257 	IN A,1BH	;GET 2ND X VALUE
026D  EE80         0258 	XOR 80H		;CONVERT TO UNSIGNED BINARY
CROMEMCO CDOS Z80 ASSEMBLER version 02.15		     PAGE 0006


026F  47           0259 	LD B,A		;SAVE RED AMPLITUDE
0270  DB1C         0260 	IN A,1CH	;GET 2ND Y VALUE
0272  EE80         0261 	XOR 80H
0274  4F           0262 	LD C,A		;SAVE BLUE AMPLITUDE
0275  80           0263 	ADD B		;ADD X AND Y
0276  1F           0264 	RRA		;SHIFT RIGHT TO RECOVER MSB
0277  2F           0265 	CPL
0278  3C           0266 	INC A		;SUBTRACT FROM UNITY
0279  0F           0267 	RRCA
027A  0F           0268 	RRCA
027B  0F           0269 	RRCA
027C  0F           0270 	RRCA		;GET 4 MSB'S IN LOWER HALF
027D  E60F         0271 	AND 0FH		;MASK D0-3
027F  57           0272 	LD D,A		;SAVE GREEN AMPLITUDE
0280  DB18         0273 	IN A,18H	;GET SWITCHES
0282  07           0274 	RLCA
0283  07           0275 	RLCA
0284  07           0276 	RLCA
0285  2F           0277 	CPL
0286  E607         0278 	AND 07H		;MASK 2ND JOYSTICK COLOR BITS
0288  5F           0279 	LD E,A
0289  78           0280 	LD A,B		;GET RED CODE
028A  E6F0         0281 	AND 0F0H	;MASK RED AMPLITUDE
028C  B3           0282 	OR E		;MERGE WITH COLOR CODE BIT PATT
			ERN
028D  D380         0283 	OUT 80H,A	;SET RED IN MAP
028F  79           0284 	LD A,C
0290  E6F0         0285 	AND 0F0H	;MASK BLUE AMPLITUDE
0292  B2           0286 	OR D		;MERGE WITH GREEN AMPLITUDE
0293  D381         0287 	OUT 81H,A	;SET BLUE AND GREEN IN MAP
0295  010043       0288 	LD BC,4300H	;SET CURSOR TO LOWER LEFT
0298  16F0         0289 	LD D,0F0H
029A  C38701       0290 	JP CALC


Errors		   0

