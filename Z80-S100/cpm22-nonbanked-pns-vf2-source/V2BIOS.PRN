


TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 1




                        ;********************************************************
                        ;*                     V2BIOS.ASM                       *
                        ;*               FLOPPY CBIOS FOR CP/M 2.XX             *
                        ;*                     DEC 15  2003                     * 
                        ;********************************************************
                        
                        ; WRITTEN BY B. Y. TASHCHUK 1980
                        ;==================================================
                        ; MANY THANKS TO BOHDAN TASHCHUK FOR THIS CODE
                        ; AND HIS QUALITY SUPPORT OF THOSE WHO USED IT
                        ;==================================================
                        ;
                        ; B. JONES 1981
                        ; - ADDED SUPPORT FOR 9, 512 BYTE SECTORS ON
                        ;   SYSTEM TRACKS TO SUPPORT LARGER BIOS TYPES
                        ;   (MORE DRIVES, HARD DISKS, SPECIAL FUNCTIONS ETC.)
                        ; - ADDED 1024 BYTE SECTOR SUPPORT
                        ;   THIS SPEEDS UP DISK OPERATIONS BY 70% AND
                        ;   ADDS 220K MORE USEABLE SPACE
                        ; - ADDED MULTIPLE ALLOCATION BLOCK SIZE SUPPORT
                        ; - ADDED VERBOSE ASSEMBLY-TIME STRUCTURE INFORMATION
                        ;   RAM AND SECTOR USEAGE, MOVCPM VALUE AND DDT R VALUE
                        ;   END-OF-CODE/STATIC DATA AND TOTAL SIZE INFO
                        ; - ADDED 'CONTINUE' FOR HARD MEDIA DEFECTS
                        ;   THIS FEATURE ALLOWS ONE TO CONTINUE DISK
                        ;   OPERATIONS, EVEN THOUGH THE MEDIA HAS PERMINANT
                        ;   BAD SPOTS. LETS YOU RECOVER FILES YOU REALLY WANT!
                        ; - ADDED REMOTE SYSTEM CONTROL VIA MODEM
                        ; - ADDED SIMULTANEOUS TARBELL DD DMA FDC SUPPORT
                        ; - ADDED SPINWRITER SHIFT TESTING
                        ; - ADDED MULTI 'FOREIGN' DISK FORMAT SUPPORT
                        ;
                        ; B. JONES SEPT 2003
                        ; - ADDED Z80 DMA SUPPORT
                        ; - ADDED FULL FDC E.O.O. INTERRUPT SUPPORT
                        ;
                        ; B.JONES NOV. 2003
                        ; - ADDED VERSAFLOPPY II SUPPORT
                        ; - ADDED SUPPORT FOR FOUR DRIVES, UP TO 1.66 MBYTES EACH
                        ; - REMOVED REMOTE SYSTEM CONTROL
                        ; - REMOVED TARBELL DD DMA FDC SUPPORT
                        ; - REMOVED SPINWRITER SHIFT TESTING
                        ; - REMOVED Z80 DMA SUPPORT, THIS VERSION
                        ; - REMOVED FDC E.O.O. INTERRUPT SUPPORT, THIS VERSION
                        ; - REMOVED 'FOREIGN' FORMAT SUPPORT, THIS VERSION
                        ; - ADDED Z3S & VF II TEST & CONFIGURE AT STARTUP  
                        ;
                        ; C. MALLERY MAR. 2022
                        ; - Changed to use FD1791 instead of FD1795
                        ; - Merged in some of Glitch Works Cleanup
                        
                                .PABS
                                .PHEX
                                .XLINK
                                .Z80






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 2




                        
   0022                 CPVERS  ==      22H             ;CP/M VERSION NUMBER
   0000                 BIVERS  ==      0H              ;BIOS VERSION NUMBER
   FFFF                 TRUE    ==      -1              ;TRUE AND FALSE VALUES
   0000                 FALSE   ==      #TRUE
   FFFF                 VF2     ==      TRUE            ;THIS VERSION FOR PIO
                        
                        ;********************************************************
                        ; CP/M System Sizes and Options
                        ;********************************************************
                        ; DISK DRIVE OPTIONS FIRST
                        
   0004                 NODSK   ==      4       ;NUMBER OF DISKS ALLOWED
   0000                 HLDOPT  ==      0       ;1 KEEP HEADS LOADED, 0 FOR UNLOADS
                        
                        ; CP/M MEMORY CALCULATIONS AND CONSTANTS
                        
                        ;================= NOTE ====================
                        ;*******************************************
                        ;BIOS SIZE FUNCTION (* 1024 BYTES)  NEXT
                        ;*******************************************
                        ;================= NOTE ====================
                        
   0003                 BIOSIZ  ==      3       ;THIS BIOS FITS WITHIN 3K
                                                ;IF YOU ENLARGE THE BIOS, YOU WILL INCREASE
                                                ;BIOSIZ BY 1 FOR EACH ADDITIONAL KILOBYTE, OR
                                                ;PART THEREOF.
                        
   0040                 MSIZ    =\      \ENTER TOTAL MEMORY SIZE IN KILOBYTES EG: 48 OR 64 \
                        
                        ;MSIZ   ==      64              ;ACTUAL AVAILABLE MEMORY SIZE
   003D                 MSIZE   ==      MSIZ-BIOSIZ     ;SUBTRACT BIOS SIZE
   A400                 BIAS    ==      (MSIZE-20)*1024 ;THE DRI BIAS FACTOR
   D800                 CCP     ==      3400H+BIAS      ;BASE OF CCP
   E006                 BDOS    ==      CCP+806H        ;BASE OF BDOS
   EE00                 BIOS    ==      CCP+1600H       ;BASE OF BIOS
   F406                 MOVECP  ==      BDOS+1400H      ;MOVECPM ADJUST
   003D                 MOVEIT  ==      MOVECP/1024
   002C                 NSECTS  ==      (BIOS-CCP)/128  ;WARM START SECTOR CNT, 128 BYTES SECTORS
   001A                 NSBIOS  ==      70-NSECTS       ;MAX SECTORS FOR CBIOS & CP/M
                                                        ;BASED ON HAVING 9, 512 BYTE SECTORS
                                                        ;ON THE SYSTEM TRACKS (0 & 1)
                                                        ;WITH 70 OF THOSE 128 BYTE LOGICAL
                                                        ;SECTORS BEING USEABLE FOR CP/M USE
                                                        ;72 LOGICAL SECTORS IS ACTUAL, BUT
                                                        ;ONE IS THE SYSTEM LOADER, AND ONE IS
                                                        ;A DISK DESCRIPTER BLOCK (DDB), THUS
                                                        ;70 ARE AVAILABLE FOR CP/M & BIOS
   0004                 CPMDSK  ==      0004H           ;CURRENT DISK NUMBER ADDR
   0003                 IOBYTE  ==      0003H           ;INTEL I/O BYTE ADDR
                        
                        ;********************************************************
                        ; Control Character Equates
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 3




   000D                 CR      ==      13
   000A                 LF      ==      10
   0007                 BELL    ==      7
                        
                        ;********************************************************
                        ; Masks for IOBYTE 
                        ;********************************************************
                        
                        ;                KEYBOARD & SCREEN
                        
                        ; MAIN CONSOLE IS SD SYSTEMS VDB-8024
                        
   0000                 CSTAT           ==      0
   0000                 KBSTAT          ==      0
   0001                 CIO                     ==      1
   0001                 KBIO            ==      1
   0004                 COUT            ==      4
   0002                 KIN                     ==      2
                        
                        ; Serial Device is S100Computers Serial Board v4.2
                        
   00A1                 CRTSTAT         ==      0A1H
   00A1                 KEYSTAT         ==      0A1H
   00A3                 KEYIN           ==      0A3H
   00A3                 KEYOUT          ==      0A3H
                        
   00EF                 HIOBYTE ==      0EFH            ;IOBYTE on S100Computers SMB
   0003                 CMSK    ==      00000011B       ;IOBYTE MASK FOR CONSOLE
   00C0                 LMSK    ==      11000000B       ;IOBYTE MASK FOR LIST
                        
                        ;********************************************************
                        ; Floppy Disk Equates
                        ;********************************************************
                        
                        ;********************************************************
                        ;              PIO CONTROLLER PORTS
                        ;********************************************************
                        
   0053                 DCMD    ==      53H             ;VF2 COMMAND/CONTROL PORT
   0054                 W               ==      54H             ;WDC 179X ADDRESS
   0054                 WCMD    ==      W+0             ;COMMAND PORT
   0054                 WSTAT   ==      W+0             ;STATUS PORT
   0055                 WTRACK  ==      W+1             ;TRACK REG
   0056                 WSECT   ==      W+2             ;SECTOR REG
   0057                 WDATA   ==      W+3             ;DATA I/O REG
                        
                        ;********************************************************
                        ;            COMMON 179X CONTROLLER COMMANDS
                        ;********************************************************
                        
   0008                 WHOME   ==      00001000B       ;HOME COMMAND
   0080                 WREAD   ==      10000000B       ;READ SECTOR COMMAND
   00A0                 WWRITE  ==      10100000B       ;WRITE SECTOR COMMAND
   0018                 WSEEK   ==      00011000B       ;SEEK TO GIVEN TRACK COMMAND
   0010                 WUNLD   ==      00010000B       ;SEEK AND UNLOAD HEAD COMMAND






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 4




   0018                 WLOAD   ==      00011000B       ;SEEK AND LOAD HEAD COMMAND
                        
                        
                        ;********************************************************
                        ;             COMMON 179X CONTROLLER STATUS
                        ;********************************************************
                        
   0000                 WBBUSY  ==      0               ;179X BUSY STATUS BIT
   0001                 WBSID1  ==      1               ;SIDE SELECT FLAG COMMAND BIT
   0002                 WBDEL   ==      2               ;HEAD SETTLE DELAY COMMAND BIT
   0003                 WBSIDE  ==  3           ;EXPECT SIDE BIT
   0005                 WBWRIT  ==      5               ;READ/WRITE DISTINGUISHING BIT
   0004                 WBRNF   ==      4               ;RECORD NOT FOUND STATUS BIT
   009C                 WSREAD  ==      10011100B       ;READ SECTOR STATUS MASK
   00FC                 WSWRIT  ==      11111100B       ;WRITE SECTOR STATUS MASK
   0098                 WSSEEK  ==      10011000B       ;SEEK STATUS MASK
   00D0                 WFCINT  ==      11010000B       ;FORCE INTERRUPT COMMAND
                        
                        
                        ;********************************************************
                        ; PRIMARY JUMP TABLE. ALL CALLS FROM CP/M TO THE CBIOS
                        ; COME THROUGH THIS TABLE.
                        ;********************************************************
                        
   EE00                         .LOC    BIOS
                        
                        
   EE00    C3 EE52              JMP     CBOOT           ;COLD BOOT
   EE03    C3 EE6F      WBOOTE: JMP     WBOOT           ;WARM BOOT
   EE06    C3 F552              JMP     CONST           ;CONSOLE STATUS
   EE09    C3 F55C              JMP     CONIN           ;CONSOLE CHARACTER IN
   EE0C    C3 F566      BIOOUT: JMP     CONOUT          ;CONSOLE CHARACTER OUT,
   EE0F    C3 F566              JMP     LIST            ;LIST CHARACTER OUT
   EE12    C3 F566              JMP     PUNCH           ;PUNCH CHARACTER OUT
   EE15    C3 F55C              JMP     READER          ;READER CHARACTER IN
   EE18    C3 F00B              JMP     HOME            ;MOVE HEAD TO HOME POSITION
   EE1B    C3 EF1D              JMP     SELDSK          ;SELECT DISK
   EE1E    C3 F01A              JMP     SETTRK          ;SET TRACK NUMBER
   EE21    C3 F01F              JMP     SETSEC          ;SET SECTOR NUMBER
   EE24    C3 F024              JMP     SETDMA          ;SET DMA ADDRESS
   EE27    C3 F034              JMP     READ            ;READ DISK
   EE2A    C3 F047              JMP     WRITE           ;WRITE DISK
   EE2D    C3 F552              JMP     LISTST          ;RETURN LIST STATUS
   EE30    C3 F029              JMP     SECTRA          ;SECTOR TRANSLATE
                        
                        
                        
                        ;********************************************************
                        ; STEP SPEED TABLE. THIS TABLE TELLS THE BIOS WHAT SIZE
                        ; OF DRIVE IS AT EACH ADDRESS AND WHAT TRACK TO TRACK
                        ; STEPPING SPEED TO USE FOR THAT DRIVE. THE BITS MEAN
                        ; THE FOLLOWING:
                        ;********************************************************
                        
                        ;       1000 0011






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 5




                        ;       ^      ^
                        ;       :      +- THE 179X STEP SPEED BITS. THESE ARE:
                        ;       :               VALUE   8"      5"
                        ;       :               00      3 MS    6 MS
                        ;       :               01      6 MS    12 MS
                        ;       :               10      10 MS   20 MS
                        ;       :               11      15 MS   30 MS
                        ;       :
                        ;       +-------- 0=8 INCH DISK AT THIS ADDRESS,
                        ;                 1=5 INCH DISK AT THIS ADDRESS.
                        
   EE33                 SPDTAB:
   EE33    00                   .BYTE   00H             ;DRIVE A
   EE34    00                   .BYTE   00H             ;DRIVE B
   EE35    80                   .BYTE   80H             ;DRIVE C
   EE36    80                   .BYTE   80H             ;DRIVE D
                        
                        ; Initial parameters on startup
   EE37    00           INITIO: .BYTE   00000000B       ;Initial IOBYTE, everything to TTY
   EE38    00                           .BYTE   0H                      ;INITIAL DISK AFTER COLD BOOT
                        
   EE39    04           HOMER:  .BYTE   4               ;ALLOW 3 USER DISK FIXES
   EE3A    0A           RETRYIT:.BYTE   10              ;RETRY 10 TIMES EACH
                        
                        ;********************************************************
                        ; VersaFloppy II control table: this table contains those
                        ; bits in the VF2 control by te which select the
                        ; operating mode. These bits are combined with address
                        ; control bits to form a complete VF2 control byte. The
                        ; bits are defined as follows:
                        ;********************************************************
                        
                        ;       1111 0000
                        ;       ^^^^ ^
                        ;       :::: +- THESE BITS IN ADDRESS CONTROL TABLE
                        ;       ::::
                        ;       :::+--- 0=SIDE 1, 1=SIDE 0
                        ;   ::+---- 1=8 INCH DISK, 0=5 INCH DISK
                        ;       :+----- 1=SINGLE DENSITY (FM), 0=DOUBLE (MFM)
                        ;       +------ 0=ENABLE HARDWARE WAIT, 1=DISABLE
                        
   EE3B                 OPRTAB:
                        
                        ; FOR VERSAFLOPPY II
                        ; SIZE &         
                        ; DENSITY        
                        
   EE3B                 C8S:    
   EE3B    F0                   .BYTE   11110000B       ;SIDE 0, NO WAIT
   EE3C    70                   .BYTE   01110000B       ;SIDE 0, WAIT
   EE3D    E0                   .BYTE   11100000B       ;SIDE 1, NO WAIT
   EE3E    60                   .BYTE   01100000B       ;SIDE 1, WAIT
                        
   EE3F                 C5S:    
   EE3F    D0                   .BYTE   11010000B






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 6




   EE40    50                   .BYTE   01010000B
   EE41    C0                   .BYTE   11000000B
   EE42    40                   .BYTE   01000000B
                        
   EE43                 C8D:    
   EE43    B0                   .BYTE   10110000B       ;SIDE 0, NO WAIT
   EE44    30                   .BYTE   00110000B       ;SIDE 0, WAIT
   EE45    A0                   .BYTE   10100000B       ;SIDE 1, NO WAIT
   EE46    20                   .BYTE   00100000B       ;SIDE 1, WAIT
                        
   EE47                 C5D:    
   EE47    90                   .BYTE   10010000B
   EE48    10                   .BYTE   00010000B
   EE49    80                   .BYTE   10000000B
   EE4A    00                   .BYTE   00000000B
                        
                        ;********************************************************
                        ; VersaFloppy II address control table. This table
                        ; contains those bits in the VF2 byte which select the
                        ; active disk. These bits are combined with operating
                        ; control bits to form a complete VF2 control byte.
                        ;********************************************************
                        
   EE4B                 ADRTAB: 
   EE4B    0E                   .BYTE   1110B           ;DRIVE A
   EE4C    0D                   .BYTE   1101B           ;DRIVE B
   EE4D    0B                   .BYTE   1011B           ;DRIVE C
   EE4E    07                   .BYTE   0111B           ;DRIVE D
                        
                        ;********************************************************
                        ; System Configuration Option Bytes
                        ;********************************************************
                        
   EE4F                 CFGOPT:
   EE4F    04                   ACTDSK: .BYTE   NODSK   ;NUMBER OF DISKS SUPPORTED
                                                                                ;NORMALLY 2 DRIVES
   EE50    00                   HLOPT:  .BYTE   HLDOPT  ;SINGLE OR DUAL HEAD LOAD
   EE51    04                   KBIT:   .BYTE   4               ;AUTO-RECAL COUNTER
                        
                        ;********************************************************
                        ; COLD BOOT ENTRY POINT. THE FIRST FOUR INSTRUCTIONS
                        ; SHOULD NOT BE CHANGED.
                        ;********************************************************
                        
   EE52                 CBOOT:  
   EE52    31 0080              LXI     SP,80H                  ;VALIDATE THE STACK POINTER
   EE55    2A EE37              LHLD    INITIO          ;SET INITIAL I/O BYTE
   EE58    22 0003              SHLD    IOBYTE
                        
   EE5B    3EFF                 MVI     A,0FFH
   EE5D    32 FA31              STA SERL
   EE60    DBEF                 IN      HIOBYTE
   EE62    E620                 ANI 020H
   EE64    CC F516              CZ CRTINIT              
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 7




   EE67    CD F610              CALL    SYSNIT          ;ROUTINE IN HOST BUFFER SPACE
                                                                        ;IS DISCARDED AFTER THIS CALL
                        
   EE6A    CD EEEE              CALL    BCOMM           ;Common setup steps
   EE6D    1844                 JMPR    GOCPM           ;PREPARE TO GO TO CCP
                        
                        ;********************************************************
                        ; WARM BOOT ENTRY POINT. IN ORDER TO WARM BOOT FROM
                        ; A FLOPPY DISK, CP/M MUST BE READ FROM TRACKS 0 AND 1.
                        ; THE PHYSICAL SECTORS ON THE SYSTEM TRACKS ARE ALWAYS
                        ; 512 BYTES LONG, BUT CP/M DOES NOT ALWAYS OCCUPY THE
                        ; ENTIRE SECTOR. THE SECTOR LAYOUT FOR BOTH 8" AND 5"
                        ; DISKS IS:
                        ;
                        ;       TRACK 0, SECTOR 1, BYTES 0 THRU 127 - COLD
                        ;          START LOADER
                        ;       TRACK 0, SECTOR 1, BYTES 128 THRU 511 - CP/M
                        ;       TRACK 0, SECTOR 2 THRU SECTOR 7 - CP/M
                        ;       TRACK 0, SECTOR 8, BYTES 0 THRU 383 - CP/M
                        ;       TRACK 0, SECTOR 8, BYTES 384 THRU 511 - DDB
                        ;       TRACK 1, SECTOR 1 THRU SECTOR 9 - CP/M,
                        ;          FOLLOWED BY THE CBIOS
                        ;
                        ; THE SYSTEM TRACKS ON 8" DISKS ARE RECORDED IN SINGLE
                        ; DENSITY, WHILE THE SYSTEM TRACKS ON 5" DISKS ARE
                        ; RECORDED IN DOUBLE DENSITY. ONLY SIDE 0 OF A 
                        ; DISK IS USED FOR THE SYSTEM.
                        ;********************************************************
                        
   EE6F                 WBOOT:  
   EE6F    F3                   DI
   EE70    31 0080              LXI     SP,80H                  ;VALIDATE THE STACK POINTER
   EE73    CD F139              CALL    CLOSE
   EE76                 EEXIT:  
   EE76    CD EEEE              CALL    BCOMM           ;Common setup steps
                        
   E700                 ..JOG   ==      CCP+(30*128)    ;LAST GOOD ADDRESS
                                                        ;= 32 -(LOADER + DDB)
                        
   EE79    AF                   XRA     A               ;READ FROM TRACK 0
   EE7A    01 0901              LXI     B,9<8+1         ;READ 9 SECTORS STARTING AT #1
   EE7D    21 D780              LXI     H,CCP-128       ;START HERE TO SKIP LOADER
   EE80    CD EED4              CALL    READM
                        
                        ;NOW COPY DOWN SECTOR #9
                        
   EE83    21 E780              LXI     H,CCP+(31*128)  ;LAST GOOD SECTOR STARTS HERE
   EE86    11 E700              LXI     D,CCP+(30*128)  ;AND GOES OVER DDB HERE
   EE89    01 0200              LXI     B,4*128         ;4 CPM RECORDS
   EE8C    EDB0                 LDIR                    ;MOVE IT NOW
                        
   000A                 ..LEFT  ==      NSECTS-34
   0002                 ..PART  ==      ..LEFT@4
   0002                 ..FULL  ==      ..LEFT/4
   E900                 ..ADDR  ==      CCP+(128*(NSECTS-..LEFT))






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 8




   ED00                 ..LAST  ==      ..ADDR+(..FULL*512)
                        
   EE8E    3E01                 MVI     A,1             ;READ FROM TRACK 1
   EE90    01 0201              LXI     B,..FULL <8+1   ;READ FULL SECTORS
   EE93    21 E900              LXI     H,CCP+(34*128)  ;STARTING AFTER 34 CP/M RECORDS
   EE96    CD EED4              CALL    READM
                        
                                .IFN    ..PART,[
                        
   EE99    3E01                 MVI     A,1             ;READ FROM TRACK 1
   EE9B    01 0103              LXI     B,1<8+(1+..FULL);READ ONE LAST SECTOR
   EE9E    21 F610              LXI     H,RDBUFF        ;INTO READ BUFFER FOR NOW
   EEA1    CD EED4              CALL    READM
                        
   EEA4    01 0100              LXI     B,..PART*128
   EEA7    11 ED00              LXI     D,..LAST        ;SECTOR GOES HERE
   EEAA    21 F610              LXI     H,RDBUFF        ;SECTOR COMES FROM READ BUFFER
   EEAD    EDB0                 LDIR                    ;MOVE THE SECTOR
                        
                                ]
                        
                        ;********************************************************
                        ;THE FOLLOWING RESETS THE CCP BUFFER ON WARMBOOT
                        ;TO KILL AUTO-START ROUTINES
                        ;********************************************************
                        
   EEAF    AF                   XRA     A               ;CLEAR ACC.
   EEB0    32 D807              STA     CCP+7           ;STORE A CHAR. COUNTER LOCATION
                        
                        ;********************************************************
                        ; Common code before entering CP/M
                        ;********************************************************
                        
   EEB3                 GOCPM:  
   EEB3    3EC3                 MVI     A,JMP           ;PATCH WARM START JUMP
   EEB5    32 0000              STA     0
   EEB8    21 EE03              LXI     H,WBOOTE
   EEBB    22 0001              SHLD    1
                        
   EEBE    32 0005              STA     5               ;PATCH JUMP TO BDOS
   EEC1    21 E006              LXI     H,BDOS
   EEC4    22 0006              SHLD    6
                        
   EEC7    21 0080              LXI     H,80H           ;SET DEFAULT DMA ADDR
   EECA    22 FA13              SHLD    DMAADD
                        
   EECD    3A 0004              LDA     CPMDSK          ;PASS CURRENT DISK
   EED0    4F                   MOV     C,A             ;NUMBER TO THE CCP
   EED1    C3 D800              JMP     CCP             ;GO TO THE CCP
                        
                        ;********************************************************
                        ; READ MULTIPLE SECTORS. USED BY THE FLOPPY DISK WARM
                        ; BOOT.
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 9




   EED4    32 FA17      READM:  STA     PTRACK          ;SET TRACK
                        
   EED7    C5           LOOP:   PUSH    B               ;SAVE COUNT, SECTOR
   EED8    79                   MOV     A,C
   EED9    32 FA19              STA     PSECT           ;SET SECTOR
   EEDC    E5                   PUSH    H               ;SAVE DMA ADDRESS
   EEDD    22 FA1B              SHLD    PDMA            ;SET DMA ADDRESS
   EEE0    CD F1C8              CALL    PREAD           ;READ THE SECTOR
   EEE3    DA F4B1              JC      FATERR          ;FATAL ERROR
   EEE6    E1                   POP     H
   EEE7    24                   INR     H               ;POINT TO NEXT DMA ADDRESS
   EEE8    24                   INR     H               ;INCREMENT BY 2 PAGES (512 BYTES)
   EEE9    C1                   POP     B
   EEEA    0C                   INR     C               ;POINT TO NEXT PHYSICAL SECTOR
   EEEB    10EA                 DJNZ    LOOP            ;REPEAT UNTIL DONE
   EEED    C9                   RET
                        
                        ;********************************************************
                        ; BOOT COMMON ROUTINE. USED BY COLD BOOT AND WARM BOOT.
                        ;********************************************************
                        
   EEEE                 BCOMM:  
   EEEE    CD EEFC              CALL    DSKRST          ;RESET DISK SYSTEM
   EEF1    0E00                 MVI     C,0             ;SELECT DISK 0, GET DDB
   EEF3    CD EF1D              CALL    SELDSK
   EEF6    7C                   MOV     A,H             ;TEST FOR SUCCESSFUL SELECT
   EEF7    B5                   ORA     L
   EEF8    C0                   RNZ                     ;SUCCESSFUL
   EEF9    C3 F4B1              JMP     QUIT            ;FATAL ERROR
                        
                        ;********************************************************
                        ; RESET DISK SYSTEM. INVALIDATE CERTAIN FLOPPY DISK
                        ; TABLES AND BYTES TO ALLOW CHANGING DISKS. CALLED BY
                        ; COLD BOOT, WARM BOOT, AND SOME EXTERNAL ROUTINES.
                        ;********************************************************
                        
   EEFC    AF           DSKRST: XRA     A
   EEFD    21 FA3E              LXI     H,UNACNT        ;INVALIDATE UNALLOCATED COUNT
   EF00    0616                 MVI     B,UNALEN
   EF02    77           LOP:    MOV     M,A
   EF03    23                   INX     H
   EF04    10FC                 DJNZ    LOP
   EF06    21 EE4F              LXI     H,ACTDSK        ;POINT TO # DISKS       
   EF09    46                   MOV     B,M             ;GET NUMBER INTO B
   EF0A    11 0078              LXI     D,APBDIS        ;GET DISTANCE BETWEEN FD APBS
                        
   EF0D    21 FA72              LXI     H,APB0+(FLAG-ATABLE) ;POINT TO FLAG
                        
   EF10    77           LOOP1:  MOV     M,A             ;INVALIDATE ALL FLOPPY DISK
   EF11    19                   DAD     D               ;APBS BY CLEARING FLAGS
   EF12    10FC                 DJNZ    LOOP1
                        
   EF14    3D                   DCR     A
   EF15    32 FA24              STA     OLDFLO          ;FORCE HEAD UNLOAD/LOAD
   EF18    32 FA23              STA     ADISK           ;INVALIDATE ATABLE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 10




   EF1B    C9                   RET
                        
                        ;********************************************************
                        ;            LOAD HEAD ON CURRENT DISK
                        ;********************************************************
                        
   EF1C    C9           HEADLD: RET
                        
                        
                        ;********************************************************
                        ; LOGICALLY SELECT THE DISK DRIVE FOR FUTURE READS AND
                        ; WRITES TO THAT PASSED IN REGISTER C. IF THE DDB FOR
                        ; THE DRIVE HAS NOT YET BEEN READ, THEN READ IT IN FROM
                        ; THE DISK. OTHERWISE, DON'T PERFORM A PHYSICAL SELECT
                        ; UNTIL A READ OR WRITE SECTOR CALL IS MADE. NOTE THAT
                        ; THE DPH, APB, DPB, AND TRANSLATE TABLE FOR THE DRIVE
                        ; ARE ALL VALID AT THE COMPLETION OF THIS CALL.
                        ;********************************************************
                        
   EF1D                 SELDSK:
   EF1D    79                   MOV     A,C
   EF1E    21 EE4F              LXI     H,ACTDSK        ;POINT TO ACTUAL DISK #
   EF21    BE                   CMP     M               ;IN RANGE(y/n)
   EF22    D2 F004              JNC     BAD             ;NO
   EF25    32 FA4F              STA     SEKDSK          ;D.R. HOST DISK
   EF28    32 FA16              STA     PDISK
                        
   EF2B    D5                   PUSH    D               ;SAVE DISK RESET FLAG
                        
   EF2C    69                   MOV     L,C             ;GET APB, DPH ADDRESSES
   EF2D    CD F49F              CALL    GETDPH          ;GET RAM LOCATION FOR DPH
   EF30    ED53 FA29            SDED    APBADR          ;SAVE APB ADDRESS
   EF34    22 FA27              SHLD    DPHADR          ;SAVE DPH ADDRESS
   EF37    CD F469              CALL    GETAPB          ;GET ATABLE FOR THIS DISK
                        
   EF3A    D1                   POP     D
   EF3B    CB43                 BIT     0,E
   EF3D    2807                 JRZ     FRST            ;MAY HAVE BEEN RESET
                        
   EF3F    3A FA5E              LDA     FLAG
   EF42    B7                   ORA     A               ;DDB PROCESSED(y/n)
   EF43    C2 EFFD              JNZ     OK              ;YES
                        
   EF46                 FRST:   
   EF46    CD F139              CALL    CLOSE           ;ELSE CLEAR ANY PENDING WRITE
                                                        ;AND READ DDB FROM DISK
                        
   EF49    AF                   XRA     A               ;WE WILL READ FROM TRACK 0
   EF4A    32 FA17              STA     PTRACK
   EF4D    3E08                 MVI     A,8             ;AND SECTOR 8
   EF4F    32 FA19              STA     PSECT
   EF52    21 F610              LXI     H,RDBUFF        ;INTO THE READ BUFFER
   EF55    22 FA1B              SHLD    PDMA
                        
   EF58    3A FA16              LDA     PDISK           ;GET DISK NUMBER






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 11




   EF5B    21 EE33              LXI     H,SPDTAB        ;POINT TO STEP SPEED TABLE
   EF5E    5F                   MOV     E,A
   EF5F    1600                 MVI     D,0
   EF61    19                   DAD     D
   EF62    7E                   MOV     A,M             ;GET SPEED BYTE FOR THIS DISK
   EF63    47                   MOV     B,A             ;SAVE IN B
   EF64    E603                 ANI     3               ;ISOLATE SPEED BITS
   EF66    67                   MOV     H,A             ;PUT IN H FOR DOUBLE STORE NEXT
   EF67    2EFF                 MVI     L,0FFH          ;CURRENT TRACK - UNKNOWN
   EF69    22 FA5C              SHLD    TRACK           ;UPDATE ATABLE TRACK AND SPEED
                        
                        
                        ;********************************************************
                        ;          ASSUME 8" S.S.S.D. DISK NEXT
                        ;********************************************************
                        
   EF6C    3E01                 MVI     A,00000001B     ;INITIAL FLAG FOR 8" DRIVE
   EF6E    21 F5B8              LXI     H,STDDDB        ;STANDARD 8" DDB ADDRESS
                        
                        
                        ;TEST IF 5" OR 8" DISK IN SPEED TABLE
                        
   EF71    CB78                 BIT     7,B             ;8" DISK(y/n)
   EF73    2805                 JRZ     EIG             ;IF YES GO DO 8"
   EF75    3E15                 MVI     A,00010101B     ;INITIAL 5" FLAG
   EF77    21 F5E8              LXI     H,ALTDDB
                        
   EF7A    32 FA5E      EIG:    STA     FLAG
   EF7D    22 FA2E              SHLD    SAVADR
                        
   EF80    21 0001              LXI     H,1             ;AT LEAST 1 SYSTEM TRACK
   EF83    22 FA5F              SHLD    OFF
   EF86    21 2002              LXI     H,2+32 < 8      ;512 BYTE SECTOR & 32 LOGICAL SECTORS
   EF89    22 FA61              SHLD    SSLEN
                        
   EF8C    CD F334              CALL    GETD3S          ;GET VF2 CTRL BYTES INTO ATABLE
   EF8F    CD F1C8              CALL    PREAD           ;GET THE DDB
   EF92    3020                 JRNC    YUP             ;WE GOT SOMETHING
                        
                        
                        ;********************************************************
                        ; IF ERROR IS R.N.F. THEN SHOW DISK READ FAILED
                        ; ELSE TEST IT FOR GOOD DISK TYPE
                        ;********************************************************
                        
   EF94    CB67                 BIT     WBRNF,A         ;RNF ERROR(y/n)
   EF96    2869                 JRZ     ERR             ;NOPE, GIVE UP
                        
                        
                        ;********************************************************
                        ;    SET UP FOR STANDARD 8" S.S.S.D.  DISK HERE
                        ;********************************************************
                        
   EF98                 NOV:    
   EF98    CD F4BC              CALL    MSG     ;WARN THE USER AND






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 12




   EF9B    0D0A                 .BYTE   CR,LF   ;   HOPE FOR THE BEST
   EF9D    535444204469         .ASCIZ  \STD Disk?\
   EFA7    2A FA2E              LHLD    SAVADR  ;POINT TO STANDARD DDB
   EFAA    01 0076              LXI     B,128-10
   EFAD    11 F79A              LXI     D,RDBUFF+384+10
   EFB0    EDB0                 LDIR                    ;FIX RD BUFFER TO BE A STD DDB
   EFB2    1819                 JMPR    COMP
                        
   EFB4    2A F790      YUP:    LHLD    RDBUFF+384      ;GET VALIDITY BYTES FROM DDB
   EFB7    11 FDDD              LXI     D,0DDH+0FDH < 8 ;EXPECTED VALUE OF BYTES
   EFBA    B7                   ORA     A
   EFBB    ED52                 DSBC    D               ;DDB VALID(y/n)
   EFBD    20D9                 JRNZ    NOV             ;NOPE
   EFBF    2A F792              LHLD    RDBUFF+384+2    ;MORE VALIDITY BYTES
   EFC2    ED52                 DSBC    D               ;DDB VALID(y/n)
   EFC4    20D2                 JRNZ    NOV             ;NOPE
                        
   EFC6    3A F794              LDA     RDBUFF+384+4    ;TEST FOR COMPATIBILITY
   EFC9    E6FE                 ANI     11111110B
   EFCB    2037                 JRNZ    BAD             ;GIVE UP ON THIS DISK
                        
   EFCD    CD F460      COMP:   CALL    PUTAPB          ;UPDATE TRACK, SPEED IN APB
                        
   EFD0    2A FA29              LHLD    APBADR          ;GET APB ADDR FOR THIS DISK
   EFD3    11 000A              LXI     D,FLAG-ATABLE   ;POINT TO WHERE FLAG GOES
   EFD6    19                   DAD     D
   EFD7    EB                   XCHG                    ;MAKE THIS THE DESTINATION ADDR
   EFD8    21 F79A              LXI     H,RDBUFF+384+10 ;FROM FLAG IN RD BUFFER
                        
   EFDB    01 006E              LXI     B,ALEN-(FLAG-ATABLE)+DPBLEN+TRALEN
                        
   EFDE    EDB0                 LDIR                    ;MOVE DDB, DPB, TRANS INTO APB
                        
                        
                        ;********************************************************
                        ;*           NOW SET UP ALLOCATION SIZE
                        ;*           FOR THE DISK JUST SELECTED
                        ;* GET THE ALLOCATION SIZE FROM THE DSM VALUE IN THE DPB
                        ;********************************************************
                        
   EFE0                 GALV:   
   EFE0    3A F7A3              LDA     RDBUFF+384+19   ;GET DSM
   EFE3    4F                   MOV     C,A             ;SAVE VALUE
   EFE4    3A FA4F              LDA     SEKDSK
   EFE7    5F                   MOV     E,A
   EFE8    1600                 MVI     D,0
   EFEA    21 FA39              LXI     H,ALOCSZ
   EFED    19                   DAD     D
   EFEE    71                   MOV     M,C             ;SAVE FOR THIS DISK
                        
   EFEF    3EFF                 MVI     A,0FFH          ;UPDATE ATABLE FROM APB
   EFF1    32 FA23              STA     ADISK
   EFF4    CD F469              CALL    GETAPB
   EFF7    CD F334              CALL    GETD3S          ;PUT VALID VF2 BYTES IN ATABLE
   EFFA    CD F460              CALL    PUTAPB          ;UPDATE APB FROM FULLY VALID ATABLE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 13




                        
   EFFD    2A FA27      OK:     LHLD    DPHADR          ;RETURN DPH ADDRESS
   F000    C9                   RET
                        
   F001                 ERR:
   F001    CD F3B7              CALL    EPRINT          ;PRINT ERROR IN READING DDB
                        
   F004    AF           BAD:    XRA     A               ;DESELECT INVALID DRIVE
   F005    32 0004              STA     CPMDSK
   F008    67                   MOV     H,A             ;ERROR RETURN CODE
   F009    6F                   MOV     L,A
   F00A    C9                   RET
                        
                        ;********************************************************
                        ; SET TRACK FOR FUTURE READS OR WRITES TO TRACK 0. ALSO
                        ; PARTIALLY RESET THE DISK SYSTEM TO ALLOW FOR CHANGED
                        ; DISKS.
                        ;********************************************************
                        
   F00B                 HOME:   
   F00B    CD F139              CALL    CLOSE
   F00E    3A FA49              LDA     HSTWRT          ;TEST FOR PENDING WRITE
   F011    B7                   ORA     A
   F012    2003                 JRNZ    HOMED
   F014    32 FA48              STA     HSTACT          ;CLEAR HOST ACTIVE FLAG
   F017                 HOMED:  
   F017    01 0000              LXI     B,0             ;DROP THRU TO SET TRACK TO 0
                        
                        ;********************************************************
                        ; SET TRACK FOR FUTURE READS OR WRITES TO THAT PASSED
                        ; IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F01A    ED43 FA50    SETTRK: SBCD    SEKTRK
   F01E    C9                   RET
                        
                        ;********************************************************
                        ; SET SECTOR FOR FUTURE READS OR WRITES TO THAT PASSED
                        ; IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F01F    ED43 FA11    SETSEC: SBCD    SEKSEC
   F023    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET DMA ADDRESS FOR FUTURE READS OR WRITES TO THAT
                        ; PASSED IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F024    ED43 FA13    SETDMA: SBCD    DMAADD
   F028    C9                   RET
                        
                        
                        ;********************************************************






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 14




                        ; SECTOR TRANSLATION ROUTINE. THE ROUTINE ONLY
                        ; TRANSLATES SECTORS ON THE USER TRACKS, SINCE CP/M
                        ; ACCESSES THE SYSTEM TRACKS WITHOUT CALLING FOR
                        ; TRANSLATION.
                        ;********************************************************
                        
   F029                 SECTRA: 
                        
   F029    EB                   XCHG                    ;HL GETS TRANS TABLE ADDRESS
                                                        ;CP/M PASSED IT IN DE
   F02A    79                   MOV     A,C             ;GET SECTOR #
   F02B    ED43 FA44            SBCD    NEWSEC          ;SAVE FOR UNALLOC TEST
   F02F    09                   DAD     B               ;INDEX INTO TABLE, LOGICAL SECTOR
                                                        ;IS PASSED IN BC
   F030    6E                   MOV     L,M             ;GET THE TRANSLATED BYTE
   F031    2600                 MVI     H,0
   F033    C9                   RET
                        
                        ;********************************************************
                        ; CP/M ENTRY POINT FOR SECTOR READS. BUFFERED SECTOR
                        ; READS ARE DONE HERE. BUFFERED READ OPERATIONS REQUIRE
                        ; READING THE SECTOR FROM DISK INTO THE READ BUFFER,
                        ; AND THEN PROVIDING 128 BYTE LOGICAL SECTORS TO THE
                        ; CALLING PROGRAM ON REQUEST.
                        ;********************************************************
                        
   F034                 READ:   
   F034    AF                   XRA     A
   F035    32 FA3E              STA     UNACNT          ;UNACNT=0, WE WON'T WRITE WITHOUT
                                                        ;PRE-READS FOR NOW
   F038    3C                   INR     A       
   F039    32 FA47              STA     READOP          ;SHOW WE ARE DOING A READ OPERATION
   F03C    32 FA46              STA     RSFLAG          ;MUST READ DATA
   F03F    3E02                 MVI     A,2
   F041    32 FA2B              STA     WRTYPE          ;TREAT AS UNALLOCATED
                        
   F044    C3 F0B0              JMP     RWOPER          ;DO THE READ
                        
                        ;********************************************************
                        ; CP/M ENTRY POINT FOR SECTOR WRITES. BUFFERED SECTOR
                        ; WRITES ARE DONE HERE. BUFFERED WRITE OPERATIONS
                        ; REQUIRE ACCEPTING 128 BYTE LOGICAL SECTORS FROM THE
                        ; CALLING PROGRAM, ACCUMULATING THEM IN A WRITE BUFFER,
                        ; THEN WRITING THE BUFFER WHEN IT BECOMES FULL. THE
                        ; BUFFER IS IMMEDIATELY WRITTEN OUT IF THE LOGICAL
                        ; SECTOR IS PART OF THE DISK DIRECTORY.
                        ;********************************************************
                        
                        
   F047                 WRITE:  
                        
   F047    AF                   XRA     A
   F048    32 FA47              STA     READOP          ;SET TO WRITE
                        
   F04B    79                   MOV     A,C






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 15




   F04C    32 FA2B              STA     WRTYPE          ;SAVE TYPE OF WRITE
                        
   F04F    FE02                 CPI     2               ;WRITE UNALLOCATED(y/n)
   F051    2018                 JRNZ    CKUN            ;GO SEE IF O.K. ANYWAY
                        
   F053    3A FA3D              LDA     ALOCA           ;GET MAXIMUM UNALLOCATED RECORD COUNT
   F056    32 FA3E              STA     UNACNT          ;AND PUT HERE FOR WRITING
   F059    3A FA4F              LDA     SEKDSK          ;GET CURRENT DISK
   F05C    32 FA3F              STA     UNADSK
   F05F    2A FA50              LHLD    SEKTRK          ;GET CURRENT TRACK
   F062    22 FA40              SHLD    UNATRK
   F065    3A FA44              LDA     NEWSEC          ;GET CURRENT CP/M SECTOR
   F068    32 FA42              STA     UNASEC
                        
   F06B                 CKUN:                           ;SEE IF UNALLOCATED RECORDS REMAIN
                        
   F06B    3A FA3E              LDA     UNACNT          ;GET UNALLOCATED RECORDS LEFT
   F06E    B7                   ORA     A
   F06F    CA F0A8              JZ      ALOC            ;NO UNALLOCATED LEFT
                        
                        
                        ;WE STILL HAVE UNALLOCATED RECORDS LEFT
                        
   F072    3D                   DCR     A               ;UPDATE UNALLOCATED RECORD COUNT
   F073    32 FA3E              STA     UNACNT
                        
                        
                        ;NOW CHECK FOR CORRECT DISK, TRACK & SECTOR
                        
   F076    3A FA4F              LDA     SEKDSK          ;COMPARE DISKS FIRST
   F079    21 FA3F              LXI     H,UNADSK
   F07C    BE                   CMP     M
   F07D    C2 F0A8              JNZ     ALOC
                        
                        
                        ;DISKS ARE SAME, NOW CHECK FOR TRACK
                        
   F080    21 FA40              LXI     H,UNATRK
   F083    3A FA50              LDA     SEKTRK
   F086    BE                   CMP     M
   F087    201F                 JRNZ    ALOC
                        
                        
                        ;TRACKS ARE SAME, NOW TEST FOR SECTOR
                        
   F089    3A FA44              LDA     NEWSEC          ;COMPARE SECTORS NOW
   F08C    21 FA42              LXI     H,UNASEC
   F08F    BE                   CMP     M
   F090    2016                 JRNZ    ALOC
                        
                        
                        ;SECTORS ARE SAME, NOW UPDATE PARAMETERS
                        
   F092    34                   INR     M               ;MAKE NEXT EXPECTED SECTOR
   F093    7E                   MOV     A,M             ;GET NEXT EXPECTED SECTOR






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 16




   F094    21 FA64              LXI     H,ULRPS         ;POINT TO SECTORS/USER TRACK
   F097    BE                   CMP     M               ;TEST FOR END OF TRACK
   F098    3808                 JRC     NOVR            ;NO OVERFLOW
                        
                        
                        ;HERE WE ALLOW FOR NEXT UNALLOCATED RECORD ON A NEW TRACK
                        
   F09A    AF                   XRA     A               ;SET SECTOR AS FIRST
   F09B    32 FA42              STA     UNASEC
   F09E    21 FA40              LXI     H,UNATRK        ;POINT TO UNALLOCATED TRACK #
   F0A1    34                   INR     M               ;MAKE IT NEXT ONE
                        
                        
                        ;WRITE PARAMETERS MATCH, DON'T PRE-READ
                        
   F0A2                 NOVR:   
   F0A2    AF                   XRA     A
   F0A3    32 FA46              STA     RSFLAG          ;SHOW WE DON'T READ A SECTOR
   F0A6    1808                 JMPR    RWOPER
                        
                        
                        ;NOT AN UNALLOCATED RECORD, DO A PRE-READ
                        
   F0A8                 ALOC:   
   F0A8    AF                   XRA     A
   F0A9    32 FA3E              STA     UNACNT          ;SET UNALLOCATED = 0
   F0AC    3C                   INR     A
   F0AD    32 FA46              STA     RSFLAG          ;RSFLAG = 1, WE MUST READ THE SECTOR
                        
                        
                        ;DO READ OR WRITE OPERATION NEXT
                        
   F0B0                 RWOPER:
                        
   F0B0    CD F179              CALL    GETTRK          ;COMPUTE PHYSICAL TRACK & SECTOR
                        
   F0B3    21 FA48              LXI     H,HSTACT        ;GET HOST ACTIVE FLAG
   F0B6    7E                   MOV     A,M     
   F0B7    3601                 MVI     M,1             ;SET IT ACTIVE FOR SURE
   F0B9    B7                   ORA     A               ;SEE IF IT WAS ACTIVE
   F0BA    CA F0DF              JZ      FILHST          ;IF NOT FILL IT
                                
                        
                        ;********************************************************
                        ;* CHECK TO SEE IF SECTOR IN HOST BUFFER IS CORRECT ONE
                        ;* IF NOT WRITE TO HOST BUFFER IF NEEDED & PREPARE FOR 
                        ;* CORRECT HOST BUFFER
                        ;********************************************************
                        
                        ;SEE IF DISKS ARE SAME
                        
   F0BD    3A FA4F              LDA     SEKDSK          ;COMPARE DISKS FIRST
   F0C0    21 FA4A              LXI     H,HSTDSK
   F0C3    BE                   CMP     M
   F0C4    2012                 JRNZ    NOMAT






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 17




                        
                        
                        ;SEE IF TRACKS ARE SAME
                        
   F0C6    21 FA4B              LXI     H,HSTTRK
   F0C9    3A FA1D              LDA     CTRACK
   F0CC    BE                   CMP     M
   F0CD    2009                 JRNZ    NOMAT
                                
                        
                        ;SEE IF SECTORS ARE SAME
                        
   F0CF    3A FA52              LDA     SEKHST          ;COMPARE SECTORS NOW
   F0D2    21 FA4D              LXI     H,HSTSEC
   F0D5    BE                   CMP     M
   F0D6    2824                 JRZ     MATCH
                        
                        
                        ;HOST PARAMETERS DO NOT MATCH CURRENT R/W PARAMETERS
                        ;SEE IF WE HAVE TO FLUSH THE HOST BUFFER
                        
   F0D8                 NOMAT:  
   F0D8    3A FA49              LDA     HSTWRT          ;SEE IF HOST BUFFER WAS WRITTEN
   F0DB    B7                   ORA     A
   F0DC    C4 F13E              CNZ     FLUSH           ;WRITE OUT THE BUFFER IF NOT
                        
                        
                        ;MAY HAVE TO FILL HOST BUFFER
                        ;SEET UP NEW PARAMETERS
                        
   F0DF                 FILHST: 
                        
   F0DF    3A FA4F              LDA     SEKDSK
   F0E2    32 FA4A              STA     HSTDSK
   F0E5    2A FA1D              LHLD    CTRACK
   F0E8    22 FA4B              SHLD    HSTTRK
   F0EB    3A FA52              LDA     SEKHST          ;THE PHYSICAL SECTOR
   F0EE    32 FA4D              STA     HSTSEC
                        
   F0F1    3A FA46              LDA     RSFLAG          ;SEE IF WE NEED TO READ
   F0F4    B7                   ORA     A
   F0F5    C4 F15D              CNZ     RDHST           ;IF SO READ IT
   F0F8    AF                   XRA     A
   F0F9    32 FA49              STA     HSTWRT          ;SHOW NO PENDING WRITE
                        
                        ;WE HAVE CORRECT SECTOR SO COPY DATA TO/FROM DMA BUFFER
                        
   F0FC                 MATCH:
                        
   F0FC    3A FA15              LDA     CREC            ;GET RECORD #
   F0FF    47                   MOV     B,A             ;COMPUTE RECORD IN HOST BUFFER
   F100    0E00                 MVI     C,0
   F102    CB38                 SRLR    B
   F104    CB19                 RARR    C
   F106    21 F610              LXI     H,HSTBUF






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 18




   F109    09                   DAD     B               ;HL IS NOW HOST BUFFER
   F10A    ED5B FA13            LDED    DMAADD          ;DE HAS DMA ADDRESS
   F10E    01 0080              LXI     B,128           ;BYTES TO MOVE
   F111    3A FA47              LDA     READOP
   F114    B7                   ORA     A               ;SEE IF WE ARE READING OR WRITING
   F115    2009                 JRNZ    RWMOVE          ;SKIP ON READ
   F117    3E01                 MVI     A,1             ;IF A WRITE THEN MARK & COPY TO BUFFER
   F119    32 FA49              STA     HSTWRT          ;HSTWRT = 1
   F11C    EB                   XCHG                    ;DE IS NOW DESTINATION,= HOST ON WRITE
   F11D    2A FA13              LHLD    DMAADD          ;HL IS SOURCE, = USER AREA TO GET       
                        
   F120                 RWMOVE:
                        
   F120    EDB0                 LDIR                    ;MOVE DATA
                        
                        
                        ;NOW CHECK WRITE TYPE FOR DIRECTORY UPDATE
                        
   F122    3A FA2B              LDA     WRTYPE          ;GET TYPE OF WRITE
   F125    3D                   DCR     A               ;IS IT TO THE DIRECTORY
   F126    2802                 JRZ     WRITIT          ;IF SO WRITE IT OUT
                        
   F128    1806                 JMPR    GOODOP          ;IF NOT SHOW A SUCCESSFUL R/W OPERATION 
                        
                        ;CLEAR HOST BUFFER FOR DIRECTORY WRITE
                        
   F12A                 WRITIT: 
                        
   F12A    32 FA49              STA     HSTWRT
   F12D    CD F13E              CALL    WRTHST
                                
   F130                 GOODOP:
   F130    3A FA30              LDA     MRML            ;GET RETRY BYTE
   F133    B7                   ORA     A               ;TEST FOR ZERO
   F134    3E01                 MVI     A,1             ;JUST IN CASE OF FAILURE
   F136    C8                   RZ                      ;IF FAILED SHOW IT TO BDOS
   F137    AF                   XRA     A               ;ELSE SET AS O.K.
   F138    C9                   RET                     ;SHOW BDOS SUCCESSFUL READ/WRITE
                        
   F139                 CLOSE:  
   F139    3A FA49              LDA     HSTWRT          ;SEE IF WE HAVE A PENDING WRITE
   F13C    B7                   ORA     A
   F13D    C8                   RZ                      ;IF NOT RETURN NOW
                        
                        ;WRITE FROM THE HOST BUFFER
                        
   F13E                 FLUSH:
   F13E                 WRTHST: 
   F13E    3A FA4A              LDA     HSTDSK          ;GET ACTUAL WRITE DISK
   F141    32 FA16              STA     PDISK           ;MAKE IT THE PHYSICAL DISK
   F144    CD F469              CALL    GETAPB          ;GET APB FOR THE DISK
   F147    3A FA4D              LDA     HSTSEC
   F14A    32 FA19              STA     PSECT
   F14D    3A FA4B              LDA     HSTTRK
   F150    32 FA17              STA     PTRACK






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 19




   F153    21 F610              LXI     H,WRBUFF        ;POINT TO WRITE BUFFER
   F156    22 FA1B              SHLD    PDMA            ;MAKE IT THE PHYSICAL DMA ADDRESS
                                
   F159    CD F1C4              CALL    PWRITE          ;WRITE BACK THE COMBINED SECTOR
   F15C    C9                   RET
                        
   F15D                 RDHST:  
   F15D    3A FA4A              LDA     HSTDSK
   F160    32 FA16              STA     PDISK
   F163    21 F610              LXI     H,RDBUFF        ;POINT TO READ BUFFER
   F166    22 FA1B              SHLD    PDMA            ;MAKE IT PHYSICAL DMA ADDRESS
   F169    3A FA1D              LDA     CTRACK
   F16C    32 FA17              STA     PTRACK
   F16F    3A FA1F              LDA     CSECT
   F172    32 FA19              STA     PSECT
                        
   F175    CD F1C8              CALL    PREAD           ;READ SECTOR INTO READ BUFFER
   F178    C9                   RET
                        
                        ;GET ACTUAL TRACK TO SEEK
                        
   F179                 GETTRK: 
   F179    3A FA50              LDA     SEKTRK          ;GET CP/M TRACK NUMBER
   F17C    21 FA5F              LXI     H,OFF           ;GET NUMBER OF SYSTEM TRACKS
   F17F    5E                   MOV     E,M
   F180    0E00                 MVI     C,0             ;ASSUME SINGLE SIDED DISK
   F182    21 FA61              LXI     H,SSLEN         ;POINT TO SYSTEM SECTOR LENGTH
   F185    BB                   CMP     E
   F186    380F                 JRC     SYST            ;IT WAS A SYSTEM TRACK
   F188    21 FA5E              LXI     H,FLAG          ;POINT TO FLAG BYTE
   F18B    CB4E                 BIT     1,M             ;TEST SIDES BIT
   F18D    2805                 JRZ     SING            ;SINGLE SIDED DISK
   F18F    83                   ADD     E               ;ADD IN OFFSET
   F190    CB3F                 SRLR    A               ;COMPUTE PHYSICAL TRACK NUMBER
   F192    CB19                 RARR    C               ;GET SIDE NUMBER BIT
   F194    21 FA63      SING:   LXI     H,USLEN
   F197                 SYST:   
   F197    32 FA1D              STA     CTRACK          ;SAVE ACTUAL TRACK NUMBER
                                        
                        
                        ;GET ACTUAL SECTOR TO READ/WRITE
                        
   F19A                 PYSEC:  
   F19A    7E                   MOV     A,M             ;GET LENGTH BYTE
   F19B    47                   MOV     B,A
   F19C    FE03                 CPI     3
   F19E    2004                 JRNZ    LRG
   F1A0    2607                 MVI     H,7
   F1A2    1806                 JMPR    GSEC
   F1A4    FE02         LRG:    CPI     2               ;512 BYTE SECTOR(y/n)
   F1A6    2001                 JRNZ    NO              ;NOPE, ACC HAS RECORD MASK
   F1A8    3C                   INR     A               ;FIND MASK FOR 512 BYTE SECTOR
   F1A9    67           NO:     MOV     H,A             ;SAVE RECORD MASK
                        
   F1AA    3A FA11      GSEC:   LDA     SEKSEC          ;GET CP/M SECTOR NUMBER






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 20




   F1AD    3D                   DCR     A               ;ADJUST DOWN TO START AT ZERO
   F1AE    6F                   MOV     L,A             ;SAVE FOR LATER
   F1AF    04                   INR     B               ;ADJUST FOR EASY LOOP
   F1B0    1802                 JMPR    JOIN
   F1B2    CB3F         LOOP2:  SRLR    A               ;PLACE SECTOR NUMBER IN LSB'S
   F1B4    10FC         JOIN:   DJNZ    LOOP2           ;REPEAT UNTIL ALIGNED IN LSB'S
   F1B6    3C                   INR     A               ;ADJUST TO MAKE PHYSICAL SECTOR
   F1B7    B1                   ORA     C               ;GET SIDE BIT   
   F1B8    32 FA52              STA     SEKHST          ;HOST SECTOR
   F1BB    32 FA1F              STA     CSECT           ;SAVE COMBINED SECTOR
   F1BE    7D                   MOV     A,L             ;GET CP/M SECTOR NUMBER
   F1BF    A4                   ANA     H               ;MASK ALL BUT RECORD NUMBER
   F1C0    32 FA15              STA     CREC            ;SAVE RECORD NUMBER
   F1C3    C9                   RET
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK PHYSICAL READ AND WRITE ROUTINE. ALL
                        ; FLOPPY DISK I/O IS PERFORMED BY CALLS TO THIS
                        ; ROUTINE. ON ENTRY PDISK, PTRACK, PSECT, AND PDMA
                        ; MUST BE VALID.
                        ;********************************************************
                        
   F1C4    3EA0         PWRITE: MVI     A,WWRITE        ;SET WRITE COMMAND
   F1C6    1802                 JMPR    PCOM            ;JOIN COMMON CODE
                        
   F1C8    3E80         PREAD:  MVI     A,WREAD         ;SET READ COMMAND
                        
   F1CA    32 FA25      PCOM:   STA     PCMD            ;REMEMBER WHETHER READ OR WRITE
   F1CD    CD F469              CALL    GETAPB          ;MAKE SURE ATABLE IS RIGHT ONE
                        
                        
                        ;********************************************************       
                        ;       IF LAST I/O WAS ON DIFFERENT DISK, TELL THE
                        ;       179X TO UNLOAD ITS HEAD. THE HEAD LOAD ONE-SHOT
                        ;       WILL THEN BE RETRIGERED ON THE NEXT COMMAND.
                        ;********************************************************
                        
   F1D0    21 FA24              LXI     H,OLDFLO        ;POINT TO OLD FLOPPY NUMBER
   F1D3    3A FA16              LDA     PDISK           ;GET NEW NUMBER
   F1D6    BE                   CMP     M               ;SAME DISK(y/n)
   F1D7    2807                 JRZ     SADS            ;YES
                        
   F1D9    77                   MOV     M,A             ;NO, UPDATE OLD NUMBER TO NEW
   F1DA    CD F367              CALL    TRIMWT          ;WAIT FOR TRIM ERASE TO END
   F1DD    CD F30E              CALL    SETD3S          ;SET VF2 CONTROL BYTE
                        
                        ;********************************************************
                        ;       INITIALIZE RETRY LIMITS. INSURE VF2 BYTE IS
                        ;       SET. SEEK TO CORRECT TRACK.
                        ;********************************************************
                        
   F1E0                 SADS:   
   F1E0    3A EE39              LDA     HOMER           ;NUMBER OF HOME OPERATIONS
   F1E3    32 FA30              STA     MRML






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 21




   F1E6    32 EE51              STA     KBIT
   F1E9                 MAC:    
   F1E9    3A EE3A              LDA     RETRYIT         ;RETRIES BETWEEN HOME OPERATIONS
   F1EC    32 FA22              STA     RMACRO
                        
   F1EF    CD F30E              CALL    SETD3S          ;SET VF2 CONTROL BYTE
   F1F2    21 FA5C              LXI     H,TRACK         ;GET OLD TRACK NUMBER
   F1F5    7E                   MOV     A,M
   F1F6    D355                 OUT     WTRACK          ;UPDATE 179X TRACK REG
   F1F8    3A FA17              LDA     PTRACK          ;GET DESIRED TRACK NUMBER
   F1FB    BE                   CMP     M               ;SAME AS BEFORE(y/n)
   F1FC    2823                 JRZ     SATR            ;YES
                        
   F1FE    77                   MOV     M,A             ;UPDATE TRACK NUMBER
   F1FF    CD F367              CALL    TRIMWT          ;WAIT FOR TRIM ERASE TO END
   F202    3A FA17              LDA     PTRACK          ;GET DESIRED TRACK
   F205    B7                   ORA     A               ;TRACK 0 DESIRED(y/n)
   F206    2008                 JRNZ    NOZE            ;NOPE
                        
   F208    CD F372              CALL    FHOME           ;SEEK TO TRACK 0 BY HOME CMD
   F20B    DA F4B1              JC      FATERR
   F20E    1806                 JMPR    ENDS            ;DONE SEEKING
                        
   F210    CD F376      NOZE:   CALL    FSEEK           ;NORMAL SEEK TO DESIRED TRACK
   F213    DA F4B1              JC      FATERR
                        
   F216    CD F460      ENDS:   CALL    PUTAPB          ;UPDATE APB FROM ATABLE
   F219    3A FA25              LDA     PCMD            ;GET READ/WRITE COMMAND
   F21C    CBD7                 SET     WBDEL,A         ;INSURE HEAD IS SETTLED
   F21E                 NOMIL:  
   F21E    32 FA25              STA     PCMD            ;BY SETTING DELAY BIT IN CMD
                        
                        
                        ;********************************************************
                        ;       SET UP DMA ADDRESS, SECTOR REGISTER. ISSUE
                        ;       THE READ OR WRITE COMMAND. SET HARDWARE WAIT.
                        ;********************************************************
                        
   F221                 SATR:
   F221                 MIC:    
   F221    3A FA19              LDA     PSECT           ;GET DESIRED SECTOR NUMBER
   F224    47                   MOV     B,A             ;SAVE SIDE BIT
   F225    CB7F                 BIT     7,A             ;TEST SIDE BIT
   F227    3E30                 MVI     A,'0'
   F229    2802                 JRZ     SIDEZERO
   F22B    3E31                 MVI     A,'1'
   F22D                 SIDEZERO:
   F22D    32 FA38              STA     SIDEID
                        
   F230    CB78                 BIT             7,B
   F232    CA F23E              JZ              SSIDEA
   F235    DB53                 IN              DCMD    ; SET SIDE FOR 1791
   F237    CBA7                 RES             4,A             ; SET SIDE B
   F239    D353                 OUT             DCMD
   F23B    C3 F244              JMP             SETSIDE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 22




   F23E                 SSIDEA:
   F23E    DB53                 IN              DCMD            ; SET SIDE FOR 1791
   F240    CBE7                 SET             4,A                     ; SET SIDE A
   F242    D353                 OUT             DCMD
                        
   F244                 SETSIDE:
   F244    C5                   PUSH    B
   F245    06FF                 MVI             B,0FFH          ;Slight delay for hardware
   F247    10FE                 DELYS:  DJNZ DELYS
   F249    C1                   POP             B
                                
   F24A                 SSECTOR:
   F24A    78                   MOV     A,B                     ;GET BACK SECTOR
   F24B    E67F                 ANI     07FH            ;DROP SIDE BIT
   F24D    D356                 OUT     WSECT           ;UPDATE 179X SECTOR REGISTER
                        
   F24F    3A FA25              LDA     PCMD            ;GET READ OR WRITE COMMAND
   F252    CBCF                 SET     WBSID1,A        ;UPDATE SSO BIT TO 1
   F254    CB78                 BIT     7,B                     ;ARE WE ON SIDE 1(y/n)
   F256    2802                 JRZ     SID01           ;NO, LEAVE WBSIDE BIT AS 0
   F258    CBDF                 SET     WBSIDE,A
                        
                        
   F25A                 SID01:  
   F25A    D354                 OUT     WCMD            ;FOR PIO 179X COMMAND
   F25C    32 FA37      SID2:   STA     OCMD
   F25F    32 FA26              STA     ORWCMD          ;SAVE LAST READ OR WRITE CMD
   F262    57                   MOV     D,A             ;SAVE THE COMMAND
                        
   F263    3A FA2D              LDA     D3SWT           ;GET WAIT ACTIVE VF2 BYTE
   F266    D353                 OUT     DCMD    
                        
   F268    32 FA36              STA     OD3S
                        
   F26B    01 8057              LXI     B,128 < 8+WDATA ;SET PORT AND LENGTH
   F26E    3A FA17              LDA     PTRACK          ;GET CURRENT TRACK
   F271    21 FA5F              LXI     H,OFF
   F274    BE                   CMP     M               ;IS IT A USER TRACK(y/n)
   F275    3A FA63              LDA     USLEN           ;GET USER SECTOR LENGTH
   F278    3003                 JRNC    ULEN
   F27A    3A FA61              LDA     SSLEN           ;GET SYSTEM SECTOR LENGTH
                        
   F27D    2A FA1B      ULEN:   LHLD    PDMA            ;GET DMA ADDRESS
   F280    CB6A                 BIT     WBWRIT,D        ;ARE WE WRITING(y/n)
   F282    2017                 JRNZ    WRIT            ;YES, GO WRITE
                        
                        
                        ;********************************************************
                        ;                     READ THE SECTOR.
                        ;********************************************************
                        
   F284                 PIRD:   
   F284    B7                   ORA     A
   F285    280E                 JRZ     PR12
   F287    0600                 MVI     B,0H






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 23




   F289    3D                   DCR     A
   F28A    2809                 JRZ     PR25
   F28C    3D                   DCR     A
   F28D    2804                 JRZ     PR51
   F28F    EDB2                 INIR
   F291    EDB2                 INIR
   F293    EDB2         PR51:   INIR
   F295                 PR25:
   F295    EDB2         PR12:   INIR
                                
   F297                 RDFN:   
                        
   F297    0E9C                 MVI     C,WSREAD        ;STATUS BITS TO TEST
   F299    1815                 JMPR    CHEK
                        
                        ;********************************************************
                        ;                   WRITE THE SECTOR.
                        ;********************************************************
                        
   F29B                 WRIT:   
   F29B    B7                   ORA     A
   F29C    280E                 JRZ     PW12
   F29E    0600                 MVI     B,0H
   F2A0    3D                   DCR     A
   F2A1    2809                 JRZ     PW25
   F2A3    3D                   DCR     A
   F2A4    2804                 JRZ     PW51
   F2A6    EDB3                 OUTIR
   F2A8    EDB3                 OUTIR
                        
   F2AA    EDB3         PW51:   OUTIR
   F2AC                 PW25:
   F2AC    EDB3         PW12:   OUTIR
                                                
   F2AE                 WRFN:   
   F2AE    0EFC                 MVI     C,WSWRIT        ;STATUS BITS TO TEST
                        
                        
                        ;********************************************************
                        ;       WAIT FOR COMPLETION OF DISK OPERATION.
                        ;       TEST FOR ERRORS.
                        ;********************************************************
                        
   F2B0                 CHEK:   
   F2B0    3A FA2C              LDA     D3SNO           ;GET NO WAIT VF2 BYTE
   F2B3    D353                 OUT     DCMD
   F2B5    32 FA36              STA     OD3S
   F2B8    CD F3AD              CALL    FQDONE          ;WAIT FOR 179X DONE
   F2BB    A1                   ANA     C               ;ANY ERROR BITS(y/n)
   F2BC    C8                   RZ                      ;NO, RETURN - SUCCESSFUL
                        
                        
                        ;********************************************************
                        ;           RETRY THE I/O IF AN ERROR OCCURED.
                        ;********************************************************






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 24




                        
   F2BD                 NOPRNT: 
   F2BD    21 FA22              LXI     H,RMACRO        ;POINT TO MACRO RETRY COUNT
   F2C0    35                   DCR     M               ;DECREMENT IT
   F2C1    C2 F221              JNZ     MIC             ;RE-DO READ/WRITE
                        
   F2C4    21 EE51              LXI     H,KBIT
   F2C7    35                   DCR     M
   F2C8    CA F2D6              JZ      KEYIT
                        
   F2CB    CD F372              CALL    FHOME
   F2CE    D8                   RC
   F2CF    AF                   XRA     A
   F2D0    32 FA5C              STA     TRACK
   F2D3    C3 F1E9              JMP     MAC
                        
                        ;       IF WE CAME HERE IT IS TIME TO RE-CALIBRATE THE DRIVE
                        
   F2D6                 KEYIT:  
   F2D6    3E04                 MVI     A,4
   F2D8    32 EE51              STA     KBIT
   F2DB    3A FA34              LDA     ISTAT           ;GET BACK LAST STATUS
   F2DE    A1                   ANA     C
   F2DF    CD F3B7              CALL    EPRINT
                        
                        ;********************************************************
                        ;THE FOLLOWING ROUTINE WAITS FOR USER
                        ;TO RETRY OPERATION ON DRIVE WITH ERROR
                        ;********************************************************
                        
   F2E2                 NORE:   
   F2E2    CD F372              CALL    FHOME
   F2E5    DA F4B1              JC      FATERR
   F2E8    AF                   XRA     A
   F2E9    32 FA5C              STA     TRACK
                        
                        ; ON A MEDIA ERROR YOU CAN TYPE IN A CONTROL CHARACTER
                        ; THAT DETERMINS WHAT THE BIOS AND BDOS WILL DO NEXT
                        ;
                        ; - CONTROL-C TO WARM BOOT (YOU GIVE UP ON ERROR)
                        ; - CONTROL-D TO IGNORE THE ERROR SO YOU CAN READ/WRITE
                        ;   'BAD' DATA AND CONTINUE ON WITHOUT A 'BDOS BAD SECTOR' MESSAGE
                        ; - <RETURN> TO RETRY THE OPERATION ANOTHER 12 TIMES
                        
   F2EC                 CRIN:   
   F2EC    CD F552              CALL    CONST           ;SEE IF KEY PRESSED
   F2EF    28FB                 JRZ     CRIN            ;IF NOT KEEP RINGING
   F2F1    CD F55C              CALL    CONIN           ;GET CHAR
   F2F4    FE03                 CPI     3               ;A ^C (y/n)
   F2F6    CA EE76              JZ      EEXIT           ;DO A WARM BOOT IF SO
   F2F9    FE04                 CPI     4               ;A ^D (y/n)
   F2FB    280D                 JRZ     FXER            ;IGNORE ERROR
   F2FD    FE0D                 CPI     13              ;SEE IF 'CR'
   F2FF    20EB                 JRNZ    CRIN            ;IF NOT TRY AGAIN
   F301    21 FA30              LXI     H,MRML






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 25




   F304    35                   DCR     M
   F305    37                   STC
   F306    C8                   RZ
   F307    C3 F1E9              JMP     MAC             ;DO ANOTHER RE-TRY
                        
                        
                        ;IGNORE DISK I/O ERROR AND CONTINUE WITH STATUS SET O.K.
                        
   F30A                 FXER:   
   F30A    37                   STC                     ;FIX UP CARRY
   F30B    3F                   CMC
   F30C    AF                   XRA     A               ;CLEAR ERROR FLAG
   F30D    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET VF2 CONTROL BYTE. GET 2 VF2 CONTROL BYTES, ONE
                        ; WITH THE HARDWARE WAIT BIT ACTIVE AND ONE WITHOUT,
                        ; FROM THE 8 POSSIBLE CONTROL BYTES. OUTPUT THE NO WAIT
                        ; BYTE. SAVE BOTH FOR LATER USE.
                        ;********************************************************
                        
   F30E    3A FA17      SETD3S: LDA     PTRACK          ;GET DESIRED TRACK
   F311    21 FA5F              LXI     H,OFF
   F314    BE                   CMP     M               ;USER TRACK(y/n)
   F315    21 FA58              LXI     H,US0N          ;POINT TO USER TRACK BYTES
   F318    3003                 JRNC    USER
   F31A    21 FA54              LXI     H,SS0N          ;POINT TO SYSTEM TRACK BYTES
                        
   F31D    3A FA19      USER:   LDA     PSECT           ;TEST IF ON SIDE 1
   F320    CB7F                 BIT     7,A
   F322    2802                 JRZ     SID0            ;ON SIDE 0
   F324    23                   INX     H               ;POINT TO SIDE 1 BYTES
   F325    23                   INX     H
                        
   F326    5E           SID0:   MOV     E,M             ;GET THE NO WAIT BYTE
   F327    23                   INX     H
   F328    56                   MOV     D,M             ;GET THE WAIT BYTE
   F329    ED53 FA2C            SDED    D3SNO           ;SAVE BOTH
   F32D    7B                   MOV     A,E
   F32E    D353                 OUT     DCMD            ;OUTPUT THE NO WAIT BYTE
   F330    32 FA36              STA     OD3S
   F333    C9                   RET
                        
                        
                        ;********************************************************
                        ; GET VF2 CONTROL BYTES. CREATE THE EIGHT VF2 CONTROL
                        ; BYTES IN ATABLE. THESE BYTES SET THE DENSITY BIT FOR
                        ; SYSTEM TRACKS AND USER TRACKS, SELECT SIDE 0 OR SIDE
                        ; 1, AND ENABLE OR DISABLE THE HARDWARE DATA WAIT.
                        ; CREATE THE BYTES BY MERGING THE APPROPRIATE HARDWARE
                        ; CONTROL BITS IN OPRTAB WITH THE CORRECT ADDRESS
                        ; CONTROL BITS IN ADRTAB.
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 26




   F334    3A FA23      GETD3S: LDA     ADISK           ;GET CURRENT DISK NUMBER
   F337    21 EE4B              LXI     H,ADRTAB        ;POINT TO ADDRESS
   F33A    5F                   MOV     E,A             ;CONTROL BITS TABLE
   F33B    1600                 MVI     D,0
   F33D    19                   DAD     D
   F33E    4E                   MOV     C,M             ;SAVE ADDR BITS FOR VF2 BYTES
                        
   F33F    3A FA5E              LDA     FLAG            ;GET THE FLAG
   F342    E614                 ANI     00010100B       ;ISOLATE SYSTEM DENSITY, SIZE
   F344    47                   MOV     B,A
   F345    0F                   RRC                     ;ALIGN THE DENSITY BIT
   F346    B0                   ORA     B               ;COMBINE SIZE AND DENSITY
   F347    E60C                 ANI     00001100B       ;DROP UNALIGNED BITS
   F349    11 FA54              LXI     D,SS0N          ;POINT TO BEGINNING OF DEST
   F34C    CD F354              CALL    GET             ;GET SYSTEM TRACK VF2 BYTES
                        
   F34F    3A FA5E              LDA     FLAG            ;GET THE FLAG
   F352    E60C                 ANI     00001100B       ;ISOLATE USER DENSITY, SIZE
                                                        ;AND GET USER TRACK VF2 BYTES
                        
   F354    21 EE3B      GET:    LXI     H,OPRTAB        ;POINT TO CONTROL BITS TABLE
   F357    D5                   PUSH    D
   F358    5F                   MOV     E,A             ;GET CONTROL BITS START ADDRESS
   F359    1600                 MVI     D,0
   F35B    19                   DAD     D               ;START ADDRESS NOW IN HL
   F35C    D1                   POP     D               ;DESTINATION RESTORED TO DE
   F35D    0604                 MVI     B,4
   F35F    7E           LOOP3:  MOV     A,M             ;GET A BYTE OF CONTROL BITS
   F360    23                   INX     H
   F361    B1                   ORA     C               ;COMBINE WITH ADDRESS BITS
   F362    12                   STAX    D               ;STORE COMBINED BYTE
   F363    13                   INX     D
   F364    10F9                 DJNZ    LOOP3           ;DO ALL BYTES
   F366    C9                   RET
                        
                        ;********************************************************
                        ; WAIT FOR TRIM ERASE TO END. WAIT ONLY IF THE LAST
                        ; FLOPPY DISK COMMAND WAS A WRITE. CALLED ONLY IF
                        ; PHYSICAL HEAD MOTION IS NEEDED TO ACCESS THE NEXT
                        ; SECTOR. THE WAIT IS ABOUT 500 USEC AT 4 MHZ. THIS
                        ; ALLOWS TRIM ERASE TO COMPLETE BEFORE THE DRIVE IS
                        ; DESELECTED OR THE HEAD IS MOVED.
                        ;********************************************************
                        
   F367    3A FA26      TRIMWT: LDA     ORWCMD          ;GET LAST READ OR WRITE COMMAND
   F36A    CB6F                 BIT     WBWRIT,A        ;TEST WRITE BIT
   F36C    C8                   RZ                      ;IT WAS A READ, DON'T WAIT
   F36D    0696                 MVI     B,150           ;WAIT
   F36F    10FE                 DJNZ    . 
   F371    C9                   RET
                        
                        
                        ;********************************************************
                        ;* MULTI-PURPOSE 179X SEEK SUBROUTINE. THE ENTRY
                        ;* POINTS ARE:






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 27




                        ;*
                        ;*      FHOME - RESTORE HEAD TO TRACK 0 POSITION
                        ;*      FSEEK - SEEK WITH HEAD LOAD TO DEST. IN ACC
                        ;*
                        ;*      FUNLD - SEEK SAME TRACK TO UNLOAD HEAD
                        ;*      FLOAD - SEEK SAME TRACK TO LOAD HEAD
                        ;*
                        ;* FOR THESE LAST TWO FUNCTIONS THE COMMAND IS STILL IN
                        ;* PROGRESS WHEN RETURN IS MADE. THE CALLING PROGRAM
                        ;* MUST WAIT FOR THE COMMAND TO COMPLETE.
                        ;*******************************************************
                        
   F372    0608         FHOME:  MVI     B,WHOME         ;SET UP HOME COMMAND
   F374    1804                 JMPR    FH
                        
   F376    D357         FSEEK:  OUT     WDATA           ;OUTPUT SEEK DESTINATION
   F378    0618                 MVI     B,WSEEK         ;SET UP SEEK, DIFFERENT TRACK
                        
   F37A    3A FA5D      FH:     LDA     SPEED           ;GET SEEK SPEED
   F37D    B0                   ORA     B               ;MERGE WITH SEEK COMMAND
   F37E    D354                 OUT     WCMD            ;OUTPUT TO 179X
   F380    32 FA37              STA     OCMD
   F383    CD F3A9              CALL    FDONE
   F386    E698                 ANI     WSSEEK          ;ELIMINATE UNWANTED STATUS BITS
                        
                        
                        ;********************************************************
                        ;    NOW GO IN A WAIT LOOP FOR HEAD SETTLE TIME
                        ;********************************************************
                        
   F388    F5           SETL:   PUSH    PSW             ;SAVE FLAGS
                        
   F389    3A FA25              LDA     PCMD
   F38C    CB6F                 BIT     5,A             ;SEE IF READ OR WRITE
   F38E    2807                 JRZ     NDLY
                                
   F390    3E14                 MVI     A,20            ;WAIT 20 MS
   F392    10FE         SETL1:  DJNZ    SETL1           ;LOOP ON B REG
   F394    3D                   DCR     A               ;LOOP ON SETTLE VALUE
   F395    20FB                 JRNZ    SETL1
   F397                 NDLY:
   F397    F1                   POP     PSW             ;GET BACK REGS
   F398    C8                   RZ                      ;RETURN - SUCCESSFUL 
   F399    37                   STC
   F39A    C9                   RET                     ;RETURN WITH CARRY SET - ERROR
                        
   F39B    0610         FUNLD:  MVI     B,WUNLD         ;SET UP UNLOAD COMMAND
   F39D    1802                 JMPR    FU
                        
   F39F    0618         FLOAD:  MVI     B,WLOAD         ;SET UP LOAD COMMAND
                        
   F3A1    DB55         FU:     IN      WTRACK          ;GET CURRENT TRACK
   F3A3    D357                 OUT     WDATA           ;OUTPUT SEEK DESTINATION
                        
   F3A5    78                   MOV     A,B             ;OUTPUT SEEK COMMAND






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 28




   F3A6    D354                 OUT     WCMD
   F3A8    C9                   RET
                        
                        
                        ;********************************************************
                        ; 179X NOT BUSY SUBROUTINE. WAIT FOR 179X NOT BUSY.
                        ; THEN RETURN THE LAST STATUS READ FROM THE CHIP. THERE
                        ; ARE TWO ENTRY POINTS. FDONE DELAYS A SHORT WHILE TO
                        ; ALLOW THE 179X TO SET ITS BUSY BIT.
                        ; THIS ROUTINE TESTS FOR TYPE 1 AND TYPE 2
                        ; COMMAND COMPLETION. 
                        ;********************************************************
                        
   F3A9                 FDONE:
                        
   F3A9    060A                 MVI     B,10            ;DELAY
   F3AB    10FE                 DJNZ    .
   F3AD                 FQDONE:
   F3AD                 PIODON:
   F3AD    DB54                 IN      WSTAT
   F3AF    32 FA34              STA     ISTAT
   F3B2    CB47                 BIT     WBBUSY,A
   F3B4    20F7                 JRNZ    PIODON
   F3B6    C9                   RET     
                                
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK ERROR PRINT SUBROUTINE. ANY NON ZERO BITS
                        ; IN THE ACCUMULATOR ARE ERRORS. THE FIRST ONE FOUND IS
                        ; PRINTED OUT.
                        ;********************************************************
                        
   F3B7    57           EPRINT: MOV     D,A     ;SAVE ERROR BITS
   F3B8    79                   MOV     A,C     ;STORE CALLING ROUTINE ID
   F3B9    32 FA35              STA     ACTIVE
   F3BC    DB55                 IN      WTRACK  ;STORE TRACK REGISTER
   F3BE    32 FA32              STA     ITRACK
   F3C1    DB56                 IN      WSECT   ;STORE SECTOR REGISTER
   F3C3    32 FA33              STA     ISECT
                        
   F3C6    CD F4BC              CALL    MSG
   F3C9    0D0A                 .BYTE   CR,LF
   F3CB    457272206F6E         .ASCIZ  \Err on \
   F3D3    3A FA16              LDA     PDISK
   F3D6    C641                 ADI     'A'
   F3D8    4F                   MOV     C,A
   F3D9    CD EE0C              CALL    BIOOUT
   F3DC    CD F4BC              CALL    MSG
   F3DF    3A202000             .ASCIZ  \:  \
                        
   F3E3    CBCA                 SET     1,D     ;ENSURE NON ZERO ERROR BYTE
   F3E5    0600                 MVI     B,0
   F3E7    04           ..FIND: INR     B
   F3E8    CB12                 RALR    D       ;FIND FIRST NON ZERO BIT






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 29




   F3EA    30FB                 JRNC    ..FIND
   F3EC    21 F415              LXI     H,ERMESS ;POINT TO MESSAGE TABLE
   F3EF    1805                 JMPR    ..JOIN
   F3F1    7E           ..MORE: MOV     A,M     ;PUT MESSAGE CHAR IN A
   F3F2    A7                   ANA     A       ;SET FLAG BITS
   F3F3    23                   INX     H
   F3F4    20FB                 JRNZ    ..MORE  ;KEEP LOOKING FOR NULL TERMINATOR, THIS MSG
   F3F6    10F9         ..JOIN: DJNZ    ..MORE  ;KEEP LOOKING FOR CORRECT MSG
   F3F8    CD F4C2              CALL    MSGHL   ;PRINT OUT CORRECT MESSAGE
   F3FB    CD F4BC              CALL    MSG
   F3FE    2000                 .ASCIZ  \ \
                        
   F400    0607                 MVI     B,EILEN ;NUMBER OF ERROR INFO BYTES
   F402    21 FA32              LXI     H,EINFO
   F405    CD F4BC      ..LOOP: CALL    MSG     ;SPACE BETWEEN BYTES
   F408    2000                 .ASCIZ  \ \
   F40A    7E                   MOV     A,M
   F40B    23                   INX     H
   F40C    CD F44B              CALL    LBYTE   ;PRINT NEXT BYTE
   F40F    10F4                 DJNZ    ..LOOP
                        
   F411    3E01                 MVI     A,1     ;CP/M ERROR FLAG
   F413    37                   STC             ;INTERNAL ERROR FLAG
   F414    C9                   RET
                        
                        ; FLOPPY DISK ERROR MESSAGES. USED BY THE EPRINT
                        ; ROUTINE TO TELL THE USER WHICH 179X ERROR OCCURED.
                        
   F415    4E6F74205265 ERMESS: .ASCIZ  \Not Ready\
   F41F    577269746520         .ASCIZ  \Write Protect\
   F42D    4661756C7400         .ASCIZ  \Fault\
   F433    524E4600             .ASCIZ  \RNF\
   F437    426164204352         .ASCIZ  \Bad CRC\
   F43F    4C6F73742044         .ASCIZ  \Lost Data\
   F449    3F00                 .ASCIZ  \?\
                        
                        
                        ;********************************************************
                        ;            PRINT HEX BYTE ON CONSOLE.
                        ;********************************************************
                        
   F44B    F5           LBYTE:  PUSH    PSW
   F44C    0F                   RRC
   F44D    0F                   RRC
   F44E    0F                   RRC
   F44F    0F                   RRC
   F450    CD F454              CALL    P2
   F453    F1                   POP     PSW
   F454    E60F         P2:     ANI     0FH
   F456    C690                 ADI     90H
   F458    27                   DAA
   F459    CE40                 ACI     40H
   F45B    27                   DAA
   F45C    4F                   MOV     C,A
   F45D    C3 EE0C              JMP     BIOOUT






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 30




                        
                        
                        ;********************************************************
                        ; MOVE ATABLE INTO THE CORRECT APB. MOVE THE CORRECT
                        ; APB INTO ATABLE.
                        ;********************************************************
                        
   F460    3A FA23      PUTAPB: LDA     ADISK           ;GET CURRENT ATABLE NUMBER
   F463    CD F494              CALL    ASET            ;SET UP FOR MOVE
   F466    EDB0                 LDIR                    ;COPY ATABLE INTO APB
   F468    C9                   RET
                        
   F469    21 FA23      GETAPB: LXI     H,ADISK         ;POINT TO ATABLE DRIVE NUMBER
   F46C    3A FA16              LDA     PDISK           ;GET NEW NUMBER
   F46F    BE                   CMP     M               ;THE SAME(y/n)
   F470    C8                   RZ                      ;YES, ATABLE ALREADY VALID
   F471    77                   MOV     M,A             ;UPDATE ATABLE NUMBER
   F472    CD F494              CALL    ASET            ;SET UP FOR MOVE
   F475    EB                   XCHG                    ;APB ADDRESS NOW SOURCE
   F476    EDB0                 LDIR                    ;COPY APB INTO ATABLE
                        
                        ;NOW GET ALLOCATION SIZE FOR SELECTED DISK
                        
   F478    3A FA16              LDA     PDISK           ;GET DISK #
   F47B    5F                   MOV     E,A             ;MAKE INDEX
   F47C    1600                 MVI     D,0
   F47E    21 FA39              LXI     H,ALOCSZ        ;POINT TO SAVED BSH TABLE
   F481    19                   DAD     D
   F482    7E                   MOV     A,M             ;GET BSH VALUE
   F483    21 F48F              LXI     H,ALOREC        ;POINT TO RECORDS/ALLOCATION SIZE
   F486    D603                 SUI     3               ;SET FOR INDEX
   F488    5F                   MOV     E,A             ;MAKE INDEX
   F489    19                   DAD     D
   F48A    7E                   MOV     A,M             ;GET RECORDS/ALLOCATION
   F48B    32 FA3D              STA     ALOCA           ;SAVE # FOR SELECTED DRIVE
                        
   F48E    C9                   RET
                        
                        ;TABLE FOR # OF RECORDS FOR ALLOCATION SIZES FROM 1K TO 16K
                        
   F48F                 ALOREC: 
   F48F    0810204080           .BYTE   8,16,32,64,128
                        
                        
   F494    6F           ASET:   MOV     L,A             ;GET DISK NUMBER INTO L
   F495    CD F49F              CALL    GETDPH
   F498    21 FA54              LXI     H,ATABLE
   F49B    01 0011              LXI     B,ALEN
   F49E    C9                   RET
                        
                        
                        ;********************************************************
                        ; GET DPH ADDRESS AND APB ADDRESS. RETURN THE DPH
                        ; ADDRESS IN HL, THE CORRESPONDING APB ADDRESS IN DE.
                        ; DISK NUMBER MUST BE IN L AT CALL.






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 31




                        ;********************************************************
                        
   F49F    2600         GETDPH: MVI     H,0
   F4A1    29                   DAD     H               ;GET NUMBER * 2
   F4A2    5D                   MOV     E,L
   F4A3    54                   MOV     D,H
   F4A4    29                   DAD     H
   F4A5    29                   DAD     H
   F4A6    29                   DAD     H               ;GET NUMBER * 16
   F4A7    19                   DAD     D               ;GET NUMBER * 18
   F4A8    11 F570              LXI     D,APBBEG
   F4AB    19                   DAD     D               ;NOW WE HAVE ADDR OF APB ADDR
   F4AC    5E                   MOV     E,M             ;GET APB ADDRESS INTO DE
   F4AD    23                   INX     H
   F4AE    56                   MOV     D,M
   F4AF    23                   INX     H               ;HL NOW HAS DPH ADDRESS
   F4B0    C9                   RET
                        
                        
                        ;********************************************************
                        ;                  FATAL ERROR.
                        ;********************************************************
                        
   F4B1                 FATERR:
   F4B1    CD F4BC      QUIT:   CALL    MSG
   F4B4    2053545000                   .ASCIZ  ' STP'
   F4B9    C3 EE76                      JMP     EEXIT           ;GO WARM BOOT
                        
                        ;********************************************************
                        ; MESSAGE OUTPUT SUBROUTINE. THERE ARE TWO ENTRY
                        ; POINTS. FOR MSG A MESSAGE FOLLOWS INLINE AFTER THE
                        ; CALL. FOR MSGHL THE MESSAGE ADDRESS IS IN HL. FOR
                        ; BOTH ENTRY POINTS THE MESSAGE IS PRINTED OUT UNTIL A
                        ; NULL TERMINATOR.
                        ;********************************************************
                        
   F4BC    E3           MSG:    XTHL                    ;GET MESSAGE ADDRESS
   F4BD    CD F4C2              CALL    MSGHL           ;PRINT THE MESSAGE
   F4C0    E3                   XTHL                    ;RESTORE NEW RETURN ADDRESS
   F4C1    C9                   RET
                        
   F4C2    4E           MSGHL:  MOV     C,M             ;GET CURRENT CHAR OF MESSAGE
   F4C3    79                   MOV     A,C
   F4C4    A7                   ANA     A
   F4C5    C8                   RZ                      ;NULL TERMINATOR, RETURN
   F4C6    CD EE0C              CALL    BIOOUT          ;OUTPUT THE CHAR
   F4C9    23                   INX     H               ;POINT TO NEXT CHAR
   F4CA    18F6                 JMPR    MSGHL           ;KEEP GOING
                        
                        ;********************************************************
                        ; I/O Routines: these routines implement the various
                        ; destinations selectable through the IOBYTE. By default,
                        ; only TTY is implemented, everything else falls through
                        ; to TTY. Expand and implement for custom IOBYTE options.
                        ;********************************************************






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 32




                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;Unimplemented status routines
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: return with 0 in A if no char available
                        ;post: return with 0xFF in A if char available
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4CC                 UC1IS:                          ;NOT IMPLEMENTED
   F4CC                 BATIS:                          ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;TTYIS -- TTY Status Routine
                        ;
                        ;pre: TTY device is initialized
                        ;post: return with 0 in A if no char available
                        ;post: return with 0xFF in A if char available
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4CC                 TTYIS:
   F4CC    3E00                 MVI     A,KBSTAT
   F4CE    4F                   MOV     C,A
   F4CF    3E02                 MVI     A,KIN
   F4D1    5F                   MOV     E,A
   F4D2    ED78                 INP     A
   F4D4    00                   NOP
                        ;       CMA FOR NEGATIVE LOGIC
   F4D5    00                   NOP
   F4D6    A3                   ANA     E
   F4D7    00                   NOP
   F4D8    00                   NOP
   F4D9    C8                   RZ                      ;RETURN FALSE IF UNAVAILABLE
   F4DA    00                   NOP
   F4DB    00                   NOP
   F4DC    3EFF                 MVI     A,0FFH
   F4DE    C9                   RET                     ;RETURN TRUE
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CRTIS -- Serial Device Status Routine
                        ;
                        ;pre: serial device is initialized
                        ;post: return with 0 in A if no char available
                        ;post: return with 0xFF in A if char available
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4DF                 CRTIS:                          
   F4DF    DBA1                 IN      KEYSTAT
   F4E1    E601                 ANI     01H
   F4E3    C8                   RZ                      ;RETURN WITH 0 IN [A] IF NOTHING THERE
   F4E4    3EFF                 MVI     A,0FFH
   F4E6    C9                   RET                     ;RETURN WITH 0FFH IN [A] IF SOMETHING
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;Unimplemented input routines
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: return with character from device in A register






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 33




                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4E7                 UC1IN:                          ;NOT IMPLEMENTED
   F4E7                 BATIN:                          ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;TTYIN -- Get a character from the TTY device
                        ;
                        ;pre: TTY device is initialized
                        ;post: return with character from device in A register,
                        ;      strips parity
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4E7    CD F4CC      TTYIN:  CALL    TTYIS           ;GET STATUS
   F4EA    CA F4E7              JZ      TTYIN           ;WAIT UNTIL DATA AVAILABLE
   F4ED    3E01                 MVI     A,KBIO
   F4EF    4F                   MOV     C,A
   F4F0    ED78                 INP     A
   F4F2    00                   NOP
   F4F3    00                   NOP
   F4F4    E67F                 ANI     07FH            ;DROP PARITY
   F4F6    C9                   RET
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CRTIN -- Get a character from the Serial device
                        ;
                        ;pre: Serial device is initialized
                        ;post: return with character from device in A register,
                        ;      strips parity
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4F7                 CRTIN:                          
   F4F7    DBA1                 IN      KEYSTAT
   F4F9    E601                 ANI     01H
   F4FB    CA F4F7              JZ      CRTIN
   F4FE    DBA3                 IN      KEYIN
   F500    E67F                 ANI     7FH
   F502    C9                   RET
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;TTYOS -- TTY output status
                        ;
                        ;pre: TTY device is initialized
                        ;post: return with 0 in A if not ready to transmit
                        ;post: return with 0xFF in A if ready to transmit
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F503                 TTYOS:
   F503    C5                   PUSH    B
   F504    3E00                 MVI     A,CSTAT
   F506    4F                   MOV     C,A
   F507    3E04                 MVI     A,COUT
   F509    5F                   MOV     E,A
   F50A    ED78                 INP     A
                        ;       CMA FOR NEGATIVE LOGIC
   F50C    00                   NOP
   F50D    00                   NOP
   F50E    A3                   ANA     E
   F50F    C1                   POP     B






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 34




   F510    C8                   RZ                      ;RETURN FALSE IF NOT EMPTY
   F511    00                   NOP
   F512    00                   NOP
   F513    3EFF                 MVI     A,0FFH
   F515    C9                   RET                     ;RETURN TRUE
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CRTINIT -- Init serial devices
                        ;
                        ;post: serial device will be initialized
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F516                 CRTINIT:
   F516    3E00                         MVI             A,00H
   F518    32 FA31                      STA             SERL
   F51B    21 F525                      LXI     H,SCCINIT
   F51E    0EA1                 MVI     C,0A1H
   F520    060E                 MVI     B,0EH
   F522    EDB3                 OUTIR
   F524    C9                           RET
                        
   F525                 SCCINIT:
   F525    04                   .BYTE      04H
   F526    44                   .BYTE      044H
   F527    03                   .BYTE      03H
   F528    C1                   .BYTE      0C1H
   F529    05                   .BYTE      05H
   F52A    EA                   .BYTE      0EAH
   F52B    0B                   .BYTE      0BH
   F52C    56                   .BYTE      056H
   F52D    0C                   .BYTE      0CH
   F52E    02                   .BYTE      02H
   F52F    0D                   .BYTE      0DH
   F530    00                   .BYTE      00H
   F531    0E                   .BYTE      0EH
   F532    01                   .BYTE      01H
   F533    0F                   .BYTE      0FH
   F534    00                   .BYTE      00H
   F535    00                   .BYTE      00H
   F536    00                   .BYTE      00H
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;Unimplemented output routines
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: character in C output to device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F537                 UC1OUT:                         ;NOT IMPLEMENTED
   F537                 BATOUT:                         ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;TTYOUT -- output character to TTY
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: character in C output to TTY
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 35




   F537                 TTYOUT:
   F537    CD F503              CALL    TTYOS           ;GET STATUS
   F53A    CA F537              JZ      TTYOUT          ;WAIT UNTIL BUFFER EMPTY
   F53D    59                   MOV     E,C
   F53E    3E01                 MVI     A,CIO
   F540    4F                   MOV     C,A
   F541    7B                   MOV     A,E
   F542    00                   NOP
   F543    00                   NOP
   F544    ED79                 OUTP    A               ;OUTPUT THE DATA
   F546    C9                   RET
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CRTOUT -- output character to serial device
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: character in C output to serial device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F547                 CRTOUT:
   F547    DBA1                 IN      CRTSTAT
   F549    E604                 ANI     04H
   F54B    CA F547              JZ      CRTOUT
   F54E    79                   MOV     A,C
   F54F    D3A3                 OUT     KEYOUT
   F551    C9                   RET
                        
                        ;********************************************************
                        ; I/O Routines for IOBYTE Vectored Devices
                        ;
                        ; These routines deal with IOBYTE vectored devices. By
                        ; default, these are not implemented and fall through
                        ; to the console routines. With the default IOBYTE
                        ; implementation, everything uses the TTY.
                        ;********************************************************
                        
   F552                 LISTST:                         ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CONST -- Get the console status for the selected IOBYTE
                        ;         device
                        ;
                        ;pre: I/O devices are already initialized
                        ;pre: HIOBYTE is at port 0xEF and initialized
                        ;post: status check is handed off to selected device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F552                 CONST:  
   F552    3A FA31              LDA     SERL
   F555    B7                   ORA  A
   F556    CA F4DF              JZ      CRTIS
   F559    C3 F4CC              JMP     TTYIS
                        
                        
   F55C                 READER:                         ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 36




                        ;CONIN -- Get a byte from the console device selected by
                        ;         the current IOBYTE
                        ;
                        ;pre: I/O devices are already initialized
                        ;pre: HIOBYTE is at port 0xEF and initialized
                        ;post: data request is handed off to selected device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F55C                 CONIN:  
   F55C    3A FA31              LDA     SERL
   F55F    B7                   ORA  A
   F560    CA F4F7              JZ      CRTIN
   F563    C3 F4E7              JMP     TTYIN
                        
   F566                 LIST:                           ;NOT IMPLEMENTED
   F566                 PUNCH:                          ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CONOUT -- Send a byte from the console device selected by
                        ;          the current IOBYTE
                        ;
                        ;pre: I/O devices are already initialized
                        ;pre: HIOBYTE is at port 0xEF and initialized
                        ;post: data request is handed off to selected device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F566                 CONOUT:
   F566    3A FA31              LDA     SERL
   F569    B7                   ORA  A
   F56A    CA F547              JZ      CRTOUT
   F56D    C3 F537              JMP     TTYOUT
                        
                        ;********************************************************
                        ; FLOPPY DISK DPH TABLE. FOR THE CONVENIENCE OF THE
                        ; CBIOS THE APB ADDRESS FOR A DISK PRECEDES THE DPH
                        ; FOR THE DISK.
                        ;********************************************************
                        
   F570                 APBBEG: 
   F570    FA68                 .WORD   APB0
   F572    FA88                 .WORD   TRANS0          ;LOGICAL TO PHYSICAL XLATE TAB
   F574    0000                 .WORD   0               ;SCRATCH
   F576    0000                 .WORD   0
   F578    0000                 .WORD   0
   F57A    FC48                 .WORD   DIRBUF          ;DIRECTORY BUFFER
   F57C    FA79                 .WORD   DPB0            ;DISK PARAMETER BLOCK
   F57E    FD34                 .WORD   CSV0            ;CHECKSUM VECTOR
   F580    FCC8                 .WORD   ALV0            ;ALLOCATION VECTOR
                        
   F582    FAE0                 .WORD   APB1
   F584    FB00                 .WORD   TRANS1
   F586    0000                 .WORD   0
   F588    0000                 .WORD   0
   F58A    0000                 .WORD   0
   F58C    FC48                 .WORD   DIRBUF
   F58E    FAF1                 .WORD   DPB1
   F590    FDE0                 .WORD   CSV1






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 37




   F592    FD74                 .WORD   ALV1
                        
   F594    FB58                 .WORD   APB2
   F596    FB78                 .WORD   TRANS2
   F598    0000                 .WORD   0
   F59A    0000                 .WORD   0
   F59C    0000                 .WORD   0
   F59E    FC48                 .WORD   DIRBUF
   F5A0    FB69                 .WORD   DPB2
   F5A2    FE8C                 .WORD   CSV2
   F5A4    FE20                 .WORD   ALV2
                        
   F5A6    FBD0                 .WORD   APB3
   F5A8    FBF0                 .WORD   TRANS3
   F5AA    0000                 .WORD   0
   F5AC    0000                 .WORD   0
   F5AE    0000                 .WORD   0
   F5B0    FC48                 .WORD   DIRBUF
   F5B2    FBE1                 .WORD   DPB3
   F5B4    FF38                 .WORD   CSV3
   F5B6    FECC                 .WORD   ALV3
                        
                        
                        ;********************************************************
                        ; STANDARD APBS, DPBS AND TRANSLATE TABLES. THESE
                        ; TABLES ARE USED BY SELDSK WHEN IT CANNOT FIND A VALID
                        ; DDB ON THE DISK. THE TABLES ARE FOR STANDARD 8" OR 5"
                        ; SINGLE DENSITY FLOPPY DISKS. THIS ALLOWS PROGRAM
                        ; INTERCHANGE WITH OTHER CP/M BASED SYSTEMS WITHOUT
                        ; REQUIRING A DDB TO BE WRITTEN ON EACH DISK.
                        ;********************************************************
                        
                        ;********************************************************
                        ;             8" FLOPPY DISK TABLES.
                        ;********************************************************
                        
   F5B8                 STDDDB: 
   F5B8    01                   .BYTE   00000001B       ;FLAG
   F5B9    0002                 .WORD   2               ;OFF
   F5BB    00                   .BYTE   0               ;SSLEN
   F5BC    1A                   .BYTE   26              ;SLRPS
   F5BD    00                   .BYTE   0               ;USLEN
   F5BE    1A                   .BYTE   26              ;ULRPS
                        
   F5BF    001A                 .WORD   26              ;STANDARD DPB
   F5C1    030700               .BYTE   3,7,0
   F5C4    00F2                 .WORD   242
   F5C6    003F                 .WORD   63
   F5C8    C000                 .BYTE   192,0
   F5CA    0010                 .WORD   16
   F5CC    0002                 .WORD   2
                        
   F5CE    01070D131905         .BYTE   1,7,13,19,25,5,11,17,23
   F5D7    03090F150208         .BYTE   3,9,15,21,2,8,14,20,26
   F5E0    060C1218040A         .BYTE   6,12,18,24,4,10,16,22






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 38




                        
                        
                        
                        ;********************************************************
                        ;            5" FLOPPY DISK TABLES.
                        ;********************************************************
                        
                        
   F5E8    05           ALTDDB: .BYTE   00000101B       ;FLAG
   F5E9    0003                 .WORD   3               ;OFF
   F5EB    00                   .BYTE   0               ;SSLEN
   F5EC    12                   .BYTE   18              ;SLRPS
   F5ED    00                   .BYTE   0               ;USLEN
   F5EE    12                   .BYTE   18              ;ULRPS
                        
   F5EF    0012                 .WORD   18              ;STANDARD DPB
   F5F1    030700               .BYTE   3,7,0
   F5F4    0047                 .WORD   71
   F5F6    003F                 .WORD   63
   F5F8    C000                 .BYTE   192,0
   F5FA    0010                 .WORD   16
   F5FC    0003                 .WORD   3
                        
   F5FE    0105090D1103         .BYTE   1,5,9,13,17,3,7,11,15
   F607    02060A0E1204         .BYTE   2,6,10,14,18,4,8,12,16
                        
                        ;********************************************************
                        ;       SECTOR READ AND WRITE BUFFERS.
                        ;********************************************************
                        
                        ; THE ORIGINAL CBIOS HAD INDEPENDENT READ AND WRITE BUFFERS.
                        ; BOHDAN COULDN'T WORK WITH THE DRI SINGLE BUFFER ALGORITHM,
                        ; SO HE LIMITED SECTOR SIZES TO 512 BYTES, AND HAD THESE LOCAL
                        ; READ AND WRITE BUFFERS. THAT WAY HE COULD IGNORE ANY 
                        ; ALLOCATION BLOCK-SIZE FLAGGING THAT BDOS PROVIDED.
                        ; B. JONES IMPLEMENTED THE DRI DEBLOCKING, COMBINED
                        ; RDBUFF & WRBUFF TO GIVE 1024 BYTE SECTOR SUPPORT.
                        ; RDBUFF & WRBUFF REFERANCES ARE STILL TO BE FOUND
                        ; IN THE PHYSICAL R/W CODE. THEY HAVE BEEN KEPT AS
                        ; FOSILS TO MARK THE ORIGINAL BUFFERING SCHEME.
                        
   F610                 HSTBUF:
   F610                 RDBUFF:
   F610                 WRBUFF:
   F610                 SYSNIT:
                        
                        ; SYSNIT CODE IS DISCARDED AFTER USE.
                        
   F610    CD F4BC      SIGNON: CALL    MSG
   F613    0D0A0A               .BYTE   CR,LF,LF
   F616    446967697461         .ASCII  'Digital Research CP/M 2.2 '
                        
   F630    3634                 .BYTE   (MSIZ)/10+'0',(MSIZ) @10+'0'
   F632    4B2F                 .ASCII  'K/'
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 39




   F634    3536                 .BYTE (((BDOS-6)/1024)/10)+'0',((BDOS-6)/1024) @10+'0'
   F636    4B20545041           .ASCII  'K TPA'
   F63B    0D0A                 .BYTE   CR,LF
                        
   F63D    0D0A                 .BYTE   CR,LF
   F63F    413A20262042         .ASCII  'A: & B: = 8" SDSS Floppies, C: = 5" DDDS Floppy'
   F66E    0D0A                 .BYTE   CR,LF
   F670    53657269616C         .ASCII  'Serial Ports at A2 & A3'
   F687    0D0A                 .BYTE   CR,LF
   F689    5573696E6720         .ASCII  'Using a VersaFloppy II Board with a WD FD1791.'
   F6B7    0D0A                 .BYTE   CR,LF
   F6B9    0D0A00               .BYTE   CR,LF,00H
                        
   F6BC    C9                   RET
                        
   00AD                         NITLEN  ==      .-SYSNIT
                        
   F6BD                 BIOEND:
                        
                        ;********************************************************
                        ;        SHOW HOW MUCH DISK SPACE IS LEFT
                        ;********************************************************
                        
                        ;TOTAL BYTE NEEDED ON BOOT TRACKS ARE
                        ;FROM CCP TO END OF BIOS CODE PLUS LODER + DDB
                        
   1FBD                 TOTSIZ  ==      ((BIOEND-CCP)+128+128)
                        
                        ;SYSTEM SECTORS USED
                        
   000F                 SECUSD  ==      TOTSIZ/512
   1E00                 SECIS   ==      SECUSD*512
                        
                                .IFG    TOTSIZ-SECIS,[
   0010                         SECALL=SECUSD+1
                                ][
                                SECALL=SECUSD
                                ]
                        
                        
                        
                                .IFG    (.-BIOS)-(NSBIOS*128),[
                                .PRNTX  \BIOS EXCEEDS DISK SPACE \
                                ]
                        
                        
                                .DEFINE SBOND[XX]=[.PRNTX /XX BYTES OF SYSTEM TRACKS LEFT/
                                ]
                                .DEFINE SBOD[XX]=[.PRNTX /XX BYTES BEYOND SYSTEM TRACKS/
                                ]       
                        
                                .DEFINE TSIZE[XX]=[
                                .PRNTX  /XX BYTES TOTAL BOOT TRACKS SPACE NEEDED /      ]
                        
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 40




                                .DEFINE SECNED[XX]=[
                                .PRNTX  /XX   OF 18, 512 BYTE SECTORS USED ON SYSTEM TRACKS /]
                        
                                .IF1,[
                                .IFG    (NSBIOS*128)-(.-BIOS),[
                                SBOND   \(NSBIOS*128)-(.-BIOS)
                                TSIZE   \TOTSIZ
                                .RADIX  10
                                SECNED  \SECALL
                                ][
                                SBOD    \(.-BIOS)-(NSBIOS*128)
                                ]
                                ]
                        
                        ;********************************************************
                        ; END OF BIOS INSTRUCTIONS AND CONSTANTS. BEGINNING
                        ; OF WORK AREA.
                        ;********************************************************
                        
                        ; 1024 BYTE HOST BUFFER ENDS HERE       
                        
   FA10                         .LOC    HSTBUFF+1024
                        
                        ;********************************************************
                        ; CP/M CALL PARAMETER STORAGE. CP/M SETS THE LOGICAL
                        ; PARAMETERS BY PRELIMINARY CALLS BEFORE CALLING THE
                        ; READ OR WRITE ROUTINES. THE CP/M I/O ROUTINES SET
                        ; AND USE THE REMAINING VARIABLES.
                        ;********************************************************
                        
   FA10                 DMAFLG: .BLKB   1               ;CONTROLLER TYPE FLAG   
   FA11                 SEKSEC: .BLKB   2               ;LOGICAL SECTOR TO R/W
   FA13                 DMAADD: .BLKB   2               ;LOGICAL & ACTUAL CP/M DMA ADDR
   FA15                 CREC:   .BLKB   1               ;CURRENT RECORD WITHIN SECTOR
                        
                        
                        ;********************************************************
                        ; PHYSICAL DISK I/O PARAMETER STORAGE. THESE PARAMETERS
                        ; MUST BE SET BEFORE CALLING THE FLOPPY DISK PHYSICAL
                        ; READ OR WRITE ROUTINES.
                        ;********************************************************
                        
   FA16                 PDISK:  .BLKB   1               ;PHYSICAL DISK FOR NEXT I/O
   FA17                 PTRACK: .BLKB   2               ;PHYSICAL TRACK FOR NEXT I/O
   FA19                 PSECT:  .BLKB   2               ;PHYSICAL SECTOR FOR NEXT I/O
   FA1B                 PDMA:   .BLKB   2               ;PHYSICAL BUFFER ADDR, NEXT I/O
                        
   FA1D                 CTRACK: .BLKB   2
   FA1F                 CSECT:  .BLKB   2
                        
                        
                        
                        ;********************************************************
                        ;    GENERAL PURPOSE VARIABLES ARE STORED HERE.
                        ;********************************************************






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 41




                        
   FA21                 RETRY:
   FA21                 RMICRO: .BLKB   1               ;MICRO FDC RETRY COUNT
   FA22                 RMACRO: .BLKB   1               ;MACRO FDC RETRY COUNT
   FA23                 ADISK:  .BLKB   1               ;DISK NUMBER OF DISK AT ATABLE
   FA24                 OLDFLO: .BLKB   1               ;OLD FLOPPY DRIVE NUMBER
   FA25                 PCMD:   .BLKB   1               ;ACTUAL FLOPPY READ/WRITE CMD
   FA26                 ORWCMD: .BLKB   1               ;LAST R/W OUTPUT TO CMD REG
   FA27                 DPHADR: .BLKB   2               ;DPH ADDRESS FOR CURRENT DISK
   FA29                 APBADR: .BLKB   2               ;APB ADDRESS FOR CURRENT DISK
   FA2B                 WRTYPE: .BLKB   1               ;TYPE OF WRITE
   FA2C                 D3SNO:  .BLKB   1               ;CURRENT NO WAIT VF2 BYTE
   FA2D                 D3SWT:  .BLKB   1               ;CURRENT WAIT VF2 BYTE
   FA2E                 SAVADR: .BLKB   2               ;STD OR ALT DDB ADDRESS
   FA30                 MRML:   .BLKB   1               ;MACRO RETRY MAJOR LOOP
   FA31                 SERL:   .BLKB   1               ;SERIAL OUTPUT
                        
                        
                        ;********************************************************
                        ; ERROR INFORMATION STORAGE. VARIOUS ROUTINES USE THIS
                        ; AREA TO STORE KEY VARIABLES RELATING TO THE VF2
                        ; CONTROLLER AND THE 179X CHIP. 
                        ;********************************************************
                        
   FA32                 EINFO:
   FA32                 ITRACK: .BLKB   1               ;LAST INPUT FROM TRACK REG
   FA33                 ISECT:  .BLKB   1               ;LAST INPUT FROM SECTOR REG
   FA34                 ISTAT:  .BLKB   1               ;LAST INPUT FROM STATUS REG
   FA35                 ACTIVE: .BLKB   1               ;SHOWS WHICH ROUTINE HAD ERROR
   FA36                 OD3S:   .BLKB   1               ;LAST OUTPUT TO VF2 CTRL BYTE
   FA37                 OCMD:   .BLKB   1               ;LAST OUTPUT TO CMD REG
   FA38                 SIDEID: .BLKB   1               ;LAST SIDE SELECTED
                        
   0007                 EILEN   ==      .-EINFO
                        
                        
                        
                        ;********************************************************
                        ;*   ALLOCATION VALUES FOR SELECTED DISKS ARE NEXT
                        ;********************************************************
                        
   FA39                 ALOCSZ: .BLKB   4               ;BSH VALUE FOR 4 DRIVES
   FA3D                 ALOCA:  .BLKB   1               ;RECORDS/BLOCK FOR SELECTED DRIVE
                        
                                ;UNALLOCATED PARAMETERS FOLLOW
                        
                        
   FA3E                 UNACNT: .BLKB   1               ;UNALLOCATED RECORD COUNT
                        
   FA3F                 UNADSK: .BLKB   1               ;      "     DISK #     
   FA40                 UNATRK: .BLKB   2               ;      "     TRACK #
   FA42                 UNASEC: .BLKB   2               ;      "     SECTOR #
                        
   FA44                 NEWSEC: .BLKB   2               ;CP/M SET SECTOR
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 42




   FA46                 RSFLAG: .BLKB   1               ;READ SECTOR FLAG
   FA47                 READOP: .BLKB   1               ;READ = 0, WRITE = 1
   FA48                 HSTACT: .BLKB   1               ;0 = HOST NOT ACTIVE
   FA49                 HSTWRT: .BLKB   1               ;HOST WRITTEN FLAG
                        
                        
   FA4A                 HSTDSK: .BLKB   1
   FA4B                 HSTTRK: .BLKB   2
   FA4D                 HSTSEC: .BLKB   2
                        
   FA4F                 SEKDSK: .BLKB   1
   FA50                 SEKTRK: .BLKB   2
   FA52                 SEKHST: .BLKB   2
                        
   0016                         UNALEN  ==      .-UNACNT
                        
                        
                        ;********************************************************
                        ; APB COPY FOR CURRENT DISK. THE APB CONTAINS SEVERAL
                        ; IMPORTANT BYTES NEEDED TO CONTROL THE ACTIVE DISK
                        ; DRIVE. THE EXACT LENGTH AND ORDERING OF THESE ENTRIES
                        ; IS CRITICAL, SO CHANGES MUST BE MADE WITH CARE. ONLY
                        ; THE FLAG BYTE HAS ANY MEANING FOR A HARD DISK.
                        ;********************************************************
                        
   FA54                 ATABLE:
   FA54                 SS0N:   .BLKB   1               ;SYSTEM TRACK VF2 CONTROL BYTES
   FA55                 SS0W:   .BLKB   1
   FA56                 SS1N:   .BLKB   1
   FA57                 SS1W:   .BLKB   1
   FA58                 US0N:   .BLKB   1               ;USER TRACK VF2 CONTROL BYTES
   FA59                 US0W:   .BLKB   1
   FA5A                 US1N:   .BLKB   1
   FA5B                 US1W:   .BLKB   1
   FA5C                 TRACK:  .BLKB   1               ;CURRENT TRACK
   FA5D                 SPEED:  .BLKB   1               ;DRIVE SEEK SPEED
   FA5E                 FLAG:   .BLKB   1               ;FLAG BYTE
   FA5F                 OFF:    .BLKB   2               ;NUMBER OF SYSTEM TRACKS
   FA61                 SSLEN:  .BLKB   1               ;SECTOR LENGTH, SYSTEM
   FA62                 SLRPS:  .BLKB   1               ;RECORDS PER SIDE, SYS TRACKS
   FA63                 USLEN:  .BLKB   1               ;SECTOR LENGTH, USER TRACKS
   FA64                 ULRPS:  .BLKB   1               ;RECORDS PER SIDE, USER TRACKS
                        
   0011                 ALEN    ==      .-ATABLE        ;ATABLE LENGTH
                        
   FA65                 CHKRDS: .BLKB   1               ;READ CHECK RETRIES
   FA66                 DEDMA:  .BLKB   2               ;DE FOR DMA OP.
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK APBS, DPBS AND TRANSLATE TABLES. THE APB
                        ; FOR EACH DRIVE IS HERE, FOLLOWED BY THE DPB, FOLLOWED
                        ; BY THE TRANSLATE TABLE. EXTERNAL ROUTINES NEEDING TO
                        ; ACCESS THE APB ASSUME THAT IT IMMEDIATELY PRECEDES
                        ; THE DPB.






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 43




                        ;********************************************************
                        
   FA68                 APB0:   .BLKB   ALEN            ;AUXILIARY PARAMETER BLOCK
   FA79                 DPB0:   .BLKB   15              ;DISK PARAMETER BLOCK
                        
   000F                 DPBLEN  ==      .-DPB0
                        
   FA88                 TRANS0: .BLKB   88              ;TRANSLATE TABLE
                        
   0058                 TRALEN  ==      .-TRANS0
   0078                 APBDIS  ==      .-APB0
                        
                        
   FAE0                 APB1:   .BLKB   ALEN
   FAF1                 DPB1:   .BLKB   15
   FB00                 TRANS1: .BLKB   88
                        
                        
   FB58                 APB2:   .BLKB   ALEN
   FB69                 DPB2:   .BLKB   15
   FB78                 TRANS2: .BLKB   88
                        
                        
   FBD0                 APB3:   .BLKB   ALEN
   FBE1                 DPB3:   .BLKB   15
   FBF0                 TRANS3: .BLKB   88
                        
                        
                        
                        
                        ;********************************************************
                        ; CP/M WORK AREA. USED BY CP/M FOR DIRECTORY
                        ; OPERATIONS, FLOPPY DISK ALLOCATION VECTORS,
                        ; AND FLOPPY DISK CHANGED DISK CHECKSUMS.
                        ;********************************************************
                        
   FC48                 DIRBUF: .BLKB   128             ;DIRECTORY OPERATION BUFFER
                        
   FCC8                 ALV0:   .BLKB   108             ;ALLOCATION VECTOR
   FD34                 CSV0:   .BLKB   64              ;CHECKSUM VECTOR
                        
   FD74                 ALV1:   .BLKB   108
   FDE0                 CSV1:   .BLKB   64
                        
                        
   FE20                 ALV2:   .BLKB   108
   FE8C                 CSV2:   .BLKB   64
                        
   FECC                 ALV3:   .BLKB   108
   FF38                 CSV3:   .BLKB   64
                        
   FF78                 LASLOC:
   0968                 WRKSP   ==      .-HSTBUF
                        
                        ; END OF WORK AREA.






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 44




                        
   3180                 OFFST   ==      1F80H -BIOS
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;The following assembler directives give important
                        ;information about the size and location of the BIOS
                        ;after assembly. In particular, the printout will warn if
                        ;the BIOS Is too large for the allocated space (default 
                        ;3K). You will need the BIOS OFFSET and MOVCPM VALUE.
                        ;
                        ;The biggest change from the original is that we no 
                        ;longer have a console I/O parameters table, so there is
                        ;no need to print its location.
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        
                                .IF1,[
                        
                        
                                .DEFINE BADMEM[XX]=[
                                .PRNTX  / !! ** BIOS EXCEEDS MEMORY SIZE BY XX BYTES, SET 'BIOSIZ' LARGER ** !!/        ]
                        
                                .DEFINE OKMEM[XX]=[
                                .PRNTX  /XX   BYTES OF MEMORY LEFT BY BIOS/     ]
                        
                                .DEFINE SBIOS[XX]=[
                                .PRNTX  /XX IS START OF BIOS/                   ]
                        
                                .DEFINE LASTM[XX]=[
                                .PRNTX  /XX IS LAST LOCATION USED/              ]
                        
                                .DEFINE BDOSL[XX]=[
                                .PRNTX  /XX IS START OF BDOS/                   ]
                        
                                .DEFINE CCPL[XX]=[
                                .PRNTX  /XX IS START OF CCP/                    ]
                        
                                .DEFINE LEFMEM[XX]=[
                                .PRNTX  /XX IS 1st FREE ADDRESS AFTER BIOS/     ]
                        
                                .DEFINE WORKSP[XX]=[
                                .PRNTX  /XX BYTES IS WORKSPACE USED BY BIOS/]
                        
                                .DEFINE OFFSET[XX]=[
                                .PRNTX  /XX IS BIOS OFFSET /                    ]
                        
                        
                                .DEFINE MOVCPM[XX]=[
                                .PRNTX  /XX   IS MOVCPM VALUE /                 ]
                        
                                .DEFINE CODEND[XX]=[
                                .PRNTX  /XX IS LAST BIOS RUNTIME CODE OR STATIC DATA LOCATION /]
                        
                                .DEFINE WRKEND[XX]=[
                                .PRNTX  /XX IS END OF DISCARDED INITIALIZATION CODE /   ]
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 45




                                .IFG    (.-BIOS)-(6*256+BIOSIZ*1024),[
                        
                                BADMEM  \((.-BIOS)-(6*256+BIOSIZ*1024))
                        
                                .RADIX  16
                                CCPL    \CCP
                                BDOSL   \BDOS
                                SBIOS   \BIOS
                                CODEND  \HSTBUF-1
                                WRKEND  \BIOEND
                                .RADIX  10
                                WORKSP  \WRKSP
                                .RADIX  16
                                LASTM   \.-1
                                LEFMEM  \.
                                OFFSET  \OFFST
                                .RADIX  10
                                MOVCPM  \MOVEIT
                        
                                        ][
                        
                                OKMEM   \ (MSIZ*1024)-LASLOC
                        
                        
                                .RADIX  16
                                CCPL    \CCP
                                BDOSL   \BDOS
                                SBIOS   \BIOS
                                CODEND  \HSTBUF-1
                                WRKEND  \BIOEND
                                .RADIX  10
                                WORKSP  \WRKSP
                                .RADIX  16
                                LASTM   \.-1
                                LEFMEM  \.
                                OFFSET  \OFFST
                                .RADIX  10
                                MOVCPM  \MOVEIT
                        
                        
                                        ]
                                        ]
                        
                        
                        
                        
                        
                                .END










                                                                 