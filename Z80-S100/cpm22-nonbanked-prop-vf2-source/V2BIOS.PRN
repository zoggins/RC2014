


TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 1




                        ;********************************************************
                        ;*                     V2BIOS.ASM                       *
                        ;*               FLOPPY CBIOS FOR CP/M 2.XX             *
                        ;*                     DEC 15  2003                     * 
                        ;********************************************************
                        
                        ; WRITTEN BY B. Y. TASHCHUK 1980
                        ;==================================================
                        ; MANY THANKS TO BOHDAN TASHCHUK FOR THIS CODE
                        ; AND HIS QUALITY SUPPORT OF THOSE WHO USED IT
                        ;==================================================
                        ;
                        ; B. JONES 1981
                        ; - ADDED SUPPORT FOR 9, 512 BYTE SECTORS ON
                        ;   SYSTEM TRACKS TO SUPPORT LARGER BIOS TYPES
                        ;   (MORE DRIVES, HARD DISKS, SPECIAL FUNCTIONS ETC.)
                        ; - ADDED 1024 BYTE SECTOR SUPPORT
                        ;   THIS SPEEDS UP DISK OPERATIONS BY 70% AND
                        ;   ADDS 220K MORE USEABLE SPACE
                        ; - ADDED MULTIPLE ALLOCATION BLOCK SIZE SUPPORT
                        ; - ADDED VERBOSE ASSEMBLY-TIME STRUCTURE INFORMATION
                        ;   RAM AND SECTOR USEAGE, MOVCPM VALUE AND DDT R VALUE
                        ;   END-OF-CODE/STATIC DATA AND TOTAL SIZE INFO
                        ; - ADDED 'CONTINUE' FOR HARD MEDIA DEFECTS
                        ;   THIS FEATURE ALLOWS ONE TO CONTINUE DISK
                        ;   OPERATIONS, EVEN THOUGH THE MEDIA HAS PERMINANT
                        ;   BAD SPOTS. LETS YOU RECOVER FILES YOU REALLY WANT!
                        ; - ADDED REMOTE SYSTEM CONTROL VIA MODEM
                        ; - ADDED SIMULTANEOUS TARBELL DD DMA FDC SUPPORT
                        ; - ADDED SPINWRITER SHIFT TESTING
                        ; - ADDED MULTI 'FOREIGN' DISK FORMAT SUPPORT
                        ;
                        ; B. JONES SEPT 2003
                        ; - ADDED Z80 DMA SUPPORT
                        ; - ADDED FULL FDC E.O.O. INTERRUPT SUPPORT
                        ;
                        ; B.JONES NOV. 2003
                        ; - ADDED VERSAFLOPPY II SUPPORT
                        ; - ADDED SUPPORT FOR FOUR DRIVES, UP TO 1.66 MBYTES EACH
                        ; - REMOVED REMOTE SYSTEM CONTROL
                        ; - REMOVED TARBELL DD DMA FDC SUPPORT
                        ; - REMOVED SPINWRITER SHIFT TESTING
                        ; - REMOVED Z80 DMA SUPPORT, THIS VERSION
                        ; - REMOVED FDC E.O.O. INTERRUPT SUPPORT, THIS VERSION
                        ; - REMOVED 'FOREIGN' FORMAT SUPPORT, THIS VERSION
                        ; - ADDED Z3S & VF II TEST & CONFIGURE AT STARTUP  
                        ;
                        ; C. MALLERY MAR. 2022
                        ; - Changed to use FD1791 instead of FD1795
                        ; - Merged in some of Glitch Works Cleanup
                        
                                .PABS
                                .PHEX
                                .XLINK
                                .Z80






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 2




                        
   0022                 CPVERS  ==      22H             ;CP/M VERSION NUMBER
   0000                 BIVERS  ==      0H              ;BIOS VERSION NUMBER
   FFFF                 TRUE    ==      -1              ;TRUE AND FALSE VALUES
   0000                 FALSE   ==      #TRUE
   FFFF                 VF2     ==      TRUE            ;THIS VERSION FOR PIO
                        
                        ;********************************************************
                        ; CP/M System Sizes and Options
                        ;********************************************************
                        ; DISK DRIVE OPTIONS FIRST
                        
   0004                 NODSK   ==      4       ;NUMBER OF DISKS ALLOWED
   0000                 HLDOPT  ==      0       ;1 KEEP HEADS LOADED, 0 FOR UNLOADS
                        
                        ; CP/M MEMORY CALCULATIONS AND CONSTANTS
                        
                        ;================= NOTE ====================
                        ;*******************************************
                        ;BIOS SIZE FUNCTION (* 1024 BYTES)  NEXT
                        ;*******************************************
                        ;================= NOTE ====================
                        
   0003                 BIOSIZ  ==      3       ;THIS BIOS FITS WITHIN 3K
                                                ;IF YOU ENLARGE THE BIOS, YOU WILL INCREASE
                                                ;BIOSIZ BY 1 FOR EACH ADDITIONAL KILOBYTE, OR
                                                ;PART THEREOF.
                        
   0040                 MSIZ    =\      \ENTER TOTAL MEMORY SIZE IN KILOBYTES EG: 48 OR 64 \
                        
                        ;MSIZ   ==      64              ;ACTUAL AVAILABLE MEMORY SIZE
   003D                 MSIZE   ==      MSIZ-BIOSIZ     ;SUBTRACT BIOS SIZE
   A400                 BIAS    ==      (MSIZE-20)*1024 ;THE DRI BIAS FACTOR
   D800                 CCP     ==      3400H+BIAS      ;BASE OF CCP
   E006                 BDOS    ==      CCP+806H        ;BASE OF BDOS
   EE00                 BIOS    ==      CCP+1600H       ;BASE OF BIOS
   F406                 MOVECP  ==      BDOS+1400H      ;MOVECPM ADJUST
   003D                 MOVEIT  ==      MOVECP/1024
   002C                 NSECTS  ==      (BIOS-CCP)/128  ;WARM START SECTOR CNT, 128 BYTES SECTORS
   001A                 NSBIOS  ==      70-NSECTS       ;MAX SECTORS FOR CBIOS & CP/M
                                                        ;BASED ON HAVING 9, 512 BYTE SECTORS
                                                        ;ON THE SYSTEM TRACKS (0 & 1)
                                                        ;WITH 70 OF THOSE 128 BYTE LOGICAL
                                                        ;SECTORS BEING USEABLE FOR CP/M USE
                                                        ;72 LOGICAL SECTORS IS ACTUAL, BUT
                                                        ;ONE IS THE SYSTEM LOADER, AND ONE IS
                                                        ;A DISK DESCRIPTER BLOCK (DDB), THUS
                                                        ;70 ARE AVAILABLE FOR CP/M & BIOS
   0004                 CPMDSK  ==      0004H           ;CURRENT DISK NUMBER ADDR
   0003                 IOBYTE  ==      0003H           ;INTEL I/O BYTE ADDR
                        
                        ;********************************************************
                        ; Control Character Equates
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 3




   000D                 CR      ==      13
   000A                 LF      ==      10
   0007                 BELL    ==      7
                        
                        ;********************************************************
                        ; Masks for IOBYTE 
                        ;********************************************************
                        
                        ;                KEYBOARD & SCREEN
                        
                        ; MAIN CONSOLE IS SD SYSTEMS VDB-8024
                        
   0000                 CSTAT           ==      0
   0000                 KBSTAT          ==      0
   0001                 CIO                     ==      1
   0001                 KBIO            ==      1
   0004                 COUT            ==      4
   0002                 KIN                     ==      2
                        
                        ; Serial Device is S100Computers Serial Board v4.2
                        
   00A1                 CRTSTAT         ==      0A1H
   00A1                 KEYSTAT         ==      0A1H
   00A3                 KEYIN           ==      0A3H
   00A3                 KEYOUT          ==      0A3H
                        
   00EF                 HIOBYTE ==      0EFH            ;IOBYTE on S100Computers SMB
   0003                 CMSK    ==      00000011B       ;IOBYTE MASK FOR CONSOLE
   00C0                 LMSK    ==      11000000B       ;IOBYTE MASK FOR LIST
                        
                        ;********************************************************
                        ; Floppy Disk Equates
                        ;********************************************************
                        
                        ;********************************************************
                        ;              PIO CONTROLLER PORTS
                        ;********************************************************
                        
   0053                 DCMD    ==      53H             ;VF2 COMMAND/CONTROL PORT
   0054                 W               ==      54H             ;WDC 179X ADDRESS
   0054                 WCMD    ==      W+0             ;COMMAND PORT
   0054                 WSTAT   ==      W+0             ;STATUS PORT
   0055                 WTRACK  ==      W+1             ;TRACK REG
   0056                 WSECT   ==      W+2             ;SECTOR REG
   0057                 WDATA   ==      W+3             ;DATA I/O REG
                        
                        ;********************************************************
                        ;            COMMON 179X CONTROLLER COMMANDS
                        ;********************************************************
                        
   0008                 WHOME   ==      00001000B       ;HOME COMMAND
   0080                 WREAD   ==      10000000B       ;READ SECTOR COMMAND
   00A0                 WWRITE  ==      10100000B       ;WRITE SECTOR COMMAND
   0018                 WSEEK   ==      00011000B       ;SEEK TO GIVEN TRACK COMMAND
   0010                 WUNLD   ==      00010000B       ;SEEK AND UNLOAD HEAD COMMAND






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 4




   0018                 WLOAD   ==      00011000B       ;SEEK AND LOAD HEAD COMMAND
                        
                        
                        ;********************************************************
                        ;             COMMON 179X CONTROLLER STATUS
                        ;********************************************************
                        
   0000                 WBBUSY  ==      0               ;179X BUSY STATUS BIT
   0001                 WBSID1  ==      1               ;SIDE SELECT FLAG COMMAND BIT
   0002                 WBDEL   ==      2               ;HEAD SETTLE DELAY COMMAND BIT
   0003                 WBSIDE  ==  3           ;EXPECT SIDE BIT
   0005                 WBWRIT  ==      5               ;READ/WRITE DISTINGUISHING BIT
   0004                 WBRNF   ==      4               ;RECORD NOT FOUND STATUS BIT
   009C                 WSREAD  ==      10011100B       ;READ SECTOR STATUS MASK
   00FC                 WSWRIT  ==      11111100B       ;WRITE SECTOR STATUS MASK
   0098                 WSSEEK  ==      10011000B       ;SEEK STATUS MASK
   00D0                 WFCINT  ==      11010000B       ;FORCE INTERRUPT COMMAND
                        
                        
                        ;********************************************************
                        ; PRIMARY JUMP TABLE. ALL CALLS FROM CP/M TO THE CBIOS
                        ; COME THROUGH THIS TABLE.
                        ;********************************************************
                        
   EE00                         .LOC    BIOS
                        
                        
   EE00    C3 EE52              JMP     CBOOT           ;COLD BOOT
   EE03    C3 EE6A      WBOOTE: JMP     WBOOT           ;WARM BOOT
   EE06    C3 F548              JMP     CONST           ;CONSOLE STATUS
   EE09    C3 F552              JMP     CONIN           ;CONSOLE CHARACTER IN
   EE0C    C3 F55C      BIOOUT: JMP     CONOUT          ;CONSOLE CHARACTER OUT,
   EE0F    C3 F55C              JMP     LIST            ;LIST CHARACTER OUT
   EE12    C3 F55C              JMP     PUNCH           ;PUNCH CHARACTER OUT
   EE15    C3 F552              JMP     READER          ;READER CHARACTER IN
   EE18    C3 F006              JMP     HOME            ;MOVE HEAD TO HOME POSITION
   EE1B    C3 EF18              JMP     SELDSK          ;SELECT DISK
   EE1E    C3 F015              JMP     SETTRK          ;SET TRACK NUMBER
   EE21    C3 F01A              JMP     SETSEC          ;SET SECTOR NUMBER
   EE24    C3 F01F              JMP     SETDMA          ;SET DMA ADDRESS
   EE27    C3 F02F              JMP     READ            ;READ DISK
   EE2A    C3 F042              JMP     WRITE           ;WRITE DISK
   EE2D    C3 F548              JMP     LISTST          ;RETURN LIST STATUS
   EE30    C3 F024              JMP     SECTRA          ;SECTOR TRANSLATE
                        
                        
                        
                        ;********************************************************
                        ; STEP SPEED TABLE. THIS TABLE TELLS THE BIOS WHAT SIZE
                        ; OF DRIVE IS AT EACH ADDRESS AND WHAT TRACK TO TRACK
                        ; STEPPING SPEED TO USE FOR THAT DRIVE. THE BITS MEAN
                        ; THE FOLLOWING:
                        ;********************************************************
                        
                        ;       1000 0011






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 5




                        ;       ^      ^
                        ;       :      +- THE 179X STEP SPEED BITS. THESE ARE:
                        ;       :               VALUE   8"      5"
                        ;       :               00      3 MS    6 MS
                        ;       :               01      6 MS    12 MS
                        ;       :               10      10 MS   20 MS
                        ;       :               11      15 MS   30 MS
                        ;       :
                        ;       +-------- 0=8 INCH DISK AT THIS ADDRESS,
                        ;                 1=5 INCH DISK AT THIS ADDRESS.
                        
   EE33                 SPDTAB:
   EE33    00                   .BYTE   00H             ;DRIVE A
   EE34    00                   .BYTE   00H             ;DRIVE B
   EE35    80                   .BYTE   80H             ;DRIVE C
   EE36    80                   .BYTE   80H             ;DRIVE D
                        
                        ; Initial parameters on startup
   EE37    00           INITIO: .BYTE   00000000B       ;Initial IOBYTE, everything to TTY
   EE38    00                           .BYTE   0H                      ;INITIAL DISK AFTER COLD BOOT
                        
   EE39    04           HOMER:  .BYTE   4               ;ALLOW 3 USER DISK FIXES
   EE3A    0A           RETRYIT:.BYTE   10              ;RETRY 10 TIMES EACH
                        
                        ;********************************************************
                        ; VersaFloppy II control table: this table contains those
                        ; bits in the VF2 control by te which select the
                        ; operating mode. These bits are combined with address
                        ; control bits to form a complete VF2 control byte. The
                        ; bits are defined as follows:
                        ;********************************************************
                        
                        ;       1111 0000
                        ;       ^^^^ ^
                        ;       :::: +- THESE BITS IN ADDRESS CONTROL TABLE
                        ;       ::::
                        ;       :::+--- 0=SIDE 1, 1=SIDE 0
                        ;   ::+---- 1=8 INCH DISK, 0=5 INCH DISK
                        ;       :+----- 1=SINGLE DENSITY (FM), 0=DOUBLE (MFM)
                        ;       +------ 0=ENABLE HARDWARE WAIT, 1=DISABLE
                        
   EE3B                 OPRTAB:
                        
                        ; FOR VERSAFLOPPY II
                        ; SIZE &         
                        ; DENSITY        
                        
   EE3B                 C8S:    
   EE3B    F0                   .BYTE   11110000B       ;SIDE 0, NO WAIT
   EE3C    70                   .BYTE   01110000B       ;SIDE 0, WAIT
   EE3D    E0                   .BYTE   11100000B       ;SIDE 1, NO WAIT
   EE3E    60                   .BYTE   01100000B       ;SIDE 1, WAIT
                        
   EE3F                 C5S:    
   EE3F    D0                   .BYTE   11010000B






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 6




   EE40    50                   .BYTE   01010000B
   EE41    C0                   .BYTE   11000000B
   EE42    40                   .BYTE   01000000B
                        
   EE43                 C8D:    
   EE43    B0                   .BYTE   10110000B       ;SIDE 0, NO WAIT
   EE44    30                   .BYTE   00110000B       ;SIDE 0, WAIT
   EE45    A0                   .BYTE   10100000B       ;SIDE 1, NO WAIT
   EE46    20                   .BYTE   00100000B       ;SIDE 1, WAIT
                        
   EE47                 C5D:    
   EE47    90                   .BYTE   10010000B
   EE48    10                   .BYTE   00010000B
   EE49    80                   .BYTE   10000000B
   EE4A    00                   .BYTE   00000000B
                        
                        ;********************************************************
                        ; VersaFloppy II address control table. This table
                        ; contains those bits in the VF2 byte which select the
                        ; active disk. These bits are combined with operating
                        ; control bits to form a complete VF2 control byte.
                        ;********************************************************
                        
   EE4B                 ADRTAB: 
   EE4B    0E                   .BYTE   1110B           ;DRIVE A
   EE4C    0D                   .BYTE   1101B           ;DRIVE B
   EE4D    0B                   .BYTE   1011B           ;DRIVE C
   EE4E    07                   .BYTE   0111B           ;DRIVE D
                        
                        ;********************************************************
                        ; System Configuration Option Bytes
                        ;********************************************************
                        
   EE4F                 CFGOPT:
   EE4F    04                   ACTDSK: .BYTE   NODSK   ;NUMBER OF DISKS SUPPORTED
                                                                                ;NORMALLY 2 DRIVES
   EE50    00                   HLOPT:  .BYTE   HLDOPT  ;SINGLE OR DUAL HEAD LOAD
   EE51    04                   KBIT:   .BYTE   4               ;AUTO-RECAL COUNTER
                        
                        ;********************************************************
                        ; COLD BOOT ENTRY POINT. THE FIRST FOUR INSTRUCTIONS
                        ; SHOULD NOT BE CHANGED.
                        ;********************************************************
                        
   EE52                 CBOOT:  
   EE52    31 0080              LXI     SP,80H                  ;VALIDATE THE STACK POINTER
   EE55    2A EE37              LHLD    INITIO          ;SET INITIAL I/O BYTE
   EE58    22 0003              SHLD    IOBYTE
                        
   EE5B    DBEF                 IN      HIOBYTE
   EE5D    E620                 ANI 020H
   EE5F    CC F511              CZ CRTINIT              
                        
   EE62    CD F606              CALL    SYSNIT          ;ROUTINE IN HOST BUFFER SPACE
                                                                        ;IS DISCARDED AFTER THIS CALL






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 7




                        
   EE65    CD EEE9              CALL    BCOMM           ;Common setup steps
   EE68    1844                 JMPR    GOCPM           ;PREPARE TO GO TO CCP
                        
                        ;********************************************************
                        ; WARM BOOT ENTRY POINT. IN ORDER TO WARM BOOT FROM
                        ; A FLOPPY DISK, CP/M MUST BE READ FROM TRACKS 0 AND 1.
                        ; THE PHYSICAL SECTORS ON THE SYSTEM TRACKS ARE ALWAYS
                        ; 512 BYTES LONG, BUT CP/M DOES NOT ALWAYS OCCUPY THE
                        ; ENTIRE SECTOR. THE SECTOR LAYOUT FOR BOTH 8" AND 5"
                        ; DISKS IS:
                        ;
                        ;       TRACK 0, SECTOR 1, BYTES 0 THRU 127 - COLD
                        ;          START LOADER
                        ;       TRACK 0, SECTOR 1, BYTES 128 THRU 511 - CP/M
                        ;       TRACK 0, SECTOR 2 THRU SECTOR 7 - CP/M
                        ;       TRACK 0, SECTOR 8, BYTES 0 THRU 383 - CP/M
                        ;       TRACK 0, SECTOR 8, BYTES 384 THRU 511 - DDB
                        ;       TRACK 1, SECTOR 1 THRU SECTOR 9 - CP/M,
                        ;          FOLLOWED BY THE CBIOS
                        ;
                        ; THE SYSTEM TRACKS ON 8" DISKS ARE RECORDED IN SINGLE
                        ; DENSITY, WHILE THE SYSTEM TRACKS ON 5" DISKS ARE
                        ; RECORDED IN DOUBLE DENSITY. ONLY SIDE 0 OF A 
                        ; DISK IS USED FOR THE SYSTEM.
                        ;********************************************************
                        
   EE6A                 WBOOT:  
   EE6A    F3                   DI
   EE6B    31 0080              LXI     SP,80H                  ;VALIDATE THE STACK POINTER
   EE6E    CD F134              CALL    CLOSE
   EE71                 EEXIT:  
   EE71    CD EEE9              CALL    BCOMM           ;Common setup steps
                        
   E700                 ..JOG   ==      CCP+(30*128)    ;LAST GOOD ADDRESS
                                                        ;= 32 -(LOADER + DDB)
                        
   EE74    AF                   XRA     A               ;READ FROM TRACK 0
   EE75    01 0901              LXI     B,9<8+1         ;READ 9 SECTORS STARTING AT #1
   EE78    21 D780              LXI     H,CCP-128       ;START HERE TO SKIP LOADER
   EE7B    CD EECF              CALL    READM
                        
                        ;NOW COPY DOWN SECTOR #9
                        
   EE7E    21 E780              LXI     H,CCP+(31*128)  ;LAST GOOD SECTOR STARTS HERE
   EE81    11 E700              LXI     D,CCP+(30*128)  ;AND GOES OVER DDB HERE
   EE84    01 0200              LXI     B,4*128         ;4 CPM RECORDS
   EE87    EDB0                 LDIR                    ;MOVE IT NOW
                        
   000A                 ..LEFT  ==      NSECTS-34
   0002                 ..PART  ==      ..LEFT@4
   0002                 ..FULL  ==      ..LEFT/4
   E900                 ..ADDR  ==      CCP+(128*(NSECTS-..LEFT))
   ED00                 ..LAST  ==      ..ADDR+(..FULL*512)
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 8




   EE89    3E01                 MVI     A,1             ;READ FROM TRACK 1
   EE8B    01 0201              LXI     B,..FULL <8+1   ;READ FULL SECTORS
   EE8E    21 E900              LXI     H,CCP+(34*128)  ;STARTING AFTER 34 CP/M RECORDS
   EE91    CD EECF              CALL    READM
                        
                                .IFN    ..PART,[
                        
   EE94    3E01                 MVI     A,1             ;READ FROM TRACK 1
   EE96    01 0103              LXI     B,1<8+(1+..FULL);READ ONE LAST SECTOR
   EE99    21 F606              LXI     H,RDBUFF        ;INTO READ BUFFER FOR NOW
   EE9C    CD EECF              CALL    READM
                        
   EE9F    01 0100              LXI     B,..PART*128
   EEA2    11 ED00              LXI     D,..LAST        ;SECTOR GOES HERE
   EEA5    21 F606              LXI     H,RDBUFF        ;SECTOR COMES FROM READ BUFFER
   EEA8    EDB0                 LDIR                    ;MOVE THE SECTOR
                        
                                ]
                        
                        ;********************************************************
                        ;THE FOLLOWING RESETS THE CCP BUFFER ON WARMBOOT
                        ;TO KILL AUTO-START ROUTINES
                        ;********************************************************
                        
   EEAA    AF                   XRA     A               ;CLEAR ACC.
   EEAB    32 D807              STA     CCP+7           ;STORE A CHAR. COUNTER LOCATION
                        
                        ;********************************************************
                        ; Common code before entering CP/M
                        ;********************************************************
                        
   EEAE                 GOCPM:  
   EEAE    3EC3                 MVI     A,JMP           ;PATCH WARM START JUMP
   EEB0    32 0000              STA     0
   EEB3    21 EE03              LXI     H,WBOOTE
   EEB6    22 0001              SHLD    1
                        
   EEB9    32 0005              STA     5               ;PATCH JUMP TO BDOS
   EEBC    21 E006              LXI     H,BDOS
   EEBF    22 0006              SHLD    6
                        
   EEC2    21 0080              LXI     H,80H           ;SET DEFAULT DMA ADDR
   EEC5    22 FA09              SHLD    DMAADD
                        
   EEC8    3A 0004              LDA     CPMDSK          ;PASS CURRENT DISK
   EECB    4F                   MOV     C,A             ;NUMBER TO THE CCP
   EECC    C3 D800              JMP     CCP             ;GO TO THE CCP
                        
                        ;********************************************************
                        ; READ MULTIPLE SECTORS. USED BY THE FLOPPY DISK WARM
                        ; BOOT.
                        ;********************************************************
                        
   EECF    32 FA0D      READM:  STA     PTRACK          ;SET TRACK
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 9




   EED2    C5           LOOP:   PUSH    B               ;SAVE COUNT, SECTOR
   EED3    79                   MOV     A,C
   EED4    32 FA0F              STA     PSECT           ;SET SECTOR
   EED7    E5                   PUSH    H               ;SAVE DMA ADDRESS
   EED8    22 FA11              SHLD    PDMA            ;SET DMA ADDRESS
   EEDB    CD F1C3              CALL    PREAD           ;READ THE SECTOR
   EEDE    DA F4AC              JC      FATERR          ;FATAL ERROR
   EEE1    E1                   POP     H
   EEE2    24                   INR     H               ;POINT TO NEXT DMA ADDRESS
   EEE3    24                   INR     H               ;INCREMENT BY 2 PAGES (512 BYTES)
   EEE4    C1                   POP     B
   EEE5    0C                   INR     C               ;POINT TO NEXT PHYSICAL SECTOR
   EEE6    10EA                 DJNZ    LOOP            ;REPEAT UNTIL DONE
   EEE8    C9                   RET
                        
                        ;********************************************************
                        ; BOOT COMMON ROUTINE. USED BY COLD BOOT AND WARM BOOT.
                        ;********************************************************
                        
   EEE9                 BCOMM:  
   EEE9    CD EEF7              CALL    DSKRST          ;RESET DISK SYSTEM
   EEEC    0E00                 MVI     C,0             ;SELECT DISK 0, GET DDB
   EEEE    CD EF18              CALL    SELDSK
   EEF1    7C                   MOV     A,H             ;TEST FOR SUCCESSFUL SELECT
   EEF2    B5                   ORA     L
   EEF3    C0                   RNZ                     ;SUCCESSFUL
   EEF4    C3 F4AC              JMP     QUIT            ;FATAL ERROR
                        
                        ;********************************************************
                        ; RESET DISK SYSTEM. INVALIDATE CERTAIN FLOPPY DISK
                        ; TABLES AND BYTES TO ALLOW CHANGING DISKS. CALLED BY
                        ; COLD BOOT, WARM BOOT, AND SOME EXTERNAL ROUTINES.
                        ;********************************************************
                        
   EEF7    AF           DSKRST: XRA     A
   EEF8    21 FA33              LXI     H,UNACNT        ;INVALIDATE UNALLOCATED COUNT
   EEFB    0616                 MVI     B,UNALEN
   EEFD    77           LOP:    MOV     M,A
   EEFE    23                   INX     H
   EEFF    10FC                 DJNZ    LOP
   EF01    21 EE4F              LXI     H,ACTDSK        ;POINT TO # DISKS       
   EF04    46                   MOV     B,M             ;GET NUMBER INTO B
   EF05    11 0078              LXI     D,APBDIS        ;GET DISTANCE BETWEEN FD APBS
                        
   EF08    21 FA67              LXI     H,APB0+(FLAG-ATABLE) ;POINT TO FLAG
                        
   EF0B    77           LOOP1:  MOV     M,A             ;INVALIDATE ALL FLOPPY DISK
   EF0C    19                   DAD     D               ;APBS BY CLEARING FLAGS
   EF0D    10FC                 DJNZ    LOOP1
                        
   EF0F    3D                   DCR     A
   EF10    32 FA1A              STA     OLDFLO          ;FORCE HEAD UNLOAD/LOAD
   EF13    32 FA19              STA     ADISK           ;INVALIDATE ATABLE
   EF16    C9                   RET
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 10




                        ;********************************************************
                        ;            LOAD HEAD ON CURRENT DISK
                        ;********************************************************
                        
   EF17    C9           HEADLD: RET
                        
                        
                        ;********************************************************
                        ; LOGICALLY SELECT THE DISK DRIVE FOR FUTURE READS AND
                        ; WRITES TO THAT PASSED IN REGISTER C. IF THE DDB FOR
                        ; THE DRIVE HAS NOT YET BEEN READ, THEN READ IT IN FROM
                        ; THE DISK. OTHERWISE, DON'T PERFORM A PHYSICAL SELECT
                        ; UNTIL A READ OR WRITE SECTOR CALL IS MADE. NOTE THAT
                        ; THE DPH, APB, DPB, AND TRANSLATE TABLE FOR THE DRIVE
                        ; ARE ALL VALID AT THE COMPLETION OF THIS CALL.
                        ;********************************************************
                        
   EF18                 SELDSK:
   EF18    79                   MOV     A,C
   EF19    21 EE4F              LXI     H,ACTDSK        ;POINT TO ACTUAL DISK #
   EF1C    BE                   CMP     M               ;IN RANGE(y/n)
   EF1D    D2 EFFF              JNC     BAD             ;NO
   EF20    32 FA44              STA     SEKDSK          ;D.R. HOST DISK
   EF23    32 FA0C              STA     PDISK
                        
   EF26    D5                   PUSH    D               ;SAVE DISK RESET FLAG
                        
   EF27    69                   MOV     L,C             ;GET APB, DPH ADDRESSES
   EF28    CD F49A              CALL    GETDPH          ;GET RAM LOCATION FOR DPH
   EF2B    ED53 FA1F            SDED    APBADR          ;SAVE APB ADDRESS
   EF2F    22 FA1D              SHLD    DPHADR          ;SAVE DPH ADDRESS
   EF32    CD F464              CALL    GETAPB          ;GET ATABLE FOR THIS DISK
                        
   EF35    D1                   POP     D
   EF36    CB43                 BIT     0,E
   EF38    2807                 JRZ     FRST            ;MAY HAVE BEEN RESET
                        
   EF3A    3A FA53              LDA     FLAG
   EF3D    B7                   ORA     A               ;DDB PROCESSED(y/n)
   EF3E    C2 EFF8              JNZ     OK              ;YES
                        
   EF41                 FRST:   
   EF41    CD F134              CALL    CLOSE           ;ELSE CLEAR ANY PENDING WRITE
                                                        ;AND READ DDB FROM DISK
                        
   EF44    AF                   XRA     A               ;WE WILL READ FROM TRACK 0
   EF45    32 FA0D              STA     PTRACK
   EF48    3E08                 MVI     A,8             ;AND SECTOR 8
   EF4A    32 FA0F              STA     PSECT
   EF4D    21 F606              LXI     H,RDBUFF        ;INTO THE READ BUFFER
   EF50    22 FA11              SHLD    PDMA
                        
   EF53    3A FA0C              LDA     PDISK           ;GET DISK NUMBER
   EF56    21 EE33              LXI     H,SPDTAB        ;POINT TO STEP SPEED TABLE
   EF59    5F                   MOV     E,A






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 11




   EF5A    1600                 MVI     D,0
   EF5C    19                   DAD     D
   EF5D    7E                   MOV     A,M             ;GET SPEED BYTE FOR THIS DISK
   EF5E    47                   MOV     B,A             ;SAVE IN B
   EF5F    E603                 ANI     3               ;ISOLATE SPEED BITS
   EF61    67                   MOV     H,A             ;PUT IN H FOR DOUBLE STORE NEXT
   EF62    2EFF                 MVI     L,0FFH          ;CURRENT TRACK - UNKNOWN
   EF64    22 FA51              SHLD    TRACK           ;UPDATE ATABLE TRACK AND SPEED
                        
                        
                        ;********************************************************
                        ;          ASSUME 8" S.S.S.D. DISK NEXT
                        ;********************************************************
                        
   EF67    3E01                 MVI     A,00000001B     ;INITIAL FLAG FOR 8" DRIVE
   EF69    21 F5AE              LXI     H,STDDDB        ;STANDARD 8" DDB ADDRESS
                        
                        
                        ;TEST IF 5" OR 8" DISK IN SPEED TABLE
                        
   EF6C    CB78                 BIT     7,B             ;8" DISK(y/n)
   EF6E    2805                 JRZ     EIG             ;IF YES GO DO 8"
   EF70    3E15                 MVI     A,00010101B     ;INITIAL 5" FLAG
   EF72    21 F5DE              LXI     H,ALTDDB
                        
   EF75    32 FA53      EIG:    STA     FLAG
   EF78    22 FA24              SHLD    SAVADR
                        
   EF7B    21 0001              LXI     H,1             ;AT LEAST 1 SYSTEM TRACK
   EF7E    22 FA54              SHLD    OFF
   EF81    21 2002              LXI     H,2+32 < 8      ;512 BYTE SECTOR & 32 LOGICAL SECTORS
   EF84    22 FA56              SHLD    SSLEN
                        
   EF87    CD F32F              CALL    GETD3S          ;GET VF2 CTRL BYTES INTO ATABLE
   EF8A    CD F1C3              CALL    PREAD           ;GET THE DDB
   EF8D    3020                 JRNC    YUP             ;WE GOT SOMETHING
                        
                        
                        ;********************************************************
                        ; IF ERROR IS R.N.F. THEN SHOW DISK READ FAILED
                        ; ELSE TEST IT FOR GOOD DISK TYPE
                        ;********************************************************
                        
   EF8F    CB67                 BIT     WBRNF,A         ;RNF ERROR(y/n)
   EF91    2869                 JRZ     ERR             ;NOPE, GIVE UP
                        
                        
                        ;********************************************************
                        ;    SET UP FOR STANDARD 8" S.S.S.D.  DISK HERE
                        ;********************************************************
                        
   EF93                 NOV:    
   EF93    CD F4B7              CALL    MSG     ;WARN THE USER AND
   EF96    0D0A                 .BYTE   CR,LF   ;   HOPE FOR THE BEST
   EF98    535444204469         .ASCIZ  \STD Disk?\






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 12




   EFA2    2A FA24              LHLD    SAVADR  ;POINT TO STANDARD DDB
   EFA5    01 0076              LXI     B,128-10
   EFA8    11 F790              LXI     D,RDBUFF+384+10
   EFAB    EDB0                 LDIR                    ;FIX RD BUFFER TO BE A STD DDB
   EFAD    1819                 JMPR    COMP
                        
   EFAF    2A F786      YUP:    LHLD    RDBUFF+384      ;GET VALIDITY BYTES FROM DDB
   EFB2    11 FDDD              LXI     D,0DDH+0FDH < 8 ;EXPECTED VALUE OF BYTES
   EFB5    B7                   ORA     A
   EFB6    ED52                 DSBC    D               ;DDB VALID(y/n)
   EFB8    20D9                 JRNZ    NOV             ;NOPE
   EFBA    2A F788              LHLD    RDBUFF+384+2    ;MORE VALIDITY BYTES
   EFBD    ED52                 DSBC    D               ;DDB VALID(y/n)
   EFBF    20D2                 JRNZ    NOV             ;NOPE
                        
   EFC1    3A F78A              LDA     RDBUFF+384+4    ;TEST FOR COMPATIBILITY
   EFC4    E6FE                 ANI     11111110B
   EFC6    2037                 JRNZ    BAD             ;GIVE UP ON THIS DISK
                        
   EFC8    CD F45B      COMP:   CALL    PUTAPB          ;UPDATE TRACK, SPEED IN APB
                        
   EFCB    2A FA1F              LHLD    APBADR          ;GET APB ADDR FOR THIS DISK
   EFCE    11 000A              LXI     D,FLAG-ATABLE   ;POINT TO WHERE FLAG GOES
   EFD1    19                   DAD     D
   EFD2    EB                   XCHG                    ;MAKE THIS THE DESTINATION ADDR
   EFD3    21 F790              LXI     H,RDBUFF+384+10 ;FROM FLAG IN RD BUFFER
                        
   EFD6    01 006E              LXI     B,ALEN-(FLAG-ATABLE)+DPBLEN+TRALEN
                        
   EFD9    EDB0                 LDIR                    ;MOVE DDB, DPB, TRANS INTO APB
                        
                        
                        ;********************************************************
                        ;*           NOW SET UP ALLOCATION SIZE
                        ;*           FOR THE DISK JUST SELECTED
                        ;* GET THE ALLOCATION SIZE FROM THE DSM VALUE IN THE DPB
                        ;********************************************************
                        
   EFDB                 GALV:   
   EFDB    3A F799              LDA     RDBUFF+384+19   ;GET DSM
   EFDE    4F                   MOV     C,A             ;SAVE VALUE
   EFDF    3A FA44              LDA     SEKDSK
   EFE2    5F                   MOV     E,A
   EFE3    1600                 MVI     D,0
   EFE5    21 FA2E              LXI     H,ALOCSZ
   EFE8    19                   DAD     D
   EFE9    71                   MOV     M,C             ;SAVE FOR THIS DISK
                        
   EFEA    3EFF                 MVI     A,0FFH          ;UPDATE ATABLE FROM APB
   EFEC    32 FA19              STA     ADISK
   EFEF    CD F464              CALL    GETAPB
   EFF2    CD F32F              CALL    GETD3S          ;PUT VALID VF2 BYTES IN ATABLE
   EFF5    CD F45B              CALL    PUTAPB          ;UPDATE APB FROM FULLY VALID ATABLE
                        
   EFF8    2A FA1D      OK:     LHLD    DPHADR          ;RETURN DPH ADDRESS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 13




   EFFB    C9                   RET
                        
   EFFC                 ERR:
   EFFC    CD F3B2              CALL    EPRINT          ;PRINT ERROR IN READING DDB
                        
   EFFF    AF           BAD:    XRA     A               ;DESELECT INVALID DRIVE
   F000    32 0004              STA     CPMDSK
   F003    67                   MOV     H,A             ;ERROR RETURN CODE
   F004    6F                   MOV     L,A
   F005    C9                   RET
                        
                        ;********************************************************
                        ; SET TRACK FOR FUTURE READS OR WRITES TO TRACK 0. ALSO
                        ; PARTIALLY RESET THE DISK SYSTEM TO ALLOW FOR CHANGED
                        ; DISKS.
                        ;********************************************************
                        
   F006                 HOME:   
   F006    CD F134              CALL    CLOSE
   F009    3A FA3E              LDA     HSTWRT          ;TEST FOR PENDING WRITE
   F00C    B7                   ORA     A
   F00D    2003                 JRNZ    HOMED
   F00F    32 FA3D              STA     HSTACT          ;CLEAR HOST ACTIVE FLAG
   F012                 HOMED:  
   F012    01 0000              LXI     B,0             ;DROP THRU TO SET TRACK TO 0
                        
                        ;********************************************************
                        ; SET TRACK FOR FUTURE READS OR WRITES TO THAT PASSED
                        ; IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F015    ED43 FA45    SETTRK: SBCD    SEKTRK
   F019    C9                   RET
                        
                        ;********************************************************
                        ; SET SECTOR FOR FUTURE READS OR WRITES TO THAT PASSED
                        ; IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F01A    ED43 FA07    SETSEC: SBCD    SEKSEC
   F01E    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET DMA ADDRESS FOR FUTURE READS OR WRITES TO THAT
                        ; PASSED IN REGISTER PAIR BC.
                        ;********************************************************
                        
   F01F    ED43 FA09    SETDMA: SBCD    DMAADD
   F023    C9                   RET
                        
                        
                        ;********************************************************
                        ; SECTOR TRANSLATION ROUTINE. THE ROUTINE ONLY
                        ; TRANSLATES SECTORS ON THE USER TRACKS, SINCE CP/M






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 14




                        ; ACCESSES THE SYSTEM TRACKS WITHOUT CALLING FOR
                        ; TRANSLATION.
                        ;********************************************************
                        
   F024                 SECTRA: 
                        
   F024    EB                   XCHG                    ;HL GETS TRANS TABLE ADDRESS
                                                        ;CP/M PASSED IT IN DE
   F025    79                   MOV     A,C             ;GET SECTOR #
   F026    ED43 FA39            SBCD    NEWSEC          ;SAVE FOR UNALLOC TEST
   F02A    09                   DAD     B               ;INDEX INTO TABLE, LOGICAL SECTOR
                                                        ;IS PASSED IN BC
   F02B    6E                   MOV     L,M             ;GET THE TRANSLATED BYTE
   F02C    2600                 MVI     H,0
   F02E    C9                   RET
                        
                        ;********************************************************
                        ; CP/M ENTRY POINT FOR SECTOR READS. BUFFERED SECTOR
                        ; READS ARE DONE HERE. BUFFERED READ OPERATIONS REQUIRE
                        ; READING THE SECTOR FROM DISK INTO THE READ BUFFER,
                        ; AND THEN PROVIDING 128 BYTE LOGICAL SECTORS TO THE
                        ; CALLING PROGRAM ON REQUEST.
                        ;********************************************************
                        
   F02F                 READ:   
   F02F    AF                   XRA     A
   F030    32 FA33              STA     UNACNT          ;UNACNT=0, WE WON'T WRITE WITHOUT
                                                        ;PRE-READS FOR NOW
   F033    3C                   INR     A       
   F034    32 FA3C              STA     READOP          ;SHOW WE ARE DOING A READ OPERATION
   F037    32 FA3B              STA     RSFLAG          ;MUST READ DATA
   F03A    3E02                 MVI     A,2
   F03C    32 FA21              STA     WRTYPE          ;TREAT AS UNALLOCATED
                        
   F03F    C3 F0AB              JMP     RWOPER          ;DO THE READ
                        
                        ;********************************************************
                        ; CP/M ENTRY POINT FOR SECTOR WRITES. BUFFERED SECTOR
                        ; WRITES ARE DONE HERE. BUFFERED WRITE OPERATIONS
                        ; REQUIRE ACCEPTING 128 BYTE LOGICAL SECTORS FROM THE
                        ; CALLING PROGRAM, ACCUMULATING THEM IN A WRITE BUFFER,
                        ; THEN WRITING THE BUFFER WHEN IT BECOMES FULL. THE
                        ; BUFFER IS IMMEDIATELY WRITTEN OUT IF THE LOGICAL
                        ; SECTOR IS PART OF THE DISK DIRECTORY.
                        ;********************************************************
                        
                        
   F042                 WRITE:  
                        
   F042    AF                   XRA     A
   F043    32 FA3C              STA     READOP          ;SET TO WRITE
                        
   F046    79                   MOV     A,C
   F047    32 FA21              STA     WRTYPE          ;SAVE TYPE OF WRITE
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 15




   F04A    FE02                 CPI     2               ;WRITE UNALLOCATED(y/n)
   F04C    2018                 JRNZ    CKUN            ;GO SEE IF O.K. ANYWAY
                        
   F04E    3A FA32              LDA     ALOCA           ;GET MAXIMUM UNALLOCATED RECORD COUNT
   F051    32 FA33              STA     UNACNT          ;AND PUT HERE FOR WRITING
   F054    3A FA44              LDA     SEKDSK          ;GET CURRENT DISK
   F057    32 FA34              STA     UNADSK
   F05A    2A FA45              LHLD    SEKTRK          ;GET CURRENT TRACK
   F05D    22 FA35              SHLD    UNATRK
   F060    3A FA39              LDA     NEWSEC          ;GET CURRENT CP/M SECTOR
   F063    32 FA37              STA     UNASEC
                        
   F066                 CKUN:                           ;SEE IF UNALLOCATED RECORDS REMAIN
                        
   F066    3A FA33              LDA     UNACNT          ;GET UNALLOCATED RECORDS LEFT
   F069    B7                   ORA     A
   F06A    CA F0A3              JZ      ALOC            ;NO UNALLOCATED LEFT
                        
                        
                        ;WE STILL HAVE UNALLOCATED RECORDS LEFT
                        
   F06D    3D                   DCR     A               ;UPDATE UNALLOCATED RECORD COUNT
   F06E    32 FA33              STA     UNACNT
                        
                        
                        ;NOW CHECK FOR CORRECT DISK, TRACK & SECTOR
                        
   F071    3A FA44              LDA     SEKDSK          ;COMPARE DISKS FIRST
   F074    21 FA34              LXI     H,UNADSK
   F077    BE                   CMP     M
   F078    C2 F0A3              JNZ     ALOC
                        
                        
                        ;DISKS ARE SAME, NOW CHECK FOR TRACK
                        
   F07B    21 FA35              LXI     H,UNATRK
   F07E    3A FA45              LDA     SEKTRK
   F081    BE                   CMP     M
   F082    201F                 JRNZ    ALOC
                        
                        
                        ;TRACKS ARE SAME, NOW TEST FOR SECTOR
                        
   F084    3A FA39              LDA     NEWSEC          ;COMPARE SECTORS NOW
   F087    21 FA37              LXI     H,UNASEC
   F08A    BE                   CMP     M
   F08B    2016                 JRNZ    ALOC
                        
                        
                        ;SECTORS ARE SAME, NOW UPDATE PARAMETERS
                        
   F08D    34                   INR     M               ;MAKE NEXT EXPECTED SECTOR
   F08E    7E                   MOV     A,M             ;GET NEXT EXPECTED SECTOR
   F08F    21 FA59              LXI     H,ULRPS         ;POINT TO SECTORS/USER TRACK
   F092    BE                   CMP     M               ;TEST FOR END OF TRACK






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 16




   F093    3808                 JRC     NOVR            ;NO OVERFLOW
                        
                        
                        ;HERE WE ALLOW FOR NEXT UNALLOCATED RECORD ON A NEW TRACK
                        
   F095    AF                   XRA     A               ;SET SECTOR AS FIRST
   F096    32 FA37              STA     UNASEC
   F099    21 FA35              LXI     H,UNATRK        ;POINT TO UNALLOCATED TRACK #
   F09C    34                   INR     M               ;MAKE IT NEXT ONE
                        
                        
                        ;WRITE PARAMETERS MATCH, DON'T PRE-READ
                        
   F09D                 NOVR:   
   F09D    AF                   XRA     A
   F09E    32 FA3B              STA     RSFLAG          ;SHOW WE DON'T READ A SECTOR
   F0A1    1808                 JMPR    RWOPER
                        
                        
                        ;NOT AN UNALLOCATED RECORD, DO A PRE-READ
                        
   F0A3                 ALOC:   
   F0A3    AF                   XRA     A
   F0A4    32 FA33              STA     UNACNT          ;SET UNALLOCATED = 0
   F0A7    3C                   INR     A
   F0A8    32 FA3B              STA     RSFLAG          ;RSFLAG = 1, WE MUST READ THE SECTOR
                        
                        
                        ;DO READ OR WRITE OPERATION NEXT
                        
   F0AB                 RWOPER:
                        
   F0AB    CD F174              CALL    GETTRK          ;COMPUTE PHYSICAL TRACK & SECTOR
                        
   F0AE    21 FA3D              LXI     H,HSTACT        ;GET HOST ACTIVE FLAG
   F0B1    7E                   MOV     A,M     
   F0B2    3601                 MVI     M,1             ;SET IT ACTIVE FOR SURE
   F0B4    B7                   ORA     A               ;SEE IF IT WAS ACTIVE
   F0B5    CA F0DA              JZ      FILHST          ;IF NOT FILL IT
                                
                        
                        ;********************************************************
                        ;* CHECK TO SEE IF SECTOR IN HOST BUFFER IS CORRECT ONE
                        ;* IF NOT WRITE TO HOST BUFFER IF NEEDED & PREPARE FOR 
                        ;* CORRECT HOST BUFFER
                        ;********************************************************
                        
                        ;SEE IF DISKS ARE SAME
                        
   F0B8    3A FA44              LDA     SEKDSK          ;COMPARE DISKS FIRST
   F0BB    21 FA3F              LXI     H,HSTDSK
   F0BE    BE                   CMP     M
   F0BF    2012                 JRNZ    NOMAT
                        
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 17




                        ;SEE IF TRACKS ARE SAME
                        
   F0C1    21 FA40              LXI     H,HSTTRK
   F0C4    3A FA13              LDA     CTRACK
   F0C7    BE                   CMP     M
   F0C8    2009                 JRNZ    NOMAT
                                
                        
                        ;SEE IF SECTORS ARE SAME
                        
   F0CA    3A FA47              LDA     SEKHST          ;COMPARE SECTORS NOW
   F0CD    21 FA42              LXI     H,HSTSEC
   F0D0    BE                   CMP     M
   F0D1    2824                 JRZ     MATCH
                        
                        
                        ;HOST PARAMETERS DO NOT MATCH CURRENT R/W PARAMETERS
                        ;SEE IF WE HAVE TO FLUSH THE HOST BUFFER
                        
   F0D3                 NOMAT:  
   F0D3    3A FA3E              LDA     HSTWRT          ;SEE IF HOST BUFFER WAS WRITTEN
   F0D6    B7                   ORA     A
   F0D7    C4 F139              CNZ     FLUSH           ;WRITE OUT THE BUFFER IF NOT
                        
                        
                        ;MAY HAVE TO FILL HOST BUFFER
                        ;SEET UP NEW PARAMETERS
                        
   F0DA                 FILHST: 
                        
   F0DA    3A FA44              LDA     SEKDSK
   F0DD    32 FA3F              STA     HSTDSK
   F0E0    2A FA13              LHLD    CTRACK
   F0E3    22 FA40              SHLD    HSTTRK
   F0E6    3A FA47              LDA     SEKHST          ;THE PHYSICAL SECTOR
   F0E9    32 FA42              STA     HSTSEC
                        
   F0EC    3A FA3B              LDA     RSFLAG          ;SEE IF WE NEED TO READ
   F0EF    B7                   ORA     A
   F0F0    C4 F158              CNZ     RDHST           ;IF SO READ IT
   F0F3    AF                   XRA     A
   F0F4    32 FA3E              STA     HSTWRT          ;SHOW NO PENDING WRITE
                        
                        ;WE HAVE CORRECT SECTOR SO COPY DATA TO/FROM DMA BUFFER
                        
   F0F7                 MATCH:
                        
   F0F7    3A FA0B              LDA     CREC            ;GET RECORD #
   F0FA    47                   MOV     B,A             ;COMPUTE RECORD IN HOST BUFFER
   F0FB    0E00                 MVI     C,0
   F0FD    CB38                 SRLR    B
   F0FF    CB19                 RARR    C
   F101    21 F606              LXI     H,HSTBUF
   F104    09                   DAD     B               ;HL IS NOW HOST BUFFER
   F105    ED5B FA09            LDED    DMAADD          ;DE HAS DMA ADDRESS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 18




   F109    01 0080              LXI     B,128           ;BYTES TO MOVE
   F10C    3A FA3C              LDA     READOP
   F10F    B7                   ORA     A               ;SEE IF WE ARE READING OR WRITING
   F110    2009                 JRNZ    RWMOVE          ;SKIP ON READ
   F112    3E01                 MVI     A,1             ;IF A WRITE THEN MARK & COPY TO BUFFER
   F114    32 FA3E              STA     HSTWRT          ;HSTWRT = 1
   F117    EB                   XCHG                    ;DE IS NOW DESTINATION,= HOST ON WRITE
   F118    2A FA09              LHLD    DMAADD          ;HL IS SOURCE, = USER AREA TO GET       
                        
   F11B                 RWMOVE:
                        
   F11B    EDB0                 LDIR                    ;MOVE DATA
                        
                        
                        ;NOW CHECK WRITE TYPE FOR DIRECTORY UPDATE
                        
   F11D    3A FA21              LDA     WRTYPE          ;GET TYPE OF WRITE
   F120    3D                   DCR     A               ;IS IT TO THE DIRECTORY
   F121    2802                 JRZ     WRITIT          ;IF SO WRITE IT OUT
                        
   F123    1806                 JMPR    GOODOP          ;IF NOT SHOW A SUCCESSFUL R/W OPERATION 
                        
                        ;CLEAR HOST BUFFER FOR DIRECTORY WRITE
                        
   F125                 WRITIT: 
                        
   F125    32 FA3E              STA     HSTWRT
   F128    CD F139              CALL    WRTHST
                                
   F12B                 GOODOP:
   F12B    3A FA26              LDA     MRML            ;GET RETRY BYTE
   F12E    B7                   ORA     A               ;TEST FOR ZERO
   F12F    3E01                 MVI     A,1             ;JUST IN CASE OF FAILURE
   F131    C8                   RZ                      ;IF FAILED SHOW IT TO BDOS
   F132    AF                   XRA     A               ;ELSE SET AS O.K.
   F133    C9                   RET                     ;SHOW BDOS SUCCESSFUL READ/WRITE
                        
   F134                 CLOSE:  
   F134    3A FA3E              LDA     HSTWRT          ;SEE IF WE HAVE A PENDING WRITE
   F137    B7                   ORA     A
   F138    C8                   RZ                      ;IF NOT RETURN NOW
                        
                        ;WRITE FROM THE HOST BUFFER
                        
   F139                 FLUSH:
   F139                 WRTHST: 
   F139    3A FA3F              LDA     HSTDSK          ;GET ACTUAL WRITE DISK
   F13C    32 FA0C              STA     PDISK           ;MAKE IT THE PHYSICAL DISK
   F13F    CD F464              CALL    GETAPB          ;GET APB FOR THE DISK
   F142    3A FA42              LDA     HSTSEC
   F145    32 FA0F              STA     PSECT
   F148    3A FA40              LDA     HSTTRK
   F14B    32 FA0D              STA     PTRACK
   F14E    21 F606              LXI     H,WRBUFF        ;POINT TO WRITE BUFFER
   F151    22 FA11              SHLD    PDMA            ;MAKE IT THE PHYSICAL DMA ADDRESS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 19




                                
   F154    CD F1BF              CALL    PWRITE          ;WRITE BACK THE COMBINED SECTOR
   F157    C9                   RET
                        
   F158                 RDHST:  
   F158    3A FA3F              LDA     HSTDSK
   F15B    32 FA0C              STA     PDISK
   F15E    21 F606              LXI     H,RDBUFF        ;POINT TO READ BUFFER
   F161    22 FA11              SHLD    PDMA            ;MAKE IT PHYSICAL DMA ADDRESS
   F164    3A FA13              LDA     CTRACK
   F167    32 FA0D              STA     PTRACK
   F16A    3A FA15              LDA     CSECT
   F16D    32 FA0F              STA     PSECT
                        
   F170    CD F1C3              CALL    PREAD           ;READ SECTOR INTO READ BUFFER
   F173    C9                   RET
                        
                        ;GET ACTUAL TRACK TO SEEK
                        
   F174                 GETTRK: 
   F174    3A FA45              LDA     SEKTRK          ;GET CP/M TRACK NUMBER
   F177    21 FA54              LXI     H,OFF           ;GET NUMBER OF SYSTEM TRACKS
   F17A    5E                   MOV     E,M
   F17B    0E00                 MVI     C,0             ;ASSUME SINGLE SIDED DISK
   F17D    21 FA56              LXI     H,SSLEN         ;POINT TO SYSTEM SECTOR LENGTH
   F180    BB                   CMP     E
   F181    380F                 JRC     SYST            ;IT WAS A SYSTEM TRACK
   F183    21 FA53              LXI     H,FLAG          ;POINT TO FLAG BYTE
   F186    CB4E                 BIT     1,M             ;TEST SIDES BIT
   F188    2805                 JRZ     SING            ;SINGLE SIDED DISK
   F18A    83                   ADD     E               ;ADD IN OFFSET
   F18B    CB3F                 SRLR    A               ;COMPUTE PHYSICAL TRACK NUMBER
   F18D    CB19                 RARR    C               ;GET SIDE NUMBER BIT
   F18F    21 FA58      SING:   LXI     H,USLEN
   F192                 SYST:   
   F192    32 FA13              STA     CTRACK          ;SAVE ACTUAL TRACK NUMBER
                                        
                        
                        ;GET ACTUAL SECTOR TO READ/WRITE
                        
   F195                 PYSEC:  
   F195    7E                   MOV     A,M             ;GET LENGTH BYTE
   F196    47                   MOV     B,A
   F197    FE03                 CPI     3
   F199    2004                 JRNZ    LRG
   F19B    2607                 MVI     H,7
   F19D    1806                 JMPR    GSEC
   F19F    FE02         LRG:    CPI     2               ;512 BYTE SECTOR(y/n)
   F1A1    2001                 JRNZ    NO              ;NOPE, ACC HAS RECORD MASK
   F1A3    3C                   INR     A               ;FIND MASK FOR 512 BYTE SECTOR
   F1A4    67           NO:     MOV     H,A             ;SAVE RECORD MASK
                        
   F1A5    3A FA07      GSEC:   LDA     SEKSEC          ;GET CP/M SECTOR NUMBER
   F1A8    3D                   DCR     A               ;ADJUST DOWN TO START AT ZERO
   F1A9    6F                   MOV     L,A             ;SAVE FOR LATER






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 20




   F1AA    04                   INR     B               ;ADJUST FOR EASY LOOP
   F1AB    1802                 JMPR    JOIN
   F1AD    CB3F         LOOP2:  SRLR    A               ;PLACE SECTOR NUMBER IN LSB'S
   F1AF    10FC         JOIN:   DJNZ    LOOP2           ;REPEAT UNTIL ALIGNED IN LSB'S
   F1B1    3C                   INR     A               ;ADJUST TO MAKE PHYSICAL SECTOR
   F1B2    B1                   ORA     C               ;GET SIDE BIT   
   F1B3    32 FA47              STA     SEKHST          ;HOST SECTOR
   F1B6    32 FA15              STA     CSECT           ;SAVE COMBINED SECTOR
   F1B9    7D                   MOV     A,L             ;GET CP/M SECTOR NUMBER
   F1BA    A4                   ANA     H               ;MASK ALL BUT RECORD NUMBER
   F1BB    32 FA0B              STA     CREC            ;SAVE RECORD NUMBER
   F1BE    C9                   RET
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK PHYSICAL READ AND WRITE ROUTINE. ALL
                        ; FLOPPY DISK I/O IS PERFORMED BY CALLS TO THIS
                        ; ROUTINE. ON ENTRY PDISK, PTRACK, PSECT, AND PDMA
                        ; MUST BE VALID.
                        ;********************************************************
                        
   F1BF    3EA0         PWRITE: MVI     A,WWRITE        ;SET WRITE COMMAND
   F1C1    1802                 JMPR    PCOM            ;JOIN COMMON CODE
                        
   F1C3    3E80         PREAD:  MVI     A,WREAD         ;SET READ COMMAND
                        
   F1C5    32 FA1B      PCOM:   STA     PCMD            ;REMEMBER WHETHER READ OR WRITE
   F1C8    CD F464              CALL    GETAPB          ;MAKE SURE ATABLE IS RIGHT ONE
                        
                        
                        ;********************************************************       
                        ;       IF LAST I/O WAS ON DIFFERENT DISK, TELL THE
                        ;       179X TO UNLOAD ITS HEAD. THE HEAD LOAD ONE-SHOT
                        ;       WILL THEN BE RETRIGERED ON THE NEXT COMMAND.
                        ;********************************************************
                        
   F1CB    21 FA1A              LXI     H,OLDFLO        ;POINT TO OLD FLOPPY NUMBER
   F1CE    3A FA0C              LDA     PDISK           ;GET NEW NUMBER
   F1D1    BE                   CMP     M               ;SAME DISK(y/n)
   F1D2    2807                 JRZ     SADS            ;YES
                        
   F1D4    77                   MOV     M,A             ;NO, UPDATE OLD NUMBER TO NEW
   F1D5    CD F362              CALL    TRIMWT          ;WAIT FOR TRIM ERASE TO END
   F1D8    CD F309              CALL    SETD3S          ;SET VF2 CONTROL BYTE
                        
                        ;********************************************************
                        ;       INITIALIZE RETRY LIMITS. INSURE VF2 BYTE IS
                        ;       SET. SEEK TO CORRECT TRACK.
                        ;********************************************************
                        
   F1DB                 SADS:   
   F1DB    3A EE39              LDA     HOMER           ;NUMBER OF HOME OPERATIONS
   F1DE    32 FA26              STA     MRML
   F1E1    32 EE51              STA     KBIT
   F1E4                 MAC:    






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 21




   F1E4    3A EE3A              LDA     RETRYIT         ;RETRIES BETWEEN HOME OPERATIONS
   F1E7    32 FA18              STA     RMACRO
                        
   F1EA    CD F309              CALL    SETD3S          ;SET VF2 CONTROL BYTE
   F1ED    21 FA51              LXI     H,TRACK         ;GET OLD TRACK NUMBER
   F1F0    7E                   MOV     A,M
   F1F1    D355                 OUT     WTRACK          ;UPDATE 179X TRACK REG
   F1F3    3A FA0D              LDA     PTRACK          ;GET DESIRED TRACK NUMBER
   F1F6    BE                   CMP     M               ;SAME AS BEFORE(y/n)
   F1F7    2823                 JRZ     SATR            ;YES
                        
   F1F9    77                   MOV     M,A             ;UPDATE TRACK NUMBER
   F1FA    CD F362              CALL    TRIMWT          ;WAIT FOR TRIM ERASE TO END
   F1FD    3A FA0D              LDA     PTRACK          ;GET DESIRED TRACK
   F200    B7                   ORA     A               ;TRACK 0 DESIRED(y/n)
   F201    2008                 JRNZ    NOZE            ;NOPE
                        
   F203    CD F36D              CALL    FHOME           ;SEEK TO TRACK 0 BY HOME CMD
   F206    DA F4AC              JC      FATERR
   F209    1806                 JMPR    ENDS            ;DONE SEEKING
                        
   F20B    CD F371      NOZE:   CALL    FSEEK           ;NORMAL SEEK TO DESIRED TRACK
   F20E    DA F4AC              JC      FATERR
                        
   F211    CD F45B      ENDS:   CALL    PUTAPB          ;UPDATE APB FROM ATABLE
   F214    3A FA1B              LDA     PCMD            ;GET READ/WRITE COMMAND
   F217    CBD7                 SET     WBDEL,A         ;INSURE HEAD IS SETTLED
   F219                 NOMIL:  
   F219    32 FA1B              STA     PCMD            ;BY SETTING DELAY BIT IN CMD
                        
                        
                        ;********************************************************
                        ;       SET UP DMA ADDRESS, SECTOR REGISTER. ISSUE
                        ;       THE READ OR WRITE COMMAND. SET HARDWARE WAIT.
                        ;********************************************************
                        
   F21C                 SATR:
   F21C                 MIC:    
   F21C    3A FA0F              LDA     PSECT           ;GET DESIRED SECTOR NUMBER
   F21F    47                   MOV     B,A             ;SAVE SIDE BIT
   F220    CB7F                 BIT     7,A             ;TEST SIDE BIT
   F222    3E30                 MVI     A,'0'
   F224    2802                 JRZ     SIDEZERO
   F226    3E31                 MVI     A,'1'
   F228                 SIDEZERO:
   F228    32 FA2D              STA     SIDEID
                        
   F22B    CB78                 BIT             7,B
   F22D    CA F239              JZ              SSIDEA
   F230    DB53                 IN              DCMD    ; SET SIDE FOR 1791
   F232    CBA7                 RES             4,A             ; SET SIDE B
   F234    D353                 OUT             DCMD
   F236    C3 F23F              JMP             SETSIDE
   F239                 SSIDEA:
   F239    DB53                 IN              DCMD            ; SET SIDE FOR 1791






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 22




   F23B    CBE7                 SET             4,A                     ; SET SIDE A
   F23D    D353                 OUT             DCMD
                        
   F23F                 SETSIDE:
   F23F    C5                   PUSH    B
   F240    06FF                 MVI             B,0FFH          ;Slight delay for hardware
   F242    10FE                 DELYS:  DJNZ DELYS
   F244    C1                   POP             B
                                
   F245                 SSECTOR:
   F245    78                   MOV     A,B                     ;GET BACK SECTOR
   F246    E67F                 ANI     07FH            ;DROP SIDE BIT
   F248    D356                 OUT     WSECT           ;UPDATE 179X SECTOR REGISTER
                        
   F24A    3A FA1B              LDA     PCMD            ;GET READ OR WRITE COMMAND
   F24D    CBCF                 SET     WBSID1,A        ;UPDATE SSO BIT TO 1
   F24F    CB78                 BIT     7,B                     ;ARE WE ON SIDE 1(y/n)
   F251    2802                 JRZ     SID01           ;NO, LEAVE WBSIDE BIT AS 0
   F253    CBDF                 SET     WBSIDE,A
                        
                        
   F255                 SID01:  
   F255    D354                 OUT     WCMD            ;FOR PIO 179X COMMAND
   F257    32 FA2C      SID2:   STA     OCMD
   F25A    32 FA1C              STA     ORWCMD          ;SAVE LAST READ OR WRITE CMD
   F25D    57                   MOV     D,A             ;SAVE THE COMMAND
                        
   F25E    3A FA23              LDA     D3SWT           ;GET WAIT ACTIVE VF2 BYTE
   F261    D353                 OUT     DCMD    
                        
   F263    32 FA2B              STA     OD3S
                        
   F266    01 8057              LXI     B,128 < 8+WDATA ;SET PORT AND LENGTH
   F269    3A FA0D              LDA     PTRACK          ;GET CURRENT TRACK
   F26C    21 FA54              LXI     H,OFF
   F26F    BE                   CMP     M               ;IS IT A USER TRACK(y/n)
   F270    3A FA58              LDA     USLEN           ;GET USER SECTOR LENGTH
   F273    3003                 JRNC    ULEN
   F275    3A FA56              LDA     SSLEN           ;GET SYSTEM SECTOR LENGTH
                        
   F278    2A FA11      ULEN:   LHLD    PDMA            ;GET DMA ADDRESS
   F27B    CB6A                 BIT     WBWRIT,D        ;ARE WE WRITING(y/n)
   F27D    2017                 JRNZ    WRIT            ;YES, GO WRITE
                        
                        
                        ;********************************************************
                        ;                     READ THE SECTOR.
                        ;********************************************************
                        
   F27F                 PIRD:   
   F27F    B7                   ORA     A
   F280    280E                 JRZ     PR12
   F282    0600                 MVI     B,0H
   F284    3D                   DCR     A
   F285    2809                 JRZ     PR25






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 23




   F287    3D                   DCR     A
   F288    2804                 JRZ     PR51
   F28A    EDB2                 INIR
   F28C    EDB2                 INIR
   F28E    EDB2         PR51:   INIR
   F290                 PR25:
   F290    EDB2         PR12:   INIR
                                
   F292                 RDFN:   
                        
   F292    0E9C                 MVI     C,WSREAD        ;STATUS BITS TO TEST
   F294    1815                 JMPR    CHEK
                        
                        ;********************************************************
                        ;                   WRITE THE SECTOR.
                        ;********************************************************
                        
   F296                 WRIT:   
   F296    B7                   ORA     A
   F297    280E                 JRZ     PW12
   F299    0600                 MVI     B,0H
   F29B    3D                   DCR     A
   F29C    2809                 JRZ     PW25
   F29E    3D                   DCR     A
   F29F    2804                 JRZ     PW51
   F2A1    EDB3                 OUTIR
   F2A3    EDB3                 OUTIR
                        
   F2A5    EDB3         PW51:   OUTIR
   F2A7                 PW25:
   F2A7    EDB3         PW12:   OUTIR
                                                
   F2A9                 WRFN:   
   F2A9    0EFC                 MVI     C,WSWRIT        ;STATUS BITS TO TEST
                        
                        
                        ;********************************************************
                        ;       WAIT FOR COMPLETION OF DISK OPERATION.
                        ;       TEST FOR ERRORS.
                        ;********************************************************
                        
   F2AB                 CHEK:   
   F2AB    3A FA22              LDA     D3SNO           ;GET NO WAIT VF2 BYTE
   F2AE    D353                 OUT     DCMD
   F2B0    32 FA2B              STA     OD3S
   F2B3    CD F3A8              CALL    FQDONE          ;WAIT FOR 179X DONE
   F2B6    A1                   ANA     C               ;ANY ERROR BITS(y/n)
   F2B7    C8                   RZ                      ;NO, RETURN - SUCCESSFUL
                        
                        
                        ;********************************************************
                        ;           RETRY THE I/O IF AN ERROR OCCURED.
                        ;********************************************************
                        
   F2B8                 NOPRNT: 






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 24




   F2B8    21 FA18              LXI     H,RMACRO        ;POINT TO MACRO RETRY COUNT
   F2BB    35                   DCR     M               ;DECREMENT IT
   F2BC    C2 F21C              JNZ     MIC             ;RE-DO READ/WRITE
                        
   F2BF    21 EE51              LXI     H,KBIT
   F2C2    35                   DCR     M
   F2C3    CA F2D1              JZ      KEYIT
                        
   F2C6    CD F36D              CALL    FHOME
   F2C9    D8                   RC
   F2CA    AF                   XRA     A
   F2CB    32 FA51              STA     TRACK
   F2CE    C3 F1E4              JMP     MAC
                        
                        ;       IF WE CAME HERE IT IS TIME TO RE-CALIBRATE THE DRIVE
                        
   F2D1                 KEYIT:  
   F2D1    3E04                 MVI     A,4
   F2D3    32 EE51              STA     KBIT
   F2D6    3A FA29              LDA     ISTAT           ;GET BACK LAST STATUS
   F2D9    A1                   ANA     C
   F2DA    CD F3B2              CALL    EPRINT
                        
                        ;********************************************************
                        ;THE FOLLOWING ROUTINE WAITS FOR USER
                        ;TO RETRY OPERATION ON DRIVE WITH ERROR
                        ;********************************************************
                        
   F2DD                 NORE:   
   F2DD    CD F36D              CALL    FHOME
   F2E0    DA F4AC              JC      FATERR
   F2E3    AF                   XRA     A
   F2E4    32 FA51              STA     TRACK
                        
                        ; ON A MEDIA ERROR YOU CAN TYPE IN A CONTROL CHARACTER
                        ; THAT DETERMINS WHAT THE BIOS AND BDOS WILL DO NEXT
                        ;
                        ; - CONTROL-C TO WARM BOOT (YOU GIVE UP ON ERROR)
                        ; - CONTROL-D TO IGNORE THE ERROR SO YOU CAN READ/WRITE
                        ;   'BAD' DATA AND CONTINUE ON WITHOUT A 'BDOS BAD SECTOR' MESSAGE
                        ; - <RETURN> TO RETRY THE OPERATION ANOTHER 12 TIMES
                        
   F2E7                 CRIN:   
   F2E7    CD F548              CALL    CONST           ;SEE IF KEY PRESSED
   F2EA    28FB                 JRZ     CRIN            ;IF NOT KEEP RINGING
   F2EC    CD F552              CALL    CONIN           ;GET CHAR
   F2EF    FE03                 CPI     3               ;A ^C (y/n)
   F2F1    CA EE71              JZ      EEXIT           ;DO A WARM BOOT IF SO
   F2F4    FE04                 CPI     4               ;A ^D (y/n)
   F2F6    280D                 JRZ     FXER            ;IGNORE ERROR
   F2F8    FE0D                 CPI     13              ;SEE IF 'CR'
   F2FA    20EB                 JRNZ    CRIN            ;IF NOT TRY AGAIN
   F2FC    21 FA26              LXI     H,MRML
   F2FF    35                   DCR     M
   F300    37                   STC






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 25




   F301    C8                   RZ
   F302    C3 F1E4              JMP     MAC             ;DO ANOTHER RE-TRY
                        
                        
                        ;IGNORE DISK I/O ERROR AND CONTINUE WITH STATUS SET O.K.
                        
   F305                 FXER:   
   F305    37                   STC                     ;FIX UP CARRY
   F306    3F                   CMC
   F307    AF                   XRA     A               ;CLEAR ERROR FLAG
   F308    C9                   RET
                        
                        
                        ;********************************************************
                        ; SET VF2 CONTROL BYTE. GET 2 VF2 CONTROL BYTES, ONE
                        ; WITH THE HARDWARE WAIT BIT ACTIVE AND ONE WITHOUT,
                        ; FROM THE 8 POSSIBLE CONTROL BYTES. OUTPUT THE NO WAIT
                        ; BYTE. SAVE BOTH FOR LATER USE.
                        ;********************************************************
                        
   F309    3A FA0D      SETD3S: LDA     PTRACK          ;GET DESIRED TRACK
   F30C    21 FA54              LXI     H,OFF
   F30F    BE                   CMP     M               ;USER TRACK(y/n)
   F310    21 FA4D              LXI     H,US0N          ;POINT TO USER TRACK BYTES
   F313    3003                 JRNC    USER
   F315    21 FA49              LXI     H,SS0N          ;POINT TO SYSTEM TRACK BYTES
                        
   F318    3A FA0F      USER:   LDA     PSECT           ;TEST IF ON SIDE 1
   F31B    CB7F                 BIT     7,A
   F31D    2802                 JRZ     SID0            ;ON SIDE 0
   F31F    23                   INX     H               ;POINT TO SIDE 1 BYTES
   F320    23                   INX     H
                        
   F321    5E           SID0:   MOV     E,M             ;GET THE NO WAIT BYTE
   F322    23                   INX     H
   F323    56                   MOV     D,M             ;GET THE WAIT BYTE
   F324    ED53 FA22            SDED    D3SNO           ;SAVE BOTH
   F328    7B                   MOV     A,E
   F329    D353                 OUT     DCMD            ;OUTPUT THE NO WAIT BYTE
   F32B    32 FA2B              STA     OD3S
   F32E    C9                   RET
                        
                        
                        ;********************************************************
                        ; GET VF2 CONTROL BYTES. CREATE THE EIGHT VF2 CONTROL
                        ; BYTES IN ATABLE. THESE BYTES SET THE DENSITY BIT FOR
                        ; SYSTEM TRACKS AND USER TRACKS, SELECT SIDE 0 OR SIDE
                        ; 1, AND ENABLE OR DISABLE THE HARDWARE DATA WAIT.
                        ; CREATE THE BYTES BY MERGING THE APPROPRIATE HARDWARE
                        ; CONTROL BITS IN OPRTAB WITH THE CORRECT ADDRESS
                        ; CONTROL BITS IN ADRTAB.
                        ;********************************************************
                        
   F32F    3A FA19      GETD3S: LDA     ADISK           ;GET CURRENT DISK NUMBER
   F332    21 EE4B              LXI     H,ADRTAB        ;POINT TO ADDRESS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 26




   F335    5F                   MOV     E,A             ;CONTROL BITS TABLE
   F336    1600                 MVI     D,0
   F338    19                   DAD     D
   F339    4E                   MOV     C,M             ;SAVE ADDR BITS FOR VF2 BYTES
                        
   F33A    3A FA53              LDA     FLAG            ;GET THE FLAG
   F33D    E614                 ANI     00010100B       ;ISOLATE SYSTEM DENSITY, SIZE
   F33F    47                   MOV     B,A
   F340    0F                   RRC                     ;ALIGN THE DENSITY BIT
   F341    B0                   ORA     B               ;COMBINE SIZE AND DENSITY
   F342    E60C                 ANI     00001100B       ;DROP UNALIGNED BITS
   F344    11 FA49              LXI     D,SS0N          ;POINT TO BEGINNING OF DEST
   F347    CD F34F              CALL    GET             ;GET SYSTEM TRACK VF2 BYTES
                        
   F34A    3A FA53              LDA     FLAG            ;GET THE FLAG
   F34D    E60C                 ANI     00001100B       ;ISOLATE USER DENSITY, SIZE
                                                        ;AND GET USER TRACK VF2 BYTES
                        
   F34F    21 EE3B      GET:    LXI     H,OPRTAB        ;POINT TO CONTROL BITS TABLE
   F352    D5                   PUSH    D
   F353    5F                   MOV     E,A             ;GET CONTROL BITS START ADDRESS
   F354    1600                 MVI     D,0
   F356    19                   DAD     D               ;START ADDRESS NOW IN HL
   F357    D1                   POP     D               ;DESTINATION RESTORED TO DE
   F358    0604                 MVI     B,4
   F35A    7E           LOOP3:  MOV     A,M             ;GET A BYTE OF CONTROL BITS
   F35B    23                   INX     H
   F35C    B1                   ORA     C               ;COMBINE WITH ADDRESS BITS
   F35D    12                   STAX    D               ;STORE COMBINED BYTE
   F35E    13                   INX     D
   F35F    10F9                 DJNZ    LOOP3           ;DO ALL BYTES
   F361    C9                   RET
                        
                        ;********************************************************
                        ; WAIT FOR TRIM ERASE TO END. WAIT ONLY IF THE LAST
                        ; FLOPPY DISK COMMAND WAS A WRITE. CALLED ONLY IF
                        ; PHYSICAL HEAD MOTION IS NEEDED TO ACCESS THE NEXT
                        ; SECTOR. THE WAIT IS ABOUT 500 USEC AT 4 MHZ. THIS
                        ; ALLOWS TRIM ERASE TO COMPLETE BEFORE THE DRIVE IS
                        ; DESELECTED OR THE HEAD IS MOVED.
                        ;********************************************************
                        
   F362    3A FA1C      TRIMWT: LDA     ORWCMD          ;GET LAST READ OR WRITE COMMAND
   F365    CB6F                 BIT     WBWRIT,A        ;TEST WRITE BIT
   F367    C8                   RZ                      ;IT WAS A READ, DON'T WAIT
   F368    0696                 MVI     B,150           ;WAIT
   F36A    10FE                 DJNZ    . 
   F36C    C9                   RET
                        
                        
                        ;********************************************************
                        ;* MULTI-PURPOSE 179X SEEK SUBROUTINE. THE ENTRY
                        ;* POINTS ARE:
                        ;*
                        ;*      FHOME - RESTORE HEAD TO TRACK 0 POSITION






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 27




                        ;*      FSEEK - SEEK WITH HEAD LOAD TO DEST. IN ACC
                        ;*
                        ;*      FUNLD - SEEK SAME TRACK TO UNLOAD HEAD
                        ;*      FLOAD - SEEK SAME TRACK TO LOAD HEAD
                        ;*
                        ;* FOR THESE LAST TWO FUNCTIONS THE COMMAND IS STILL IN
                        ;* PROGRESS WHEN RETURN IS MADE. THE CALLING PROGRAM
                        ;* MUST WAIT FOR THE COMMAND TO COMPLETE.
                        ;*******************************************************
                        
   F36D    0608         FHOME:  MVI     B,WHOME         ;SET UP HOME COMMAND
   F36F    1804                 JMPR    FH
                        
   F371    D357         FSEEK:  OUT     WDATA           ;OUTPUT SEEK DESTINATION
   F373    0618                 MVI     B,WSEEK         ;SET UP SEEK, DIFFERENT TRACK
                        
   F375    3A FA52      FH:     LDA     SPEED           ;GET SEEK SPEED
   F378    B0                   ORA     B               ;MERGE WITH SEEK COMMAND
   F379    D354                 OUT     WCMD            ;OUTPUT TO 179X
   F37B    32 FA2C              STA     OCMD
   F37E    CD F3A4              CALL    FDONE
   F381    E698                 ANI     WSSEEK          ;ELIMINATE UNWANTED STATUS BITS
                        
                        
                        ;********************************************************
                        ;    NOW GO IN A WAIT LOOP FOR HEAD SETTLE TIME
                        ;********************************************************
                        
   F383    F5           SETL:   PUSH    PSW             ;SAVE FLAGS
                        
   F384    3A FA1B              LDA     PCMD
   F387    CB6F                 BIT     5,A             ;SEE IF READ OR WRITE
   F389    2807                 JRZ     NDLY
                                
   F38B    3E14                 MVI     A,20            ;WAIT 20 MS
   F38D    10FE         SETL1:  DJNZ    SETL1           ;LOOP ON B REG
   F38F    3D                   DCR     A               ;LOOP ON SETTLE VALUE
   F390    20FB                 JRNZ    SETL1
   F392                 NDLY:
   F392    F1                   POP     PSW             ;GET BACK REGS
   F393    C8                   RZ                      ;RETURN - SUCCESSFUL 
   F394    37                   STC
   F395    C9                   RET                     ;RETURN WITH CARRY SET - ERROR
                        
   F396    0610         FUNLD:  MVI     B,WUNLD         ;SET UP UNLOAD COMMAND
   F398    1802                 JMPR    FU
                        
   F39A    0618         FLOAD:  MVI     B,WLOAD         ;SET UP LOAD COMMAND
                        
   F39C    DB55         FU:     IN      WTRACK          ;GET CURRENT TRACK
   F39E    D357                 OUT     WDATA           ;OUTPUT SEEK DESTINATION
                        
   F3A0    78                   MOV     A,B             ;OUTPUT SEEK COMMAND
   F3A1    D354                 OUT     WCMD
   F3A3    C9                   RET






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 28




                        
                        
                        ;********************************************************
                        ; 179X NOT BUSY SUBROUTINE. WAIT FOR 179X NOT BUSY.
                        ; THEN RETURN THE LAST STATUS READ FROM THE CHIP. THERE
                        ; ARE TWO ENTRY POINTS. FDONE DELAYS A SHORT WHILE TO
                        ; ALLOW THE 179X TO SET ITS BUSY BIT.
                        ; THIS ROUTINE TESTS FOR TYPE 1 AND TYPE 2
                        ; COMMAND COMPLETION. 
                        ;********************************************************
                        
   F3A4                 FDONE:
                        
   F3A4    060A                 MVI     B,10            ;DELAY
   F3A6    10FE                 DJNZ    .
   F3A8                 FQDONE:
   F3A8                 PIODON:
   F3A8    DB54                 IN      WSTAT
   F3AA    32 FA29              STA     ISTAT
   F3AD    CB47                 BIT     WBBUSY,A
   F3AF    20F7                 JRNZ    PIODON
   F3B1    C9                   RET     
                                
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK ERROR PRINT SUBROUTINE. ANY NON ZERO BITS
                        ; IN THE ACCUMULATOR ARE ERRORS. THE FIRST ONE FOUND IS
                        ; PRINTED OUT.
                        ;********************************************************
                        
   F3B2    57           EPRINT: MOV     D,A     ;SAVE ERROR BITS
   F3B3    79                   MOV     A,C     ;STORE CALLING ROUTINE ID
   F3B4    32 FA2A              STA     ACTIVE
   F3B7    DB55                 IN      WTRACK  ;STORE TRACK REGISTER
   F3B9    32 FA27              STA     ITRACK
   F3BC    DB56                 IN      WSECT   ;STORE SECTOR REGISTER
   F3BE    32 FA28              STA     ISECT
                        
   F3C1    CD F4B7              CALL    MSG
   F3C4    0D0A                 .BYTE   CR,LF
   F3C6    457272206F6E         .ASCIZ  \Err on \
   F3CE    3A FA0C              LDA     PDISK
   F3D1    C641                 ADI     'A'
   F3D3    4F                   MOV     C,A
   F3D4    CD EE0C              CALL    BIOOUT
   F3D7    CD F4B7              CALL    MSG
   F3DA    3A202000             .ASCIZ  \:  \
                        
   F3DE    CBCA                 SET     1,D     ;ENSURE NON ZERO ERROR BYTE
   F3E0    0600                 MVI     B,0
   F3E2    04           ..FIND: INR     B
   F3E3    CB12                 RALR    D       ;FIND FIRST NON ZERO BIT
   F3E5    30FB                 JRNC    ..FIND
   F3E7    21 F410              LXI     H,ERMESS ;POINT TO MESSAGE TABLE






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 29




   F3EA    1805                 JMPR    ..JOIN
   F3EC    7E           ..MORE: MOV     A,M     ;PUT MESSAGE CHAR IN A
   F3ED    A7                   ANA     A       ;SET FLAG BITS
   F3EE    23                   INX     H
   F3EF    20FB                 JRNZ    ..MORE  ;KEEP LOOKING FOR NULL TERMINATOR, THIS MSG
   F3F1    10F9         ..JOIN: DJNZ    ..MORE  ;KEEP LOOKING FOR CORRECT MSG
   F3F3    CD F4BD              CALL    MSGHL   ;PRINT OUT CORRECT MESSAGE
   F3F6    CD F4B7              CALL    MSG
   F3F9    2000                 .ASCIZ  \ \
                        
   F3FB    0607                 MVI     B,EILEN ;NUMBER OF ERROR INFO BYTES
   F3FD    21 FA27              LXI     H,EINFO
   F400    CD F4B7      ..LOOP: CALL    MSG     ;SPACE BETWEEN BYTES
   F403    2000                 .ASCIZ  \ \
   F405    7E                   MOV     A,M
   F406    23                   INX     H
   F407    CD F446              CALL    LBYTE   ;PRINT NEXT BYTE
   F40A    10F4                 DJNZ    ..LOOP
                        
   F40C    3E01                 MVI     A,1     ;CP/M ERROR FLAG
   F40E    37                   STC             ;INTERNAL ERROR FLAG
   F40F    C9                   RET
                        
                        ; FLOPPY DISK ERROR MESSAGES. USED BY THE EPRINT
                        ; ROUTINE TO TELL THE USER WHICH 179X ERROR OCCURED.
                        
   F410    4E6F74205265 ERMESS: .ASCIZ  \Not Ready\
   F41A    577269746520         .ASCIZ  \Write Protect\
   F428    4661756C7400         .ASCIZ  \Fault\
   F42E    524E4600             .ASCIZ  \RNF\
   F432    426164204352         .ASCIZ  \Bad CRC\
   F43A    4C6F73742044         .ASCIZ  \Lost Data\
   F444    3F00                 .ASCIZ  \?\
                        
                        
                        ;********************************************************
                        ;            PRINT HEX BYTE ON CONSOLE.
                        ;********************************************************
                        
   F446    F5           LBYTE:  PUSH    PSW
   F447    0F                   RRC
   F448    0F                   RRC
   F449    0F                   RRC
   F44A    0F                   RRC
   F44B    CD F44F              CALL    P2
   F44E    F1                   POP     PSW
   F44F    E60F         P2:     ANI     0FH
   F451    C690                 ADI     90H
   F453    27                   DAA
   F454    CE40                 ACI     40H
   F456    27                   DAA
   F457    4F                   MOV     C,A
   F458    C3 EE0C              JMP     BIOOUT
                        
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 30




                        ;********************************************************
                        ; MOVE ATABLE INTO THE CORRECT APB. MOVE THE CORRECT
                        ; APB INTO ATABLE.
                        ;********************************************************
                        
   F45B    3A FA19      PUTAPB: LDA     ADISK           ;GET CURRENT ATABLE NUMBER
   F45E    CD F48F              CALL    ASET            ;SET UP FOR MOVE
   F461    EDB0                 LDIR                    ;COPY ATABLE INTO APB
   F463    C9                   RET
                        
   F464    21 FA19      GETAPB: LXI     H,ADISK         ;POINT TO ATABLE DRIVE NUMBER
   F467    3A FA0C              LDA     PDISK           ;GET NEW NUMBER
   F46A    BE                   CMP     M               ;THE SAME(y/n)
   F46B    C8                   RZ                      ;YES, ATABLE ALREADY VALID
   F46C    77                   MOV     M,A             ;UPDATE ATABLE NUMBER
   F46D    CD F48F              CALL    ASET            ;SET UP FOR MOVE
   F470    EB                   XCHG                    ;APB ADDRESS NOW SOURCE
   F471    EDB0                 LDIR                    ;COPY APB INTO ATABLE
                        
                        ;NOW GET ALLOCATION SIZE FOR SELECTED DISK
                        
   F473    3A FA0C              LDA     PDISK           ;GET DISK #
   F476    5F                   MOV     E,A             ;MAKE INDEX
   F477    1600                 MVI     D,0
   F479    21 FA2E              LXI     H,ALOCSZ        ;POINT TO SAVED BSH TABLE
   F47C    19                   DAD     D
   F47D    7E                   MOV     A,M             ;GET BSH VALUE
   F47E    21 F48A              LXI     H,ALOREC        ;POINT TO RECORDS/ALLOCATION SIZE
   F481    D603                 SUI     3               ;SET FOR INDEX
   F483    5F                   MOV     E,A             ;MAKE INDEX
   F484    19                   DAD     D
   F485    7E                   MOV     A,M             ;GET RECORDS/ALLOCATION
   F486    32 FA32              STA     ALOCA           ;SAVE # FOR SELECTED DRIVE
                        
   F489    C9                   RET
                        
                        ;TABLE FOR # OF RECORDS FOR ALLOCATION SIZES FROM 1K TO 16K
                        
   F48A                 ALOREC: 
   F48A    0810204080           .BYTE   8,16,32,64,128
                        
                        
   F48F    6F           ASET:   MOV     L,A             ;GET DISK NUMBER INTO L
   F490    CD F49A              CALL    GETDPH
   F493    21 FA49              LXI     H,ATABLE
   F496    01 0011              LXI     B,ALEN
   F499    C9                   RET
                        
                        
                        ;********************************************************
                        ; GET DPH ADDRESS AND APB ADDRESS. RETURN THE DPH
                        ; ADDRESS IN HL, THE CORRESPONDING APB ADDRESS IN DE.
                        ; DISK NUMBER MUST BE IN L AT CALL.
                        ;********************************************************
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 31




   F49A    2600         GETDPH: MVI     H,0
   F49C    29                   DAD     H               ;GET NUMBER * 2
   F49D    5D                   MOV     E,L
   F49E    54                   MOV     D,H
   F49F    29                   DAD     H
   F4A0    29                   DAD     H
   F4A1    29                   DAD     H               ;GET NUMBER * 16
   F4A2    19                   DAD     D               ;GET NUMBER * 18
   F4A3    11 F566              LXI     D,APBBEG
   F4A6    19                   DAD     D               ;NOW WE HAVE ADDR OF APB ADDR
   F4A7    5E                   MOV     E,M             ;GET APB ADDRESS INTO DE
   F4A8    23                   INX     H
   F4A9    56                   MOV     D,M
   F4AA    23                   INX     H               ;HL NOW HAS DPH ADDRESS
   F4AB    C9                   RET
                        
                        
                        ;********************************************************
                        ;                  FATAL ERROR.
                        ;********************************************************
                        
   F4AC                 FATERR:
   F4AC    CD F4B7      QUIT:   CALL    MSG
   F4AF    2053545000                   .ASCIZ  ' STP'
   F4B4    C3 EE71                      JMP     EEXIT           ;GO WARM BOOT
                        
                        ;********************************************************
                        ; MESSAGE OUTPUT SUBROUTINE. THERE ARE TWO ENTRY
                        ; POINTS. FOR MSG A MESSAGE FOLLOWS INLINE AFTER THE
                        ; CALL. FOR MSGHL THE MESSAGE ADDRESS IS IN HL. FOR
                        ; BOTH ENTRY POINTS THE MESSAGE IS PRINTED OUT UNTIL A
                        ; NULL TERMINATOR.
                        ;********************************************************
                        
   F4B7    E3           MSG:    XTHL                    ;GET MESSAGE ADDRESS
   F4B8    CD F4BD              CALL    MSGHL           ;PRINT THE MESSAGE
   F4BB    E3                   XTHL                    ;RESTORE NEW RETURN ADDRESS
   F4BC    C9                   RET
                        
   F4BD    4E           MSGHL:  MOV     C,M             ;GET CURRENT CHAR OF MESSAGE
   F4BE    79                   MOV     A,C
   F4BF    A7                   ANA     A
   F4C0    C8                   RZ                      ;NULL TERMINATOR, RETURN
   F4C1    CD EE0C              CALL    BIOOUT          ;OUTPUT THE CHAR
   F4C4    23                   INX     H               ;POINT TO NEXT CHAR
   F4C5    18F6                 JMPR    MSGHL           ;KEEP GOING
                        
                        ;********************************************************
                        ; I/O Routines: these routines implement the various
                        ; destinations selectable through the IOBYTE. By default,
                        ; only TTY is implemented, everything else falls through
                        ; to TTY. Expand and implement for custom IOBYTE options.
                        ;********************************************************
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 32




                        ;Unimplemented status routines
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: return with 0 in A if no char available
                        ;post: return with 0xFF in A if char available
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4C7                 UC1IS:                          ;NOT IMPLEMENTED
   F4C7                 BATIS:                          ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;TTYIS -- TTY Status Routine
                        ;
                        ;pre: TTY device is initialized
                        ;post: return with 0 in A if no char available
                        ;post: return with 0xFF in A if char available
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4C7                 TTYIS:
   F4C7    3E00                 MVI     A,KBSTAT
   F4C9    4F                   MOV     C,A
   F4CA    3E02                 MVI     A,KIN
   F4CC    5F                   MOV     E,A
   F4CD    ED78                 INP     A
   F4CF    00                   NOP
                        ;       CMA FOR NEGATIVE LOGIC
   F4D0    00                   NOP
   F4D1    A3                   ANA     E
   F4D2    00                   NOP
   F4D3    00                   NOP
   F4D4    C8                   RZ                      ;RETURN FALSE IF UNAVAILABLE
   F4D5    00                   NOP
   F4D6    00                   NOP
   F4D7    3EFF                 MVI     A,0FFH
   F4D9    C9                   RET                     ;RETURN TRUE
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CRTIS -- Serial Device Status Routine
                        ;
                        ;pre: serial device is initialized
                        ;post: return with 0 in A if no char available
                        ;post: return with 0xFF in A if char available
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4DA                 CRTIS:                          
   F4DA    DBA1                 IN      KEYSTAT
   F4DC    E601                 ANI     01H
   F4DE    C8                   RZ                      ;RETURN WITH 0 IN [A] IF NOTHING THERE
   F4DF    3EFF                 MVI     A,0FFH
   F4E1    C9                   RET                     ;RETURN WITH 0FFH IN [A] IF SOMETHING
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;Unimplemented input routines
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: return with character from device in A register
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4E2                 UC1IN:                          ;NOT IMPLEMENTED






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 33




   F4E2                 BATIN:                          ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;TTYIN -- Get a character from the TTY device
                        ;
                        ;pre: TTY device is initialized
                        ;post: return with character from device in A register,
                        ;      strips parity
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4E2    CD F4C7      TTYIN:  CALL    TTYIS           ;GET STATUS
   F4E5    CA F4E2              JZ      TTYIN           ;WAIT UNTIL DATA AVAILABLE
   F4E8    3E01                 MVI     A,KBIO
   F4EA    4F                   MOV     C,A
   F4EB    ED78                 INP     A
   F4ED    00                   NOP
   F4EE    00                   NOP
   F4EF    E67F                 ANI     07FH            ;DROP PARITY
   F4F1    C9                   RET
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CRTIN -- Get a character from the Serial device
                        ;
                        ;pre: Serial device is initialized
                        ;post: return with character from device in A register,
                        ;      strips parity
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4F2                 CRTIN:                          
   F4F2    DBA1                 IN      KEYSTAT
   F4F4    E601                 ANI     01H
   F4F6    CA F4F2              JZ      CRTIN
   F4F9    DBA3                 IN      KEYIN
   F4FB    E67F                 ANI     7FH
   F4FD    C9                   RET
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;TTYOS -- TTY output status
                        ;
                        ;pre: TTY device is initialized
                        ;post: return with 0 in A if not ready to transmit
                        ;post: return with 0xFF in A if ready to transmit
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F4FE                 TTYOS:
   F4FE    C5                   PUSH    B
   F4FF    3E00                 MVI     A,CSTAT
   F501    4F                   MOV     C,A
   F502    3E04                 MVI     A,COUT
   F504    5F                   MOV     E,A
   F505    ED78                 INP     A
                        ;       CMA FOR NEGATIVE LOGIC
   F507    00                   NOP
   F508    00                   NOP
   F509    A3                   ANA     E
   F50A    C1                   POP     B
   F50B    C8                   RZ                      ;RETURN FALSE IF NOT EMPTY
   F50C    00                   NOP






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 34




   F50D    00                   NOP
   F50E    3EFF                 MVI     A,0FFH
   F510    C9                   RET                     ;RETURN TRUE
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CRTINIT -- Init serial devices
                        ;
                        ;post: serial device will be initialized
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F511                 CRTINIT:
   F511    21 F51B                      LXI     H,SCCINIT
   F514    0EA1                 MVI     C,0A1H
   F516    060E                 MVI     B,0EH
   F518    EDB3                 OUTIR
   F51A    C9                           RET
                        
   F51B                 SCCINIT:
   F51B    04                   .BYTE      04H
   F51C    44                   .BYTE      044H
   F51D    03                   .BYTE      03H
   F51E    C1                   .BYTE      0C1H
   F51F    05                   .BYTE      05H
   F520    EA                   .BYTE      0EAH
   F521    0B                   .BYTE      0BH
   F522    56                   .BYTE      056H
   F523    0C                   .BYTE      0CH
   F524    02                   .BYTE      02H
   F525    0D                   .BYTE      0DH
   F526    00                   .BYTE      00H
   F527    0E                   .BYTE      0EH
   F528    01                   .BYTE      01H
   F529    0F                   .BYTE      0FH
   F52A    00                   .BYTE      00H
   F52B    00                   .BYTE      00H
   F52C    00                   .BYTE      00H
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;Unimplemented output routines
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: character in C output to device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F52D                 UC1OUT:                         ;NOT IMPLEMENTED
   F52D                 BATOUT:                         ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;TTYOUT -- output character to TTY
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: character in C output to TTY
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F52D                 TTYOUT:
   F52D    CD F4FE              CALL    TTYOS           ;GET STATUS
   F530    CA F52D              JZ      TTYOUT          ;WAIT UNTIL BUFFER EMPTY
   F533    59                   MOV     E,C






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 35




   F534    3E01                 MVI     A,CIO
   F536    4F                   MOV     C,A
   F537    7B                   MOV     A,E
   F538    00                   NOP
   F539    00                   NOP
   F53A    ED79                 OUTP    A               ;OUTPUT THE DATA
   F53C    C9                   RET
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CRTOUT -- output character to serial device
                        ;
                        ;pre: I/O devices are already initialized
                        ;post: character in C output to serial device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F53D                 CRTOUT:
   F53D    DBA1                 IN      CRTSTAT
   F53F    E604                 ANI     04H
   F541    CA F53D              JZ      CRTOUT
   F544    79                   MOV     A,C
   F545    D3A3                 OUT     KEYOUT
   F547    C9                   RET
                        
                        ;********************************************************
                        ; I/O Routines for IOBYTE Vectored Devices
                        ;
                        ; These routines deal with IOBYTE vectored devices. By
                        ; default, these are not implemented and fall through
                        ; to the console routines. With the default IOBYTE
                        ; implementation, everything uses the TTY.
                        ;********************************************************
                        
   F548                 LISTST:                         ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CONST -- Get the console status for the selected IOBYTE
                        ;         device
                        ;
                        ;pre: I/O devices are already initialized
                        ;pre: HIOBYTE is at port 0xEF and initialized
                        ;post: status check is handed off to selected device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F548                 CONST:  
   F548    DBEF                 IN      HIOBYTE
   F54A    E620                 ANI     020H
   F54C    CA F4DA              JZ      CRTIS
   F54F    C3 F4C7              JMP     TTYIS
                        
                        
   F552                 READER:                         ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CONIN -- Get a byte from the console device selected by
                        ;         the current IOBYTE
                        ;
                        ;pre: I/O devices are already initialized






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 36




                        ;pre: HIOBYTE is at port 0xEF and initialized
                        ;post: data request is handed off to selected device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F552                 CONIN:  
   F552    DBEF                 IN      HIOBYTE
   F554    E620                 ANI     020H
   F556    CA F4F2              JZ      CRTIN
   F559    C3 F4E2              JMP     TTYIN
                        
   F55C                 LIST:                           ;NOT IMPLEMENTED
   F55C                 PUNCH:                          ;NOT IMPLEMENTED
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;CONOUT -- Send a byte from the console device selected by
                        ;          the current IOBYTE
                        ;
                        ;pre: I/O devices are already initialized
                        ;pre: HIOBYTE is at port 0xEF and initialized
                        ;post: data request is handed off to selected device
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   F55C                 CONOUT:
   F55C    DBEF                 IN      HIOBYTE
   F55E    E620                 ANI     020H
   F560    CA F53D              JZ      CRTOUT
   F563    C3 F52D              JMP     TTYOUT
                        
                        ;********************************************************
                        ; FLOPPY DISK DPH TABLE. FOR THE CONVENIENCE OF THE
                        ; CBIOS THE APB ADDRESS FOR A DISK PRECEDES THE DPH
                        ; FOR THE DISK.
                        ;********************************************************
                        
   F566                 APBBEG: 
   F566    FA5D                 .WORD   APB0
   F568    FA7D                 .WORD   TRANS0          ;LOGICAL TO PHYSICAL XLATE TAB
   F56A    0000                 .WORD   0               ;SCRATCH
   F56C    0000                 .WORD   0
   F56E    0000                 .WORD   0
   F570    FC3D                 .WORD   DIRBUF          ;DIRECTORY BUFFER
   F572    FA6E                 .WORD   DPB0            ;DISK PARAMETER BLOCK
   F574    FD29                 .WORD   CSV0            ;CHECKSUM VECTOR
   F576    FCBD                 .WORD   ALV0            ;ALLOCATION VECTOR
                        
   F578    FAD5                 .WORD   APB1
   F57A    FAF5                 .WORD   TRANS1
   F57C    0000                 .WORD   0
   F57E    0000                 .WORD   0
   F580    0000                 .WORD   0
   F582    FC3D                 .WORD   DIRBUF
   F584    FAE6                 .WORD   DPB1
   F586    FDD5                 .WORD   CSV1
   F588    FD69                 .WORD   ALV1
                        
   F58A    FB4D                 .WORD   APB2
   F58C    FB6D                 .WORD   TRANS2






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 37




   F58E    0000                 .WORD   0
   F590    0000                 .WORD   0
   F592    0000                 .WORD   0
   F594    FC3D                 .WORD   DIRBUF
   F596    FB5E                 .WORD   DPB2
   F598    FE81                 .WORD   CSV2
   F59A    FE15                 .WORD   ALV2
                        
   F59C    FBC5                 .WORD   APB3
   F59E    FBE5                 .WORD   TRANS3
   F5A0    0000                 .WORD   0
   F5A2    0000                 .WORD   0
   F5A4    0000                 .WORD   0
   F5A6    FC3D                 .WORD   DIRBUF
   F5A8    FBD6                 .WORD   DPB3
   F5AA    FF2D                 .WORD   CSV3
   F5AC    FEC1                 .WORD   ALV3
                        
                        
                        ;********************************************************
                        ; STANDARD APBS, DPBS AND TRANSLATE TABLES. THESE
                        ; TABLES ARE USED BY SELDSK WHEN IT CANNOT FIND A VALID
                        ; DDB ON THE DISK. THE TABLES ARE FOR STANDARD 8" OR 5"
                        ; SINGLE DENSITY FLOPPY DISKS. THIS ALLOWS PROGRAM
                        ; INTERCHANGE WITH OTHER CP/M BASED SYSTEMS WITHOUT
                        ; REQUIRING A DDB TO BE WRITTEN ON EACH DISK.
                        ;********************************************************
                        
                        ;********************************************************
                        ;             8" FLOPPY DISK TABLES.
                        ;********************************************************
                        
   F5AE                 STDDDB: 
   F5AE    01                   .BYTE   00000001B       ;FLAG
   F5AF    0002                 .WORD   2               ;OFF
   F5B1    00                   .BYTE   0               ;SSLEN
   F5B2    1A                   .BYTE   26              ;SLRPS
   F5B3    00                   .BYTE   0               ;USLEN
   F5B4    1A                   .BYTE   26              ;ULRPS
                        
   F5B5    001A                 .WORD   26              ;STANDARD DPB
   F5B7    030700               .BYTE   3,7,0
   F5BA    00F2                 .WORD   242
   F5BC    003F                 .WORD   63
   F5BE    C000                 .BYTE   192,0
   F5C0    0010                 .WORD   16
   F5C2    0002                 .WORD   2
                        
   F5C4    01070D131905         .BYTE   1,7,13,19,25,5,11,17,23
   F5CD    03090F150208         .BYTE   3,9,15,21,2,8,14,20,26
   F5D6    060C1218040A         .BYTE   6,12,18,24,4,10,16,22
                        
                        
                        
                        ;********************************************************






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 38




                        ;            5" FLOPPY DISK TABLES.
                        ;********************************************************
                        
                        
   F5DE    05           ALTDDB: .BYTE   00000101B       ;FLAG
   F5DF    0003                 .WORD   3               ;OFF
   F5E1    00                   .BYTE   0               ;SSLEN
   F5E2    12                   .BYTE   18              ;SLRPS
   F5E3    00                   .BYTE   0               ;USLEN
   F5E4    12                   .BYTE   18              ;ULRPS
                        
   F5E5    0012                 .WORD   18              ;STANDARD DPB
   F5E7    030700               .BYTE   3,7,0
   F5EA    0047                 .WORD   71
   F5EC    003F                 .WORD   63
   F5EE    C000                 .BYTE   192,0
   F5F0    0010                 .WORD   16
   F5F2    0003                 .WORD   3
                        
   F5F4    0105090D1103         .BYTE   1,5,9,13,17,3,7,11,15
   F5FD    02060A0E1204         .BYTE   2,6,10,14,18,4,8,12,16
                        
                        ;********************************************************
                        ;       SECTOR READ AND WRITE BUFFERS.
                        ;********************************************************
                        
                        ; THE ORIGINAL CBIOS HAD INDEPENDENT READ AND WRITE BUFFERS.
                        ; BOHDAN COULDN'T WORK WITH THE DRI SINGLE BUFFER ALGORITHM,
                        ; SO HE LIMITED SECTOR SIZES TO 512 BYTES, AND HAD THESE LOCAL
                        ; READ AND WRITE BUFFERS. THAT WAY HE COULD IGNORE ANY 
                        ; ALLOCATION BLOCK-SIZE FLAGGING THAT BDOS PROVIDED.
                        ; B. JONES IMPLEMENTED THE DRI DEBLOCKING, COMBINED
                        ; RDBUFF & WRBUFF TO GIVE 1024 BYTE SECTOR SUPPORT.
                        ; RDBUFF & WRBUFF REFERANCES ARE STILL TO BE FOUND
                        ; IN THE PHYSICAL R/W CODE. THEY HAVE BEEN KEPT AS
                        ; FOSILS TO MARK THE ORIGINAL BUFFERING SCHEME.
                        
   F606                 HSTBUF:
   F606                 RDBUFF:
   F606                 WRBUFF:
   F606                 SYSNIT:
                        
                        ; SYSNIT CODE IS DISCARDED AFTER USE.
                        
   F606    CD F4B7      SIGNON: CALL    MSG
   F609    0D0A0A               .BYTE   CR,LF,LF
   F60C    446967697461         .ASCII  'Digital Research CP/M 2.2 '
                        
   F626    3634                 .BYTE   (MSIZ)/10+'0',(MSIZ) @10+'0'
   F628    4B2F                 .ASCII  'K/'
                        
   F62A    3536                 .BYTE (((BDOS-6)/1024)/10)+'0',((BDOS-6)/1024) @10+'0'
   F62C    4B20545041           .ASCII  'K TPA'
   F631    0D0A                 .BYTE   CR,LF
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 39




   F633    0D0A                 .BYTE   CR,LF
   F635    413A20262042         .ASCII  'A: & B: = 8" SDSS Floppies, C: = 5" DDDS Floppy'
   F664    0D0A                 .BYTE   CR,LF
   F666    5573696E6720         .ASCII  'Using a VersaFloppy II Board with a WD FD1791.'
   F694    0D0A                 .BYTE   CR,LF
   F696    0D0A00               .BYTE   CR,LF,00H
                        
   F699    C9                   RET
                        
   0094                         NITLEN  ==      .-SYSNIT
                        
   F69A                 BIOEND:
                        
                        ;********************************************************
                        ;        SHOW HOW MUCH DISK SPACE IS LEFT
                        ;********************************************************
                        
                        ;TOTAL BYTE NEEDED ON BOOT TRACKS ARE
                        ;FROM CCP TO END OF BIOS CODE PLUS LODER + DDB
                        
   1F9A                 TOTSIZ  ==      ((BIOEND-CCP)+128+128)
                        
                        ;SYSTEM SECTORS USED
                        
   000F                 SECUSD  ==      TOTSIZ/512
   1E00                 SECIS   ==      SECUSD*512
                        
                                .IFG    TOTSIZ-SECIS,[
   0010                         SECALL=SECUSD+1
                                ][
                                SECALL=SECUSD
                                ]
                        
                        
                        
                                .IFG    (.-BIOS)-(NSBIOS*128),[
                                .PRNTX  \BIOS EXCEEDS DISK SPACE \
                                ]
                        
                        
                                .DEFINE SBOND[XX]=[.PRNTX /XX BYTES OF SYSTEM TRACKS LEFT/
                                ]
                                .DEFINE SBOD[XX]=[.PRNTX /XX BYTES BEYOND SYSTEM TRACKS/
                                ]       
                        
                                .DEFINE TSIZE[XX]=[
                                .PRNTX  /XX BYTES TOTAL BOOT TRACKS SPACE NEEDED /      ]
                        
                        
                                .DEFINE SECNED[XX]=[
                                .PRNTX  /XX   OF 18, 512 BYTE SECTORS USED ON SYSTEM TRACKS /]
                        
                                .IF1,[
                                .IFG    (NSBIOS*128)-(.-BIOS),[
                                SBOND   \(NSBIOS*128)-(.-BIOS)






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 40




                                TSIZE   \TOTSIZ
                                .RADIX  10
                                SECNED  \SECALL
                                ][
                                SBOD    \(.-BIOS)-(NSBIOS*128)
                                ]
                                ]
                        
                        ;********************************************************
                        ; END OF BIOS INSTRUCTIONS AND CONSTANTS. BEGINNING
                        ; OF WORK AREA.
                        ;********************************************************
                        
                        ; 1024 BYTE HOST BUFFER ENDS HERE       
                        
   FA06                         .LOC    HSTBUFF+1024
                        
                        ;********************************************************
                        ; CP/M CALL PARAMETER STORAGE. CP/M SETS THE LOGICAL
                        ; PARAMETERS BY PRELIMINARY CALLS BEFORE CALLING THE
                        ; READ OR WRITE ROUTINES. THE CP/M I/O ROUTINES SET
                        ; AND USE THE REMAINING VARIABLES.
                        ;********************************************************
                        
   FA06                 DMAFLG: .BLKB   1               ;CONTROLLER TYPE FLAG   
   FA07                 SEKSEC: .BLKB   2               ;LOGICAL SECTOR TO R/W
   FA09                 DMAADD: .BLKB   2               ;LOGICAL & ACTUAL CP/M DMA ADDR
   FA0B                 CREC:   .BLKB   1               ;CURRENT RECORD WITHIN SECTOR
                        
                        
                        ;********************************************************
                        ; PHYSICAL DISK I/O PARAMETER STORAGE. THESE PARAMETERS
                        ; MUST BE SET BEFORE CALLING THE FLOPPY DISK PHYSICAL
                        ; READ OR WRITE ROUTINES.
                        ;********************************************************
                        
   FA0C                 PDISK:  .BLKB   1               ;PHYSICAL DISK FOR NEXT I/O
   FA0D                 PTRACK: .BLKB   2               ;PHYSICAL TRACK FOR NEXT I/O
   FA0F                 PSECT:  .BLKB   2               ;PHYSICAL SECTOR FOR NEXT I/O
   FA11                 PDMA:   .BLKB   2               ;PHYSICAL BUFFER ADDR, NEXT I/O
                        
   FA13                 CTRACK: .BLKB   2
   FA15                 CSECT:  .BLKB   2
                        
                        
                        
                        ;********************************************************
                        ;    GENERAL PURPOSE VARIABLES ARE STORED HERE.
                        ;********************************************************
                        
   FA17                 RETRY:
   FA17                 RMICRO: .BLKB   1               ;MICRO FDC RETRY COUNT
   FA18                 RMACRO: .BLKB   1               ;MACRO FDC RETRY COUNT
   FA19                 ADISK:  .BLKB   1               ;DISK NUMBER OF DISK AT ATABLE
   FA1A                 OLDFLO: .BLKB   1               ;OLD FLOPPY DRIVE NUMBER






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 41




   FA1B                 PCMD:   .BLKB   1               ;ACTUAL FLOPPY READ/WRITE CMD
   FA1C                 ORWCMD: .BLKB   1               ;LAST R/W OUTPUT TO CMD REG
   FA1D                 DPHADR: .BLKB   2               ;DPH ADDRESS FOR CURRENT DISK
   FA1F                 APBADR: .BLKB   2               ;APB ADDRESS FOR CURRENT DISK
   FA21                 WRTYPE: .BLKB   1               ;TYPE OF WRITE
   FA22                 D3SNO:  .BLKB   1               ;CURRENT NO WAIT VF2 BYTE
   FA23                 D3SWT:  .BLKB   1               ;CURRENT WAIT VF2 BYTE
   FA24                 SAVADR: .BLKB   2               ;STD OR ALT DDB ADDRESS
   FA26                 MRML:   .BLKB   1               ;MACRO RETRY MAJOR LOOP
                        
                        
                        ;********************************************************
                        ; ERROR INFORMATION STORAGE. VARIOUS ROUTINES USE THIS
                        ; AREA TO STORE KEY VARIABLES RELATING TO THE VF2
                        ; CONTROLLER AND THE 179X CHIP. 
                        ;********************************************************
                        
   FA27                 EINFO:
   FA27                 ITRACK: .BLKB   1               ;LAST INPUT FROM TRACK REG
   FA28                 ISECT:  .BLKB   1               ;LAST INPUT FROM SECTOR REG
   FA29                 ISTAT:  .BLKB   1               ;LAST INPUT FROM STATUS REG
   FA2A                 ACTIVE: .BLKB   1               ;SHOWS WHICH ROUTINE HAD ERROR
   FA2B                 OD3S:   .BLKB   1               ;LAST OUTPUT TO VF2 CTRL BYTE
   FA2C                 OCMD:   .BLKB   1               ;LAST OUTPUT TO CMD REG
   FA2D                 SIDEID: .BLKB   1               ;LAST SIDE SELECTED
                        
   0007                 EILEN   ==      .-EINFO
                        
                        
                        
                        ;********************************************************
                        ;*   ALLOCATION VALUES FOR SELECTED DISKS ARE NEXT
                        ;********************************************************
                        
   FA2E                 ALOCSZ: .BLKB   4               ;BSH VALUE FOR 4 DRIVES
   FA32                 ALOCA:  .BLKB   1               ;RECORDS/BLOCK FOR SELECTED DRIVE
                        
                                ;UNALLOCATED PARAMETERS FOLLOW
                        
                        
   FA33                 UNACNT: .BLKB   1               ;UNALLOCATED RECORD COUNT
                        
   FA34                 UNADSK: .BLKB   1               ;      "     DISK #     
   FA35                 UNATRK: .BLKB   2               ;      "     TRACK #
   FA37                 UNASEC: .BLKB   2               ;      "     SECTOR #
                        
   FA39                 NEWSEC: .BLKB   2               ;CP/M SET SECTOR
                        
   FA3B                 RSFLAG: .BLKB   1               ;READ SECTOR FLAG
   FA3C                 READOP: .BLKB   1               ;READ = 0, WRITE = 1
   FA3D                 HSTACT: .BLKB   1               ;0 = HOST NOT ACTIVE
   FA3E                 HSTWRT: .BLKB   1               ;HOST WRITTEN FLAG
                        
                        
   FA3F                 HSTDSK: .BLKB   1






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 42




   FA40                 HSTTRK: .BLKB   2
   FA42                 HSTSEC: .BLKB   2
                        
   FA44                 SEKDSK: .BLKB   1
   FA45                 SEKTRK: .BLKB   2
   FA47                 SEKHST: .BLKB   2
                        
   0016                         UNALEN  ==      .-UNACNT
                        
                        
                        ;********************************************************
                        ; APB COPY FOR CURRENT DISK. THE APB CONTAINS SEVERAL
                        ; IMPORTANT BYTES NEEDED TO CONTROL THE ACTIVE DISK
                        ; DRIVE. THE EXACT LENGTH AND ORDERING OF THESE ENTRIES
                        ; IS CRITICAL, SO CHANGES MUST BE MADE WITH CARE. ONLY
                        ; THE FLAG BYTE HAS ANY MEANING FOR A HARD DISK.
                        ;********************************************************
                        
   FA49                 ATABLE:
   FA49                 SS0N:   .BLKB   1               ;SYSTEM TRACK VF2 CONTROL BYTES
   FA4A                 SS0W:   .BLKB   1
   FA4B                 SS1N:   .BLKB   1
   FA4C                 SS1W:   .BLKB   1
   FA4D                 US0N:   .BLKB   1               ;USER TRACK VF2 CONTROL BYTES
   FA4E                 US0W:   .BLKB   1
   FA4F                 US1N:   .BLKB   1
   FA50                 US1W:   .BLKB   1
   FA51                 TRACK:  .BLKB   1               ;CURRENT TRACK
   FA52                 SPEED:  .BLKB   1               ;DRIVE SEEK SPEED
   FA53                 FLAG:   .BLKB   1               ;FLAG BYTE
   FA54                 OFF:    .BLKB   2               ;NUMBER OF SYSTEM TRACKS
   FA56                 SSLEN:  .BLKB   1               ;SECTOR LENGTH, SYSTEM
   FA57                 SLRPS:  .BLKB   1               ;RECORDS PER SIDE, SYS TRACKS
   FA58                 USLEN:  .BLKB   1               ;SECTOR LENGTH, USER TRACKS
   FA59                 ULRPS:  .BLKB   1               ;RECORDS PER SIDE, USER TRACKS
                        
   0011                 ALEN    ==      .-ATABLE        ;ATABLE LENGTH
                        
   FA5A                 CHKRDS: .BLKB   1               ;READ CHECK RETRIES
   FA5B                 DEDMA:  .BLKB   2               ;DE FOR DMA OP.
                        
                        
                        ;********************************************************
                        ; FLOPPY DISK APBS, DPBS AND TRANSLATE TABLES. THE APB
                        ; FOR EACH DRIVE IS HERE, FOLLOWED BY THE DPB, FOLLOWED
                        ; BY THE TRANSLATE TABLE. EXTERNAL ROUTINES NEEDING TO
                        ; ACCESS THE APB ASSUME THAT IT IMMEDIATELY PRECEDES
                        ; THE DPB.
                        ;********************************************************
                        
   FA5D                 APB0:   .BLKB   ALEN            ;AUXILIARY PARAMETER BLOCK
   FA6E                 DPB0:   .BLKB   15              ;DISK PARAMETER BLOCK
                        
   000F                 DPBLEN  ==      .-DPB0
                        






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 43




   FA7D                 TRANS0: .BLKB   88              ;TRANSLATE TABLE
                        
   0058                 TRALEN  ==      .-TRANS0
   0078                 APBDIS  ==      .-APB0
                        
                        
   FAD5                 APB1:   .BLKB   ALEN
   FAE6                 DPB1:   .BLKB   15
   FAF5                 TRANS1: .BLKB   88
                        
                        
   FB4D                 APB2:   .BLKB   ALEN
   FB5E                 DPB2:   .BLKB   15
   FB6D                 TRANS2: .BLKB   88
                        
                        
   FBC5                 APB3:   .BLKB   ALEN
   FBD6                 DPB3:   .BLKB   15
   FBE5                 TRANS3: .BLKB   88
                        
                        
                        
                        
                        ;********************************************************
                        ; CP/M WORK AREA. USED BY CP/M FOR DIRECTORY
                        ; OPERATIONS, FLOPPY DISK ALLOCATION VECTORS,
                        ; AND FLOPPY DISK CHANGED DISK CHECKSUMS.
                        ;********************************************************
                        
   FC3D                 DIRBUF: .BLKB   128             ;DIRECTORY OPERATION BUFFER
                        
   FCBD                 ALV0:   .BLKB   108             ;ALLOCATION VECTOR
   FD29                 CSV0:   .BLKB   64              ;CHECKSUM VECTOR
                        
   FD69                 ALV1:   .BLKB   108
   FDD5                 CSV1:   .BLKB   64
                        
                        
   FE15                 ALV2:   .BLKB   108
   FE81                 CSV2:   .BLKB   64
                        
   FEC1                 ALV3:   .BLKB   108
   FF2D                 CSV3:   .BLKB   64
                        
   FF6D                 LASLOC:
   0967                 WRKSP   ==      .-HSTBUF
                        
                        ; END OF WORK AREA.
                        
   3180                 OFFST   ==      1F80H -BIOS
                        
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        ;The following assembler directives give important
                        ;information about the size and location of the BIOS
                        ;after assembly. In particular, the printout will warn if






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 44




                        ;the BIOS Is too large for the allocated space (default 
                        ;3K). You will need the BIOS OFFSET and MOVCPM VALUE.
                        ;
                        ;The biggest change from the original is that we no 
                        ;longer have a console I/O parameters table, so there is
                        ;no need to print its location.
                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                        
                                .IF1,[
                        
                        
                                .DEFINE BADMEM[XX]=[
                                .PRNTX  / !! ** BIOS EXCEEDS MEMORY SIZE BY XX BYTES, SET 'BIOSIZ' LARGER ** !!/        ]
                        
                                .DEFINE OKMEM[XX]=[
                                .PRNTX  /XX   BYTES OF MEMORY LEFT BY BIOS/     ]
                        
                                .DEFINE SBIOS[XX]=[
                                .PRNTX  /XX IS START OF BIOS/                   ]
                        
                                .DEFINE LASTM[XX]=[
                                .PRNTX  /XX IS LAST LOCATION USED/              ]
                        
                                .DEFINE BDOSL[XX]=[
                                .PRNTX  /XX IS START OF BDOS/                   ]
                        
                                .DEFINE CCPL[XX]=[
                                .PRNTX  /XX IS START OF CCP/                    ]
                        
                                .DEFINE LEFMEM[XX]=[
                                .PRNTX  /XX IS 1st FREE ADDRESS AFTER BIOS/     ]
                        
                                .DEFINE WORKSP[XX]=[
                                .PRNTX  /XX BYTES IS WORKSPACE USED BY BIOS/]
                        
                                .DEFINE OFFSET[XX]=[
                                .PRNTX  /XX IS BIOS OFFSET /                    ]
                        
                        
                                .DEFINE MOVCPM[XX]=[
                                .PRNTX  /XX   IS MOVCPM VALUE /                 ]
                        
                                .DEFINE CODEND[XX]=[
                                .PRNTX  /XX IS LAST BIOS RUNTIME CODE OR STATIC DATA LOCATION /]
                        
                                .DEFINE WRKEND[XX]=[
                                .PRNTX  /XX IS END OF DISCARDED INITIALIZATION CODE /   ]
                        
                                .IFG    (.-BIOS)-(6*256+BIOSIZ*1024),[
                        
                                BADMEM  \((.-BIOS)-(6*256+BIOSIZ*1024))
                        
                                .RADIX  16
                                CCPL    \CCP
                                BDOSL   \BDOS






TDL Z80 CP/M DISK ASSEMBLER VERSION 2.21                                                                                   PAGE 45




                                SBIOS   \BIOS
                                CODEND  \HSTBUF-1
                                WRKEND  \BIOEND
                                .RADIX  10
                                WORKSP  \WRKSP
                                .RADIX  16
                                LASTM   \.-1
                                LEFMEM  \.
                                OFFSET  \OFFST
                                .RADIX  10
                                MOVCPM  \MOVEIT
                        
                                        ][
                        
                                OKMEM   \ (MSIZ*1024)-LASLOC
                        
                        
                                .RADIX  16
                                CCPL    \CCP
                                BDOSL   \BDOS
                                SBIOS   \BIOS
                                CODEND  \HSTBUF-1
                                WRKEND  \BIOEND
                                .RADIX  10
                                WORKSP  \WRKSP
                                .RADIX  16
                                LASTM   \.-1
                                LEFMEM  \.
                                OFFSET  \OFFST
                                .RADIX  10
                                MOVCPM  \MOVEIT
                        
                        
                                        ]
                                        ]
                        
                        
                        
                        
                        
                                .END

















                                         