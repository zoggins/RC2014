Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2021.02.10 - 20:39:37]

PAPTAP.ASM
Errors: 0

       1   00:9000                      ;NAM PAPTAP
       2   00:9000                      ; * HIGH SPEED PAPER TAPE LOADER PROGRAM
       3   00:9000                      ; * DEVELOPED BY DR. CHARLES ADAMS
       4   00:9000                      ; * TEXAS A&M UNIVERSITY
       5   00:9000                      ; *
       6   00:9000                      ; * MODIFIED BY CHRISTOPHER MALLERY
       7   00:9000                      ; * - Ported to RC2014
       8   00:9000                      ; *
       9   00:9000                      ; * D0 - D7 == PIO PORT A 0-7
      10   00:9000                      ; * ACK     == PIO PORT B 0
      11   00:9000                      ; * RDY     == PIO PORT B 7
      12   00:9000                       		    ORG		$9000
      13   00:9000                                 
      14   00:9000  (00:0068)           PIOADPORT 	EQU 	0x68			; PIO port A data register
      15   00:9000  (00:0069)           PIOBDPORT 	EQU 	0x69			; PIO port B data register
      16   00:9000  (00:006A)           PIOACPORT 	EQU 	0x6A			; PIO port A control register
      17   00:9000  (00:006B)           PIOBCPORT 	EQU 	0x6B			; PIO port B control register
      18   00:9000                      
      19   00:9000  (00:0080)           SERDEV      EQU     0x80            ; SERIAL DEVICE ADDRESS
      20   00:9000                      
      21   00:9000  CD 47 90            ENTER       CALL    PIASUP          ; INIT PIA
      22   00:9003  CD 60 90            START       CALL    PIADAT          ; GET 1ST BYTE
      23   00:9006  FE 3A                           CP      ':'            ; IS IT AN :?
      24   00:9008  C2 03 90                        JP      NZ, START       ; IF NOT, START OVER
      25   00:900B  3E 00                           LD      A, 0x00
      26   00:900D  32 CD 90                        LD      (CHKSUM), A
      27   00:9010  CD 7E 90                        CALL     GETBYTE        ; GET THE BYTE COUNT
      28   00:9013  32 C9 90                        LD      (NUMBYT), A
      29   00:9016  CD 9C 90                        CALL    GETADDR         ; GET ADDRESS AND LOAD IX
      30   00:9019  CD 7E 90                        CALL    GETBYTE         ; GET RECORD TYPE
      31   00:901C  FE 00                           CP      0x00            ; IF NOT ZERO START OVER
      32   00:901E  C2 03 90                        JP      NZ, START  
      33   00:9021                      
      34   00:9021  CD 7E 90            LOOP        CALL    GETBYTE        ; READ THE BYTES
      35   00:9024  DD 77 00                        LD      (IX+0), A 
      36   00:9027  DD 23                           INC     IX
      37   00:9029  3A C9 90                        LD      A, (NUMBYT)
      38   00:902C  3D                              DEC     A
      39   00:902D  32 C9 90                        LD      (NUMBYT), A
      40   00:9030  CA 36 90                        JP      Z, CHKCHK      ; LAST BYTE IS CHECKSUM
      41   00:9033  C3 21 90                        JP      LOOP
      42   00:9036                      
      43   00:9036  CD 8B 90            CHKCHK      CALL    GBNOCHK         ; CHECK THE CHECKSUM
      44   00:9039  47                              LD      B, A
      45   00:903A  3A CD 90                        LD      A, (CHKSUM)
      46   00:903D  80                              ADD     A, B            
      47   00:903E  CA 03 90                        JP      Z, START        ; GO TO NEXT LINE
      48   00:9041  3E 21                           LD      A, '!'
      49   00:9043  CD BA 90                        CALL    COUT
      50   00:9046  C7                              RST     0x00                   
      51   00:9047                      
      52   00:9047                      ;*********** PIASUP - PIA SETUP ROUTINE - SPECIFIC TO STEPHEN COUSIN'S PIO CARD
      53   00:9047  3E CF               PIASUP      LD		A, 11001111B	    ; Set PIO B to control mode
      54   00:9049  D3 6B               			OUT		(PIOBCPORT), A
      55   00:904B  3E FE               			LD		A, 11111110B	    ; PB7-PB1 input, PB-0 output
      56   00:904D  D3 6B               			OUT		(PIOBCPORT), A
      57   00:904F  3E 00                           LD      A, 0x00
      58   00:9051  D3 69                           OUT     (PIOBDPORT), A      ; ACK = 0
      59   00:9053  3E CF                           LD		A, 11001111B	    ; Set PIO A to control mode
      60   00:9055  D3 6A               			OUT		(PIOACPORT), A
      61   00:9057  3E FF               			LD		A, 11111111B	    ; PA7-PA0 input
      62   00:9059  D3 6A               			OUT		(PIOACPORT), A
      63   00:905B  3E 01                           LD      A, 0x01
      64   00:905D  D3 69                           OUT     (PIOBDPORT), A      ; ACK = 1
      65   00:905F  C9                              RET
      66   00:9060                      
      67   00:9060                      ;*********** PIADAT - GET DATA FROM PIA - SPECIFIC TO STEPHEN COUSIN'S PIO CARD
      68   00:9060  3E 00               PIADAT      LD      A, 0x00             ; ACK = 0
      69   00:9062  D3 69                           OUT     (PIOBDPORT), A      
      70   00:9064  DB 69               DATLOP      IN      A, (PIOBDPORT)      ; GET RDY ON PORT B
      71   00:9066  E6 80                           AND     0x80
      72   00:9068  FA 6E 90                        JP      M, GETDAT           ; DATA PRESENT? (BIT 7 == 1)
      73   00:906B  C3 64 90                        JP      DATLOP              ; NOT YET. KEEP TRYING.
      74   00:906E  DB 68               GETDAT      IN      A, (PIOADPORT)      ; YES. GET THE DATA,
      75   00:9070  32 CC 90                        LD      (TMPBYTE), A        ; SAVE IT
      76   00:9073  CD BA 90                        CALL    COUT
      77   00:9076  3E 01                           LD      A, 0x01             ; ACK = 1
      78   00:9078  D3 69                           OUT     (PIOBDPORT), A
      79   00:907A  3A CC 90                        LD      A, (TMPBYTE)        ; PUT DATA BACK IN REGISTER
      80   00:907D  C9                              RET                         ; AND LEAVE...
      81   00:907E                      
      82   00:907E                      ;*********** GETBYTE - READ ASCII HEX BYTE (2 digits)
      83   00:907E  CD 8B 90            GETBYTE     CALL    GBNOCHK
      84   00:9081  47                              LD      B, A        ; SAVE THE BYTE
      85   00:9082  3A CD 90                        LD      A, (CHKSUM) ; ADD TO CHECKSUM
      86   00:9085  80                              ADD     A, B
      87   00:9086  32 CD 90                        LD     (CHKSUM), A
      88   00:9089  78                              LD      A, B        ; RESTORE THE BYTE
      89   00:908A  C9                              RET
      90   00:908B                      
      91   00:908B  CD AD 90            GBNOCHK     CALL    A2H         ; GET FIRST CHARACTER TO HEX
      92   00:908E  CB 27                           SLA     A           ; MOVE IT UP 4 BITS
      93   00:9090  CB 27                           SLA     A
      94   00:9092  CB 27                           SLA     A
      95   00:9094  CB 27                           SLA     A
      96   00:9096  47                              LD      B, A
      97   00:9097  CD AD 90                        CALL    A2H         ; GET SECOND CHARACTER TO HEX
      98   00:909A  80                              ADD     A, B        ; ADD THEM TOGETHER
      99   00:909B  C9                              RET
     100   00:909C                      
     101   00:909C                      ;*********** GETADDR - READ ADDRESS AND LOAD X
     102   00:909C  CD 7E 90            GETADDR     CALL    GETBYTE
     103   00:909F  32 CB 90                        LD      (TMPADDR1), A
     104   00:90A2  CD 7E 90                        CALL    GETBYTE
     105   00:90A5  32 CA 90                        LD      (TMPADDR2), A
     106   00:90A8  DD 2A CA 90                     LD      IX, (TMPADDR2)
     107   00:90AC  C9                              RET
     108   00:90AD                      
     109   00:90AD                      ;*********** A2H - READ SINGLE ASCII BYTE AND CONVERT TO HEX
     110   00:90AD  CD 60 90            A2H         CALL    PIADAT
     111   00:90B0  D6 30                           SUB     0x30        
     112   00:90B2  FE 0A                           CP      0x0A
     113   00:90B4  DA B9 90                        JP      C, RT
     114   00:90B7  D6 07                           SUB     0x07
     115   00:90B9  C9                  RT:         RET
     116   00:90BA                      
     117   00:90BA                      ;*********** COUT - SPECIFIC TO ROMWBW ON RC2014
     118   00:90BA                      COUT:
     119   00:90BA                      	; SAVE ALL INCOMING REGISTERS
     120   00:90BA  F5                  	PUSH	AF
     121   00:90BB  C5                  	PUSH	BC
     122   00:90BC  D5                  	PUSH	DE
     123   00:90BD  E5                  	PUSH	HL
     124   00:90BE                      ;
     125   00:90BE                      	; OUTPUT CHARACTER TO CONSOLE VIA UBIOS
     126   00:90BE  5F                  	LD	E, A
     127   00:90BF  06 01               	LD	B, 0x01
     128   00:90C1  0E 80                   LD  C, SERDEV
     129   00:90C3  CF                  	RST	08
     130   00:90C4                      ;
     131   00:90C4                      	; RESTORE ALL REGISTERS
     132   00:90C4  E1                  	POP	HL
     133   00:90C5  D1                  	POP	DE
     134   00:90C6  C1                  	POP	BC
     135   00:90C7  F1                  	POP	AF
     136   00:90C8  C9                  	RET
     137   00:90C9                      
     138   00:90C9  01                  NUMBYT      DB     1           ; BYTES LEFT TO READ
     139   00:90CA  01                  TMPADDR2    DB     1           ; TEMP ADDRESS POINTER
     140   00:90CB  01                  TMPADDR1    DB     1           
     141   00:90CC  01                  TMPBYTE     DB     1
     142   00:90CD  01                  CHKSUM      DB     1           ; RUNNING CHECKSUM
     143   00:90CE                      
     144   00:90CE                                  END

    LABELS
-------------------------------------------------
00:00000068   PIOADPORT
00:00000069   PIOBDPORT
00:0000006A   PIOACPORT
00:0000006B   PIOBCPORT
00:00000080   SERDEV
00:00009000 X ENTER
00:00009003   START
00:00009021   LOOP
00:00009036   CHKCHK
00:00009047   PIASUP
00:00009060   PIADAT
00:00009064   DATLOP
00:0000906E   GETDAT
00:0000907E   GETBYTE
00:0000908B   GBNOCHK
00:0000909C   GETADDR
00:000090AD   A2H
00:000090B9   RT
00:000090BA   COUT
00:000090C9   NUMBYT
00:000090CA   TMPADDR2
00:000090CB   TMPADDR1
00:000090CC   TMPBYTE
00:000090CD   CHKSUM


 Output: PAPTAP.OUT
-------------------------------------------------

 Page: 00
  Org: 00009000  Size: *  Used: 000000CE

   Address   Length Align   Label
   00009000     206         ENTER
