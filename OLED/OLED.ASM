;************************************
;* Demo of Quazar's OLED Board
;* 
;* Prints "Zoggins" to the screen
;*
;************************************

			ORG		0x0200

INIT:		CALL	RESET
			LD		HL, SEQUENCE
INITLOOP:	LD		A, (HL)
			CP		0xFF
			JR		Z, CLEAR
			CALL	COMMAND
			INC		HL
			JP		INITLOOP
CLEAR:		CALL	CLEAROLED
			CALL	SETWINDOW	; DRAW SOMETHING
TERMLOOP:	JR		TERMLOOP	; LOOP FOREVER ON EXIT
			RET

; SETS THE WINDOW FOR THE ENTIRE SCREEN
; AND DISPLAYS THE DATA IN IMAGE
SETWINDOW:	LD		A, 0x20
			CALL	COMMAND		; WINDOW COMMAND
			LD		A, 0x00
			CALL	COMMAND		; HORIZONTAL WRAPPING

			LD		A, 0x21
			CALL	COMMAND		; WINDOW COLUMNS
			LD		A, 0x04
			CALL	COMMAND		; LEFT MOST COLUMN
			LD		A, 0x83
			CALL	COMMAND		; RIGHT MOST COLUMN

			LD		A, 0x22
			CALL	COMMAND		; WINDOW ROWS
			LD		A, 0x00
			CALL	COMMAND		; TOP ROW
			LD		A, 0x03
			CALL	COMMAND		; BOTTOM ROW

			LD		A, 0xB0
			CALL	COMMAND		; SET POINTER TO START AT TOP ROW
			LD		A, 0x10
			CALL	COMMAND		; SET START AT LEFT MOST COLUMN
			LD		A, 0x04
			CALL	COMMAND		; BOTTOM ROW
DRAWIMAGE:	LD		HL, IMAGE	; IMAGE DATA
			LD		D, 0x00
WINLOOP:	LD		A, (HL)
			CALL	OLEDDATA
			INC		HL
			LD		A, (HL)
			CALL	OLEDDATA
			INC		HL
			DEC		D			; LOOP TO DRAW 512 BYTES
			JR		NZ, WINLOOP
			RET

; THIS WAS A DEMO TO SHOW PIXEL PLACEMENT
PIXELROW:	LD		A, 0xB0
			CALL	COMMAND
			LD		A, 0x10
			CALL	COMMAND
			LD		A, 0x04
			CALL	COMMAND
			XOR		A
ROWLOOP:	CALL	OLEDDATA
			INC		A
			CP		0x80
			RET		Z
			JR		ROWLOOP

; STARTUP SEQUENCE COMMANDS
SEQUENCE:	DB		0xAE, 0xD5, 0xA0, 0xA8
			DB		0x1F, 0xD3, 0x00, 0xAD
			DB		0x8E, 0xD8, 0x05, 0xA1
			DB		0xC8, 0xDA, 0x12, 0x91
			DB		0x3F, 0x3F, 0x3F, 0x3F
			DB		0x81, 0x80, 0xD9, 0xD2
			DB		0xDB, 0x34, 0xA6, 0xA4
			DB		0xAF
			DB		0xFF	

; IMAGE = ZOGGINS
IMAGE:      DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0xC3
			DB 0xE3, 0x3B, 0x1F, 0x07, 0x00, 0x00, 0xE0, 0xF0
			DB 0x38, 0x1C, 0x0C, 0x0C, 0x0C, 0x1C, 0x38, 0xF0
			DB 0xE0, 0x00, 0x00, 0xC0, 0xF0, 0x38, 0x1C, 0x0C
			DB 0x0C, 0x0C, 0x0C, 0x18, 0xFC, 0xFC, 0x00, 0x00
			DB 0x00, 0xC0, 0xF0, 0x38, 0x1C, 0x0C, 0x0C, 0x0C
			DB 0x0C, 0x18, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00
			DB 0xFC, 0xFC, 0x00, 0x00, 0x00, 0xFC, 0xFC, 0x18
			DB 0x08, 0x0C, 0x0C, 0x0C, 0x1C, 0xF8, 0xF0, 0x00
			DB 0x00, 0x00, 0x70, 0xF8, 0xDC, 0x8C, 0x8C, 0x8C
			DB 0x0C, 0x38, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x70, 0x78, 0x6E, 0x67, 0x61
			DB 0x60, 0x60, 0x60, 0x60, 0x40, 0x00, 0x0F, 0x1F
			DB 0x38, 0x70, 0x60, 0x60, 0x60, 0x70, 0x38, 0x1F
			DB 0x0F, 0x00, 0x00, 0x07, 0x1F, 0x38, 0x70, 0x60
			DB 0x60, 0x60, 0x60, 0x30, 0xFF, 0xFF, 0x00, 0x00
			DB 0x00, 0x07, 0x1F, 0x38, 0x70, 0x60, 0x60, 0x60
			DB 0x60, 0x30, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
			DB 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x00
			DB 0x00, 0x00, 0x18, 0x38, 0x71, 0x61, 0x61, 0x63
			DB 0x63, 0x33, 0x3F, 0x1E, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x0C, 0x0C
			DB 0x0C, 0x0C, 0x0C, 0x06, 0x07, 0x03, 0x00, 0x00
			DB 0x00, 0x00, 0x07, 0x07, 0x0C, 0x0C, 0x0C, 0x0C
			DB 0x0C, 0x06, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

RESET:		LD		C, 0x50		; BASE I/O ADDRESS
			LD		B, 0x06		; RESET HIGH, /CS HIGH
			OUT		(C),A		; OUTPUT BYTE TO OLED INTERFACE
								; (VALUE OF A IRRELEVANT)
			NOP					; DELAY
			NOP
			NOP
			NOP
			RES		2,B			; RESET LOW
			OUT		(C), A		; OUTPUT BYTE TO OLED INTERFACE
			NOP					; LONG DELAY
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			RET

; ENTER WITH:  A = COMMAND VALUE
COMMAND:	LD		C,0x50		; BASE I/O ADDRESS
			LD		B,0x00		; RESET LOW, /CS LOW, /COMMAND LOW
			OUT		(C),A		; OUTPUT BYTE TO OLED INTERFACE
								; AS A COMMAND BYTE
			NOP					; DELAY
			NOP
			NOP
			NOP
			SET		1,B			; /CS HIGH
			OUT		(C),A		; OUTPUT BYTE TO OLED INTERFACE
			NOP					; LONG DELAY
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			RET

; ENTER WITH:  A = GRAPHIC BYTE TO DISPLAY MEMORY
OLEDDATA:	LD		C, 0x50		; BASE I/O ADDRESS
			LD		B, 0x01		; RESET LOW, /CS LOW, /COMMAND HIGH
			OUT		(C),A		; OUTPUT BYTE TO OLED INTERFACE
								; AS A DATA BYTE
			NOP					; DELAY
			NOP
			NOP
			NOP
			SET		1, B		; /CS HIGH
			OUT		(C),A		; OUTPUT BYTE TO OLED INTERFACE
			NOP					; SHORT DELAY
			NOP
			RET

CLEAROLED:	LD		A, 0xB0
			CALL	COMMAND		; SELECT TOP ROW
			CALL	CLEARROW
			LD		A, 0xB1
			CALL	COMMAND		; SELECT SECOND ROW
			CALL	CLEARROW
			LD		A, 0xB2
			CALL	COMMAND		; SELECT THIRD ROW
			CALL	CLEARROW
			LD		A, 0xB3		
			CALL	COMMAND		; SELECT BOTTOM ROW
			CALL	CLEARROW
			RET

CLEARROW:	LD		A, 0x10		
			CALL	COMMAND		; SELECT COLUMN COMMANDS
			LD		A, 0x04
			CALL	COMMAND		; LEFT MOST COLUMN
			XOR		A			; A = 0
			LD		D, 0x80		; COUNTER TO WRITE 128 TIMES
CLEARLOOP:	CALL	OLEDDATA	; WRITE TO DISPLAY RAM
			DEC		D			
			JR		NZ, CLEARLOOP	; DECREASE COUNTER AND LOOP
			RET

DIMDISPLAY:	LD		A, 0x81		; CONTRAST COMMAND
			CALL	COMMAND	
			LD		A, 0x00		; LOWEST BRIGHTNESS
			CALL	COMMAND	
			RET

FULLDISPLAY:	
			LD		A, 0x81		; CONTRAST COMMAND
			CALL	COMMAND	
			LD		A, 0x80		; HIGHEST BRIGHTNESS
			CALL	COMMAND	
			RET

; ENTER WITH:  A = BRIGHTNESS (Variable from 0x00 to 0x80)
SETDISPLAY:
			LD		D, A
			LD		A, 0x81		; CONTRAST COMMAND
			CALL	COMMAND	
			LD		A, D		; SET BRIGHTNESS
			CALL	COMMAND	
			RET

NORMALDIS:	LD		A, 0xA6
			CALL	COMMAND		; NORMAL DISPLAY MODE
			RET

INVERTEDDIS:	
			LD		A, 0xA7
			CALL	COMMAND		; INVERTED DISPLAY MODE
			RET